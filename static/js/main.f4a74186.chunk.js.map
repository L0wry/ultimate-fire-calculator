{"version":3,"sources":["serviceWorker.js","utils/calculatePreTaxDeductions.js","utils/calculateIncomeTax.js","utils/taxTypes.js","utils/calculateNationalInsurance.js","utils/calculateAllTax.js","context/SalaryContext.jsx","context/BudgetContext.jsx","utils/calculateCompoundInterest.js","context/InvestmentContext.jsx","components/GlobalStyles.js","theme/index.js","theme/shadows.js","theme/typography.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/SelectYears.jsx","views/dashboard/DashboardView/ExpectedMonthlyIncome.js","views/dashboard/DashboardView/NetWorthTotal.js","views/dashboard/DashboardView/AmountInvestedPerMonth.jsx","layouts/DashboardLayout/NavBar/index.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/investments/Investments/AddInvestment.jsx","views/investments/Investments/InvestmentList.jsx","views/investments/Investments/Investments.jsx","views/investments/Investments/index.js","views/budget/Budget/MonthlyTakeHomeCard.jsx","views/budget/Budget/AddExpenses.jsx","views/budget/Budget/ExpenseList.jsx","views/budget/Budget/Budget.jsx","views/budget/Budget/index.js","views/dashboard/DashboardView/TakeHomeIncome.js","views/dashboard/DashboardView/NetWorth.js","views/dashboard/DashboardView/SavingPercentage.js","utils/convertCompoundDataToGraph.js","views/dashboard/DashboardView/index.js","views/errors/NotFoundView.js","views/salaryCalculator/SalaryCalculator/IncomeDetails.jsx","views/salaryCalculator/SalaryCalculator/IncomeTaxCard.jsx","views/salaryCalculator/SalaryCalculator/NationalInsuranceCard.jsx","views/salaryCalculator/SalaryCalculator/index.jsx","views/salaryCalculator/SalaryCalculator/BreakdownCard.jsx","routes.js","views/settings/SettingsView/Notifications.js","views/settings/SettingsView/Password.js","views/settings/SettingsView/index.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","math","create","all","number","precision","BANDS","nationalInsuranceTaxBands","totalNationalInsuranceTax","weeklyNationalInsuranceTax","lowerBand","taxPercent","start","end","taxPaid","carryOver","mediumBand","upperBand","calculateAllTax","salary","taxFreePersonalAllowance","employerPensionContributionPercent","personalPensionContributionPercent","personalPensionContribution","multiply","employerPensionContribution","taxBreaks","taxBreaksTotal","reduce","accum","item","add","amount","taxableIncome","chain","subtract","done","calculatePreTaxDeductions","incomeTax","tax","band","difference","round","totalIncomeTax","calculateIncomeTax","incomeTaxBands","nationalInsuranceTax","divide","calculateNationalInsurance","totalTakeHome","React","createContext","Provider","Consumer","SalaryContextProvider","children","state","JSON","parse","localStorage","getItem","useState","userTax","setUserTax","value","setUserFinances","addMultipleInvestments","setItem","stringify","name","monthlyContribution","BudgetContextProvider","expenses","setExpenses","expenseTotal","length","filter","checked","acc","i","cost","addExpense","newExpenses","concat","parseFloat","checkExpense","idx","map","expense","index","removeExpense","_","calculateYearlyCompoundWithCharge","initialAmount","expectedReturn","annualCharge","noOfYearsToMature","compoundInterest","totalAmount","calculateMonthlyCompoundInterest","totalAmountAfterMaturing","balance","cumulativeInterest","earnedInterest","InvestmentContextProvider","investments","setInvestments","yearsToMature","setYearsToMature","saveInvestments","investmentToSave","saveYearsToMature","years","investment","investmentToRecalculate","compoundData","onItemSave","editMode","investmentCopy","addInvestment","getAmountInvestedPerMonth","getTotalNetWorthInXYears","investmentsToAdd","copy","newInvestment","isInvestmentAlreadyInList","findIndex","oldInvestments","push","removeInvestment","editInvestment","getExpectedInterestIncomeInXYears","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","theme","createMuiTheme","typography","palette","background","dark","default","colors","common","white","paper","primary","main","blue","secondary","text","blueGrey","shadows","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","h1","fontWeight","letterSpacing","h2","h3","h4","h5","h6","overline","display","paddingTop","paddingBottom","button","color","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","formControl","minWidth","Array","fill","SelectYears","open","setOpen","handleClose","handleOpen","Box","mt","alignItems","FormControl","Typography","gutterBottom","variant","Select","labelId","id","onClose","onOpen","onChange","e","target","year","MenuItem","key","root","ExpectedMonthlyIncome","Card","CardContent","Grid","container","direction","align","NetWorthTotal","justify","AmountInvestedPerMonth","items","DollarSign","Download","TrendingUp","BarChartIcon","mobileDrawer","desktopDrawer","top","NavBar","onMobileClose","openMobile","useLocation","useEffect","pathname","content","p","List","Hidden","lgUp","Drawer","anchor","mdDown","defaultProps","avatar","TopBar","onMobileNavOpen","AppBar","elevation","Toolbar","smDown","ml","mdUp","flexGrow","IconButton","onClick","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","toolbar","mb","MainLayout","Page","forwardRef","ref","Helmet","Input","label","inputProps","props","useField","field","meta","TextField","required","fullWidth","InputProps","touched","error","AddInvestment","Divider","initialValues","validationSchema","object","string","onSubmit","setSubmitting","resetForm","type","startAdornment","InputAdornment","position","endAdornment","InvestmentList","memo","onItemEdit","onItemRemove","onItemCheck","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","setStatus","submitForm","Save","SaveOutlined","aria-label","DeleteOutlined","Edit","EditOutlined","Investments","minHeight","Index","Container","maxWidth","red","differenceIcon","differenceValue","MonthlyTakeHomeCard","expensesCost","Expenses","ExpenseList","Checkbox","ExpenseHeaderCard","budgetContext","lg","sm","xl","xs","AddExpenses","Budget","TakeHomeIncome","context","colours","Object","values","indigo","NetWorth","investmentData","useTheme","chartData","data","CardHeader","right","left","bottom","keys","investmentType","dataKey","stackId","stroke","green","TrafficByDevice","startAngle","endAngle","innerRadius","outerRadius","paddingAngle","entry","textAlign","style","convertCompoundDataToGraph","months","isYearInAccum","find","entries","Dashboard","md","image","marginTop","NotFoundView","flexDirection","alt","src","importButton","exportButton","IncomeDetails","userFinance","statsItem","statsIcon","IncomeTaxCard","NationalInsuranceCard","table","SalaryCalculator","routes","path","element","App","routing","useRoutes","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sOAaoBA,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,8BCjBEC,EAAOC,YAAOC,IAAK,CACvBC,OAAQ,YACRC,UAAW,K,aCFPC,EAAQ,CAAC,YAAa,aAAc,aAEpCL,EAAOC,YAAOC,IAAK,CACvBC,OAAQ,YACRC,UAAW,KCoBAE,EAA4B,CACvCC,0BAA2B,EAC3BC,2BAA4B,EAC5BC,UAAW,CACTC,WAAY,EACZC,MAAO,EACPC,IAAK,IACLC,QAAS,EACTC,UAAW,GAEbC,WAAY,CACVL,WAAY,IACZC,MAAO,OACPC,IAAK,IACLC,QAAS,EACTC,UAAW,GAEbE,UAAW,CACTN,WAAY,IACZC,MAAO,OACPC,IAAK,SACLC,QAAS,EACTC,UAAW,IC9CTT,EAAQ,CAAC,YAAa,aAAc,aAEpCL,EAAOC,YAAOC,IAAK,CACvBC,OAAQ,YACRC,UAAW,KCDPJ,EAAOC,YAAOC,IAAK,CACvBC,OAAQ,YACRC,UAAW,KAGE,SAASa,EAAT,GAI6B,IAAD,IAHzCC,cAGyC,MAHhC,EAGgC,MAFzCC,gCAEyC,MAFd,MAEc,MADzCC,0CACyC,MADJ,EACI,MAAzCC,0CAAyC,MAAJ,EAAI,EAGjCC,EAA8BtB,EAAKuB,SAASF,EAAoCH,GAChFM,EAA8BxB,EAAKuB,SAASH,EAAoCF,GAJ/C,EJPpC,YAAqG,IAAD,IAA/DA,cAA+D,MAAtD,EAAsD,MAAnDI,mCAAmD,MAArB,EAAqB,EAAhBG,EAAgB,uDAAJ,GAE/FC,EAAiBD,EAAUE,QAAO,SAACC,EAAOC,GAAR,OAAiB7B,EAAK8B,IAAIF,EAAOC,EAAKE,UAAS,GACnFC,EAAgBhC,EACjBiC,MAAMf,GACNgB,SAASZ,GACTY,SAASR,GACTS,OAOH,MAAO,CACLT,iBACAM,cAPFA,EAAgBA,EAAgB,EAC5BA,EAAgBA,EAChB,GIEuCI,CAA0B,CAACjB,2BAA0BD,SAAQI,gCAA9FI,EAN+B,EAM/BA,eAAgBM,EANe,EAMfA,cAElBK,EHXwB,SAACC,EAAKN,GAGtC,IAHwD,EAGpDlB,EAFJkB,EAAgBhC,EAAKkC,SAASF,EAAeM,EAAInB,0BADO,cAKrCd,GALqC,IAKxD,2BAA0B,CAAC,IAAhBkC,EAAe,QAClBC,EAAaxC,EAAKkC,SAASI,EAAIC,GAAM3B,IAAK0B,EAAIC,GAAM5B,OAE1D,KAAIX,EAAKkC,SAASpB,EAAW0B,GAAc,GAMpC,CACLF,EAAIC,GAAM1B,QAAUb,EAAKuB,SAAST,EAAWwB,EAAIC,GAAM7B,YAAc,EACjEV,EAAKyC,MAAMzC,EAAKuB,SAAST,EAAWwB,EAAIC,GAAM7B,YAlBnC,GAmBX,EAEJ4B,EAAII,eAAiB1C,EAAKyC,MAAMzC,EAAK8B,IAAIQ,EAAII,eAAgBJ,EAAIC,GAAM1B,SArBxD,GAsBfC,EAAY,EACZ,MAZAwB,EAAIC,GAAM1B,QAAUb,EAAKyC,MAAMzC,EAAKuB,SAASiB,EAAYF,EAAIC,GAAM7B,YAXpD,GAYf4B,EAAII,eAAiB1C,EAAK8B,IAAIQ,EAAII,eAAgBJ,EAAIC,GAAM1B,SAC5DyB,EAAIC,GAAMzB,UAAYd,EAAKkC,SAASpB,EAAW0B,GAC/C1B,EAAYd,EAAKkC,SAASpB,EAAW0B,IAZe,8BAyBxD,OAAOF,EGdaK,CFtBQ,eAACxB,EAAD,uDAA4B,MAA5B,MAAwC,CACpEA,2BACAuB,eAAgB,EAChBjC,UAAW,CACTC,WAAY,GACZC,MAAOQ,EAA2B,IAClCP,IAAK,IACLC,QAAS,EACTC,UAAW,GAEbC,WAAY,CACVL,WAAY,GACZC,MAAO,SACPC,IAAK,KACLC,QAAS,EACTC,UAAW,GAEbE,UAAW,CACTN,WAAY,IACZC,MAAO,UACPC,IAAK,SACLC,QAAS,EACTC,UAAW,IEA0B8B,CAAezB,GAA2Ba,GACzEa,EDVgC,SAACP,EAAKN,GAC9CM,EAAI9B,2BAA6B,EACjC8B,EAAI/B,0BAA4B,EAChC,IAHgE,EAK5DO,EAFiBd,EAAK8C,OAAOd,EAPb,IAI4C,cAO7C3B,GAP6C,IAOhE,2BAA0B,CAAC,IAAhBkC,EAAe,QAClBC,EAAaxC,EAAKkC,SAASI,EAAIC,GAAM3B,IAAK0B,EAAIC,GAAM5B,OAC1D,KAAIX,EAAKkC,SAASpB,EAAW0B,GAAc,GAQpC,CACLF,EAAIC,GAAM1B,QAAUb,EAAKuB,SAAST,EAAWwB,EAAIC,GAAM7B,YAAc,EACjEV,EAAKyC,MAAMzC,EAAKuB,SAAST,EAAWwB,EAAIC,GAAM7B,YAtBnC,GAuBX,EAEJ4B,EAAI9B,2BAA6BR,EAAK8B,IAAIQ,EAAI9B,2BAA4B8B,EAAIC,GAAM1B,SAEpFC,EAAY,EACZ,MAfAwB,EAAIC,GAAM1B,QAAUb,EAAKyC,MAAMzC,EAAKuB,SAASiB,EAAYF,EAAIC,GAAM7B,YAbpD,GAcf4B,EAAI9B,2BAA6BR,EAAK8B,IAAIQ,EAAI9B,2BAA4B8B,EAAIC,GAAM1B,SAGpFyB,EAAIC,GAAMzB,UAAYd,EAAKkC,SAASpB,EAAW0B,GAC/C1B,EAAYd,EAAKkC,SAASpB,EAAW0B,IAfuB,8BA6BhE,OADAF,EAAI/B,0BAA4BP,EAAKyC,MAAMzC,EAAKuB,SAASe,EAAI9B,2BAhCzC,IACD,GAgCZ8B,ECnBwBS,CAA2BzC,EAA2B0B,GAEnF,MAAO,CACLd,SACAE,qCACAC,qCACAC,8BACAE,8BACAE,iBACAM,gBACAK,YACAQ,uBACAG,cAAehD,EAAKyC,MAAMvB,EAASI,EAA8Be,EAAUK,eAAiBG,EAAqBtC,0BAA2B,I,MChCnH0C,IAAMC,gBAA7BC,E,EAAAA,SAAUC,E,EAAAA,SAEZpD,EAAOC,YAAOC,IAAK,CACxBC,OAAQ,YACRC,UAAW,KAGNiD,EAAwB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1BC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,WAAaH,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GADzD,EAEjBC,mBAASL,GAFQ,mBAExCM,EAFwC,KAE/BC,EAF+B,KAwB/C,OACC,kBAACX,EAAD,CAAUY,MAAO,CAAEC,gBArBI,SAAC,EAAwGC,GAA4B,IAAlI/C,EAAiI,EAAjIA,OAAQC,EAAyH,EAAzHA,yBAAyH,IAA/FG,mCAA+F,MAAjE,EAAiE,MAA9DE,4BACvFc,EAAMrB,EAAgB,CAC3BC,SACAC,2BACAC,yCAJ0J,MAAhC,EAAgC,GAIxF,IAClEC,mCAAoCC,EAA8B,MAEnEwC,EAAWxB,GACXoB,aAAaQ,QAAQ,SAAUV,KAAKW,UAAU7B,IAE9C2B,EAAuB,CAAC,CACvBG,KAAM,4CACNC,oBAAqBrE,EAAKyC,MAAMzC,EAAK8C,OAAOR,EAAId,4BAA6B,IAAK,IAEnF,CACC4C,KAAM,4CACNC,oBAAqBrE,EAAKyC,MAAMzC,EAAK8C,OAAOR,EAAIhB,4BAA6B,IAAK,OAK/CuC,YAClCP,I,EClC2BL,IAAMC,gBAA7BC,E,EAAAA,SAAUC,E,EAAAA,SAEZpD,EAAOC,YAAOC,IAAK,CACrBC,OAAQ,YACRC,UAAW,KAKTkE,EAAwB,SAAC,GAAkB,IAAhBhB,EAAe,EAAfA,SACzBC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,aAAeH,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,GAD9D,EAEZC,mBAASL,GAFG,mBAErCgB,EAFqC,KAE3BC,EAF2B,KAmCpCC,EAAeF,EAASG,OAAS,EACrCH,EAASI,QAAO,SAAA9C,GAAI,OAAIA,EAAK+C,WAASjD,QAAO,SAACkD,EAAKC,GAAN,OAAY9E,EAAK8B,IAAI+C,EAAKC,EAAEC,QAAO,GAChF,EAEP,OACC,kBAAC,EAAD,CAAUhB,MAAO,CAAEQ,WAAUS,WApCN,SAAC,GAAkB,IAAjBZ,EAAgB,EAAhBA,KAAMW,EAAU,EAAVA,KACzB,GAAa,KAATX,IAAgBW,EAAM,CACxB,IAAME,EAAcV,EAASW,OAAO,CAClCd,OACAW,KAAMI,WAAWJ,GACjBH,SAAS,IAGXJ,EAAYS,GACZvB,aAAaQ,QAAQ,WAAYV,KAAKW,UAAUc,MA2BfG,aAvBhB,SAAAC,GACnBb,EACED,EAASe,KAAI,SAACC,EAASC,GAKrB,OAJIH,IAAQG,IACVD,EAAQX,SAAWW,EAAQX,SAGtBW,OAgBsCE,cAX7B,SAAAJ,GACpB,IAAMJ,EAAcV,EAASI,QAAO,SAACe,EAAGF,GAAJ,OAAcH,IAAQG,KAC1DhB,EAAYS,GACZvB,aAAaQ,QAAQ,WAAYV,KAAKW,UAAUc,KAQgBR,iBACpEnB,I,iBClDEtD,EAAOC,YAAOC,IAAK,CACvBC,OAAQ,YACRC,UAAW,KAMAuF,EAAoC,SAAC,GAWhD,IALK,IAAD,IALJC,qBAKI,MALY,EAKZ,MAJJC,sBAII,MAJa,EAIb,MAHJxB,2BAGI,MAHkB,EAGlB,MAFJyB,oBAEI,MAFW,EAEX,MADJC,yBACI,MADgB,EAChB,EACEC,EAAmB,GACrBC,EAAcL,EAGTd,EAAI,EAAGA,GAAKiB,EAAmBjB,IAAM,CAC5CkB,EAAiB,QAAD,OAASlB,IAAOoB,EAAiC,CAC/DD,cACAJ,iBACAxB,wBAGF,IAAM8B,EAA2BH,EAAiB,QAAD,OAASlB,IAAzB,gBArBV,KAqBuEsB,QAE9FH,EAAcH,EACZ9F,EAAKyC,MAAMzC,EAAKkC,SAASiE,EAA0BnG,EAAKuB,SAAS4E,EAA0BL,IAvB5E,GAwBfK,EAGJ,OAAOH,GAGIE,EAAmC,SAAC,GAW/C,IAPO,IAHLD,EAGI,EAHJA,YACAJ,EAEI,EAFJA,eACAxB,EACI,EADJA,oBAEI2B,EAAmB,GAErBI,EAAUH,EACTI,EAAqB,EAGjBvB,EAAI,EAAGA,GA1CS,GA0CgBA,IAAM,CAC7C,IAAMwB,EAAiBtG,EAAKiC,MAAMmE,GAAS7E,SAASsE,GAAgB/C,OA3C7C,IA2CwEL,MA1C9E,GA0CkGN,OACnHkE,EAAqBrG,EAAKyC,MAAMzC,EAAK8B,IAAIuE,EAAoBC,GA3C5C,GA6CjBF,EAAWpG,EAAKiC,MAAMmE,GAAStE,IAAIuC,GAAqBvC,IAAIwE,GAAgB7D,MA7C3D,GA6C+EN,OAEhG6D,EAAiB,SAAD,OAAUlB,IAAO,CAC/BwB,iBACAF,UACAC,sBAIJ,OAAOL,G,EC3DsB/C,IAAMC,gBAA7BC,E,EAAAA,SAAUC,E,EAAAA,SAEZpD,EAAOC,YAAOC,IAAK,CACvBC,OAAQ,YACRC,UAAW,KAIPmG,EAA4B,SAAC,GAAkB,IAAhBjD,EAAe,EAAfA,SAC7BC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkBH,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,GADhE,EAGZC,mBAASL,GAHG,mBAG3CiD,EAH2C,KAG9BC,EAH8B,OAKR7C,mBAAS,GALD,mBAK3C8C,EAL2C,KAK5BC,EAL4B,KAqB5CC,EAAkB,SAACC,GACvBJ,EAAeI,GACfnD,aAAaQ,QAAQ,cAAeV,KAAKW,UAAU0C,KAkHrD,OACE,kBAAC,EAAD,CAAU9C,MAAO,CAAEyC,cAAaM,kBAnIR,SAAAC,GACxBJ,EAAiBI,GACjBN,EAAe,YAAID,GAAalB,KAAI,SAAA0B,GAClC,IAAMC,EAAuB,2BACxBD,GADwB,IAE3BjB,kBAAmBgB,IAGrB,OAAO,2BACFE,GADL,IAEEC,aAAcvB,EAAkCsB,UAyHDP,gBAAeS,WAtCjD,SAAC,EAAiG9B,GAAS,IAAD,IAAvGjB,YAAuG,MAAhG,GAAgG,MAA5FwB,qBAA4F,MAA5E,EAA4E,MAAzEC,sBAAyE,MAAxD,EAAwD,MAArDxB,2BAAqD,MAA/B,EAA+B,MAA5ByB,oBAA4B,MAAb,EAAa,EACrHkB,EAAa,CACjB5C,OACAwB,cAAeT,WAAWS,GAC1BC,eAAgB7F,EAAKyC,MAAMzC,EAAK8C,OAAO+C,EAAgB,KAAM,GAC7DxB,oBAAqBc,WAAWd,GAChC0B,kBAAmBW,EACnBZ,aAAc9F,EAAK8C,OAAOgD,EAAc,KACxCsB,UAAU,GAGNC,EAAc,YAAOb,GAE3Ba,EAAehC,GAAf,2BACK2B,GADL,IAEEE,aAAcvB,EAAkCqB,KAGlDJ,EAAgBS,IAoB8DC,cAtE1D,SAAC,GAAqG,IAAD,IAAlGlD,YAAkG,MAA3F,GAA2F,MAAvFwB,qBAAuF,MAAvE,EAAuE,MAApEC,sBAAoE,MAAnD,EAAmD,MAAhDxB,2BAAgD,MAA1B,EAA0B,MAAvByB,oBAAuB,MAAR,EAAQ,EACnHkB,EAAa,CACjB5C,OACAwB,cAAeT,WAAWS,GAC1BC,eAAgB7F,EAAKyC,MAAMzC,EAAK8C,OAAO+C,EAAgB,KAAM,GAC7DxB,oBAAqBc,WAAWd,GAChC0B,kBAAmBW,EACnBZ,aAAc9F,EAAK8C,OAAOgD,EAAc,KACxCsB,UAAU,GAGZR,EAAgB,GAAD,mBACVJ,EAAY7B,QAAO,SAAAqC,GAAU,OAAIA,EAAW5C,OAASA,MAD3C,aAAC,eAGT4C,GAHQ,IAIXE,aAAcvB,EAAkCqB,SAuDyCO,0BAL7D,kBAAMf,EAAY9B,OAAS,EACzD8B,EAAY7E,QAAO,SAACC,EAAOoF,GAAR,OAAuBpF,EAAQoF,EAAW3C,sBAAqB,GAClF,GAGsHmD,yBATzF,kBAAMhB,EAAY9B,OAAS,EACxD1E,EAAKyC,MAAM+D,EAAY7E,QAAO,SAACC,EAAOoF,GAAR,OAAuBpF,EAAQoF,EAAWE,aAAX,eAAgCR,IAAiB,YAAYN,UAAS,GAAI,GACvI,GAOgJnC,uBAhHrH,SAACwD,GAE9B,IAFmD,EAE7CC,EAAI,YAAOlB,GAFkC,cAIvBiB,GAJuB,yBAIxCE,EAJwC,QAM7CC,EAA4BF,EAAKG,WAAU,SAAAC,GAAc,OAAIA,EAAe1D,OAASuD,EAAcvD,QAEvG,GAAIwD,GAA6B,EAAG,CAAC,IAC3BvD,EAAwBsD,EAAxBtD,oBACF2C,EAAU,2BACXU,EAAKE,IADM,IAEdvD,oBAAqBc,WAAWd,KAGlCqD,EAAKE,GAAL,2BACKZ,GADL,IAEEE,aAAcvB,EAAkCqB,SAG7C,CACL,IAAMA,EAAa,CACjB5C,KAAMuD,EAAcvD,KACpBwB,cAAe,EACfC,eAAgB,EAChBC,aAAc,EACdzB,oBAAqBc,WAAWwC,EAActD,qBAC9C+C,UAAU,EACVrB,kBAAmBW,GAGrBgB,EAAKK,KAAL,2BACKf,GADL,IAEEE,aAAcvB,EAAkCqB,QA7BtD,2BAA+C,IAJI,8BAuCnDJ,EAAgBc,IAyE0JM,iBAjBnJ,SAAA3C,GACvBuB,EAAgBJ,EAAY7B,QAAO,SAACe,EAAGF,GAAJ,OAAcH,IAAQG,OAgBmIyC,eAlDvK,SAAA5C,GACrBuB,EACEJ,EAAYlB,KAAI,SAAC0B,EAAYxB,GAK3B,OAJIH,IAAQG,IACVwB,EAAWI,UAAW,GAGjBJ,OA2CiMkB,kCAbpK,kBAAM1B,EAAY9B,OAAS,EACjE1E,EAAKyC,MAAM+D,EAAY7E,QAAO,SAACC,EAAOoF,GAAR,OAAuBpF,EAAQoF,EAAWE,aAAX,eAAgCR,IAAiB,YAAYJ,iBAAgB,GAAI,GAC9I,KAYChD,I,4CCpJD6E,EAAYC,aAAW,kBAAMC,YAAa,CAC9C,UAAW,CACT,IAAK,CACHC,UAAW,aACXC,OAAQ,EACRC,QAAS,GAEXC,KAAM,CACJ,yBAA0B,cAC1B,0BAA2B,YAC3BC,OAAQ,OACRC,MAAO,QAETC,KAAM,CACJC,gBAAiB,UACjBH,OAAQ,OACRC,MAAO,QAETG,EAAG,CACDC,eAAgB,QAElB,QAAS,CACPL,OAAQ,OACRC,MAAO,cAWEK,EANM,WAGnB,OAFAb,IAEO,M,yBCAMc,EA7BDC,YAAe,aAC3BC,WAAY,CACV,WAAa,6CACb,SAAY,GACZ,gBAAmB,IACnB,kBAAqB,IACrB,iBAAoB,KAEtBC,QAAS,CACPC,WAAY,CACVC,KAAM,UACNC,QAASC,IAAOC,OAAOC,MACvBC,MAAOH,IAAOC,OAAOC,OAEvBE,QAAS,CACPC,KAAML,IAAOM,KAAK,MAEpBC,UAAW,CACTF,KAAML,IAAOM,KAAK,MAEpBE,KAAM,CACJJ,QAASJ,IAAOS,SAAS,KACzBF,UAAWP,IAAOS,SAAS,OAG/BC,QC7Ba,CACb,OACA,iEACA,8DACA,8DACA,8DACA,8DACA,8DACA,8DACA,8DACA,+DACA,+DACA,+DACA,+DACA,+DACA,+DACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,kEDrB0B,aEJb,CACbC,WAAW,6CACXC,SAAU,GACVC,gBAAiB,IACjBC,kBAAmB,IACnBC,iBAAkB,IAClBC,GAAI,CACFC,WAAY,IACZL,SAAU,GACVM,cAAe,WAEjBC,GAAI,CACFF,WAAY,IACZL,SAAU,GACVM,cAAe,WAEjBE,GAAI,CACFH,WAAY,IACZL,SAAU,GACVM,cAAe,WAEjBG,GAAI,CACFJ,WAAY,IACZL,SAAU,GACVM,cAAe,WAEjBI,GAAI,CACFL,WAAY,IACZL,SAAU,GACVM,cAAe,WAEjBK,GAAI,CACFN,WAAY,IACZL,SAAU,GACVM,cAAe,WAEjBM,SAAU,CACRP,WAAY,Q,2HC3BVtC,GAAYC,aAAW,SAACa,GAAD,MAAY,CACvCpH,KAAM,CACJoJ,QAAS,OACTC,WAAY,EACZC,cAAe,GAEjBC,OAAQ,CACNC,MAAOpC,EAAMG,QAAQY,KAAKD,UAC1BU,WAAYxB,EAAME,WAAWoB,iBAC7Be,eAAgB,aAChBZ,cAAe,EACflC,QAAS,WACT+C,cAAe,OACf5C,MAAO,QAET6C,KAAM,CACJC,YAAaxC,EAAMyC,QAAQ,IAE7BC,MAAO,CACLF,YAAa,QAEfG,OAAQ,CACNP,MAAOpC,EAAMG,QAAQQ,QAAQC,KAC7B,WAAY,CACVY,WAAYxB,EAAME,WAAWoB,kBAE/B,UAAW,CACTc,MAAOpC,EAAMG,QAAQQ,QAAQC,WA+CpBgC,GA1CC,SAAC,GAMV,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,KACMC,EAGF,EAHJR,KACAG,EAEI,EAFJA,MACGM,EACC,oDACEC,EAAU/D,KAEhB,OACE,kBAACgE,GAAA,EAAD,eACEL,UAAWM,aAAKF,EAAQrK,KAAMiK,GAC9BO,gBAAc,GACVJ,GAEJ,kBAACK,GAAA,EAAD,CACEC,gBAAiBL,EAAQN,OACzBE,UAAWI,EAAQd,OACnBoB,UAAWC,IACXC,GAAIX,GAEHC,GACC,kBAACA,EAAD,CACEF,UAAWI,EAAQV,KACnBmB,KAAK,OAGT,0BAAMb,UAAWI,EAAQP,OACtBA,M,wCCpDLxD,GAAYC,aAAW,SAACa,GAAD,MAAY,CACrC2D,YAAa,CACTrE,OAAQU,EAAMyC,QAAQ,GACtBmB,SAAU,SAOZ9F,GAAQ,IAAI+F,MAAM,IAAIC,KAAK,GAAGzH,KAAI,SAACI,EAAGZ,GAAJ,OAAUA,EAAI,KAIzCkI,GAAc,WACvB,IAAMd,EAAU/D,KADa,EAGLvE,oBAAS,GAHJ,mBAGtBqJ,EAHsB,KAGhBC,EAHgB,KAKvBC,EAAc,WAChBD,GAAQ,IAGNE,EAAa,WACfF,GAAQ,IAIZ,OACI,kBAAC,EAAD,MACK,gBAAGpG,EAAH,EAAGA,kBAAmBJ,EAAtB,EAAsBA,cAAtB,OACG,kBAAC2G,EAAA,EAAD,CACIpC,QAAQ,OACRqC,GAAI,EACJC,WAAW,UACX,kBAACC,GAAA,EAAD,CAAa1B,UAAWI,EAAQU,aAC5B,kBAACa,GAAA,EAAD,CACIpC,MAAM,gBACNqC,cAAY,EACZC,QAAQ,MAHZ,wBAOA,kBAACC,GAAA,EAAD,CACIC,QAAQ,oBACRC,GAAG,cACHb,KAAMA,EACNc,QAASZ,EACTa,OAAQZ,EACRrJ,MAAO2C,EACPuH,SAAU,SAAAC,GAAC,OAAIpH,EAAkBoH,EAAEC,OAAOpK,SAEzCgD,GAAMzB,KAAI,SAAC8I,GAAD,OACP,kBAACC,GAAA,EAAD,CAAUC,IAAG,UAAKF,EAAL,UAAmBrK,MAAOqK,GAAvC,UAAiDA,EAAjD,qB,oBC1D1BjG,GAAYC,aAAW,iBAAO,CAClCmG,KAAM,CACJ7F,OAAQ,YAkDG8F,GA9Ce,SAAC,GAA4B,IAA1B1C,EAAyB,EAAzBA,UAAcG,EAAW,8BAClDC,EAAU/D,KAEhB,OACE,kBAAC,EAAD,MACG,gBAAGD,EAAH,EAAGA,kCAAmCxB,EAAtC,EAAsCA,cAAtC,OACC,kBAAC+H,GAAA,EAAD,eACE3C,UAAWM,aAAKF,EAAQqC,KAAMzC,IAC1BG,GAEJ,kBAACyC,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVtB,WAAW,UAEX,kBAACoB,EAAA,EAAD,CAAM9M,MAAI,GACR,kBAAC4L,GAAA,EAAD,CACEqB,MAAM,SACNzD,MAAM,gBACNqC,cAAY,EACZC,QAAQ,MAJV,gCAMgCjH,EANhC,WASF,kBAACiI,EAAA,EAAD,CAAM9M,MAAI,GACR,kBAAC4L,GAAA,EAAD,CACEpC,MAAM,cACNsC,QAAQ,MAFV,OAIIzF,aCrCdC,GAAYC,aAAW,iBAAO,CAClCmG,KAAM,CACJ7F,OAAQ,YAmDGqG,GA/CO,SAAC,GAA4B,IAA1BjD,EAAyB,EAAzBA,UAAcG,EAAW,8BAC1CC,EAAU/D,KAEhB,OACE,kBAAC,EAAD,MACG,gBAAGX,EAAH,EAAGA,yBAA0Bd,EAA7B,EAA6BA,cAA7B,OACC,kBAAC+H,GAAA,EAAD,eACE3C,UAAWM,aAAKF,EAAQqC,KAAMzC,IAC1BG,GAEJ,kBAACyC,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACCC,WAAS,EACTC,UAAU,SACVtB,WAAW,SACXyB,QAAQ,UAEP,kBAACL,EAAA,EAAD,CAAM9M,MAAI,GACR,kBAAC4L,GAAA,EAAD,CACEqB,MAAM,SACNzD,MAAM,gBACNqC,cAAY,EACZC,QAAQ,MAJV,sBAMsBjH,EANtB,WASA,kBAACiI,EAAA,EAAD,CAAM9M,MAAI,GACV,kBAAC4L,GAAA,EAAD,CACEpC,MAAM,cACNsC,QAAQ,MAFV,OAIInG,aCtCdW,GAAYC,aAAW,iBAAO,CAClCmG,KAAM,CACJ7F,OAAQ,YAoDGuG,GAhDgB,SAAC,GAA4B,IAA1BnD,EAAyB,EAAzBA,UAAcG,EAAW,8BACnDC,EAAU/D,KAEhB,OACE,kBAAC,EAAD,MACG,gBAAGZ,EAAH,EAAGA,0BAAH,OACC,kBAACkH,GAAA,EAAD,eACE3C,UAAWM,aAAKF,EAAQqC,KAAMzC,IAC1BG,GAEJ,kBAACyC,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVtB,WAAW,SACXyB,QAAQ,UAER,kBAACL,EAAA,EAAD,CAAM9M,MAAI,GACR,kBAAC4L,GAAA,EAAD,CACEqB,MAAM,SACNzD,MAAM,gBACNsC,QAAQ,MAHV,8BAQA,kBAACgB,EAAA,EAAD,CAAM9M,MAAI,GAEV,kBAAC4L,GAAA,EAAD,CACEC,cAAY,EACZrC,MAAM,cACNsC,QAAQ,MAHV,OAKIpG,aC5Bd2H,GAAQ,CACZ,CACEnD,KAAM,yBACNP,KAAM2D,KACNxD,MAAO,qBAET,CACEI,KAAM,cACNP,KAAM4D,KACNzD,MAAO,UAGT,CACEI,KAAM,mBACNP,KAAM6D,KACN1D,MAAO,eAET,CACEI,KAAM,iBACNP,KAAM8D,KACN3D,MAAO,cAILxD,GAAYC,aAAW,SAACa,GAAD,MAAY,CACvCsG,aAAc,CACZ5G,MAAO,KAET6G,cAAe,CACb7G,MAAO,IACP8G,IAAK,GACL/G,OAAQ,yBAKNgH,GAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WACzB/P,EAAWgQ,cACX3D,EAAU/D,KAEhB2H,qBAAU,WACJF,GAAcD,GAChBA,MAGD,CAAC9P,EAASkQ,WAEb,IAAMC,EAEJ,kBAAC3C,EAAA,EAAD,CAAK4C,EAAG,GACN,kBAACC,EAAA,EAAD,KACGhB,GAAM5J,KAAI,SAACzD,GAAD,OACT,kBAAC,GAAD,CACEkK,KAAMlK,EAAKkK,KACXuC,IAAKzM,EAAK8J,MACVA,MAAO9J,EAAK8J,MACZH,KAAM3J,EAAK2J,WAIjB,kBAAC,GAAD,MAEA,kBAACmD,EAAA,EAAD,CACEjD,QAAS,EACTkD,WAAS,EACTC,UAAU,SACVG,QAAQ,WACRzB,WAAW,UAEX,kBAACF,EAAA,EAAD,CAAKC,GAAI,IACP,kBAACqB,EAAA,EAAD,CACE9M,MAAI,GACJ,kBAAC,GAAD,OAGF,kBAAC8M,EAAA,EAAD,CACE9M,MAAI,GACJ,kBAAC,GAAD,OAGF,kBAAC8M,EAAA,EAAD,CACE9M,MAAI,GACJ,kBAAC,GAAD,UAQV,OACE,oCACE,kBAACsO,EAAA,EAAD,CAAQC,MAAI,GACV,kBAACC,GAAA,EAAD,CACEC,OAAO,OACPpE,QAAS,CAAEvC,MAAOuC,EAAQqD,cAC1BxB,QAAS4B,EACT1C,KAAM2C,EACNjC,QAAQ,aAEPqC,IAGL,kBAACG,EAAA,EAAD,CAAQI,QAAM,GACZ,kBAACF,GAAA,EAAD,CACEC,OAAO,OACPpE,QAAS,CAAEvC,MAAOuC,EAAQsD,eAC1BvC,MAAI,EACJU,QAAQ,cAEPqC,MAYXN,GAAOc,aAAe,CACpBb,cAAe,aACfC,YAAY,GAGCF,U,mDCtITvH,GAAYC,aAAW,iBAAO,CAClCmG,KAAM,GACNkC,OAAQ,CACN9H,MAAO,GACPD,OAAQ,QAyDGgI,GArDA,SAAC,GAIT,IAHL5E,EAGI,EAHJA,UACA6E,EAEI,EAFJA,gBACG1E,EACC,gDACEC,EAAU/D,KAEhB,OACE,kBAACyI,GAAA,EAAD,eACE9E,UAAWM,aAAKF,EAAQqC,KAAMzC,GAC9B+E,UAAW,GACP5E,GAEJ,kBAAC6E,GAAA,EAAD,KACE,kBAACX,EAAA,EAAD,CAAQY,QAAM,GACZ,kBAAC1D,EAAA,EAAD,CAAK2D,GAAI,GACP,kBAACvD,GAAA,EAAD,CACEpC,MAAM,cACNsC,QAAQ,MAFV,8BAQJ,kBAACwC,EAAA,EAAD,CAAQc,MAAI,GACV,kBAAC5D,EAAA,EAAD,KACE,kBAACI,GAAA,EAAD,CACEpC,MAAM,cACNsC,QAAQ,MAFV,SAQJ,kBAACN,EAAA,EAAD,CAAK6D,SAAU,IACf,kBAACf,EAAA,EAAD,CAAQC,MAAI,GACV,kBAACe,GAAA,EAAD,CACE9F,MAAM,UACN+F,QAAST,GAET,kBAAC,KAAD,WC3DNxI,GAAYC,aAAW,SAACa,GAAD,MAAY,CACvCsF,KAAM,CACJ1F,gBAAiBI,EAAMG,QAAQC,WAAWC,KAC1C2B,QAAS,OACTvC,OAAQ,OACR2I,SAAU,SACV1I,MAAO,QAET2I,QAAQ,aACNrG,QAAS,OACTsG,KAAM,WACNF,SAAU,SACVnG,WAAY,IACXjC,EAAMuI,YAAYC,GAAG,MAAQ,CAC5BC,YAAa,MAGjBC,iBAAkB,CAChB1G,QAAS,OACTsG,KAAM,WACNF,SAAU,UAEZrB,QAAS,CACPuB,KAAM,WACN7I,OAAQ,OACR2I,SAAU,YA0BCO,GAtBS,WACtB,IAAM1F,EAAU/D,KADY,EAEgBvE,oBAAS,GAFzB,mBAErBiO,EAFqB,KAEJC,EAFI,KAI5B,OACE,yBAAKhG,UAAWI,EAAQqC,MACtB,kBAAC,GAAD,CAAQoC,gBAAiB,kBAAMmB,GAAiB,MAChD,kBAAC,GAAD,CACEnC,cAAe,kBAAMmC,GAAiB,IACtClC,WAAYiC,IAEd,yBAAK/F,UAAWI,EAAQoF,SACtB,yBAAKxF,UAAWI,EAAQyF,kBACtB,yBAAK7F,UAAWI,EAAQ8D,SACtB,kBAAC,IAAD,WCrCN7H,GAAYC,YAAY,CAC5BmG,KAAM,GACNwD,QAAS,CACPrJ,OAAQ,MA8BGgI,GA1BA,SAAC,GAA4B,IAA1B5E,EAAyB,EAAzBA,UAAcG,EAAW,8BACnCC,EAAU/D,KAEhB,OACE,kBAACyI,GAAA,EAAD,eACE9E,UAAWM,aAAKF,EAAQqC,KAAMzC,GAC9B+E,UAAW,GACP5E,GAEJ,kBAAC6E,GAAA,EAAD,CAAShF,UAAWI,EAAQ6F,SAC1B,kBAAC1E,EAAA,EAAD,CAAK2E,GAAI,GACP,kBAACvE,GAAA,EAAD,CACEpC,MAAM,cACNsC,QAAQ,MAFV,gCCzBJxF,GAAYC,aAAW,SAACa,GAAD,MAAY,CACvCsF,KAAM,CACJ1F,gBAAiBI,EAAMG,QAAQC,WAAWE,QAC1C0B,QAAS,OACTvC,OAAQ,OACR2I,SAAU,SACV1I,MAAO,QAET2I,QAAS,CACPrG,QAAS,OACTsG,KAAM,WACNF,SAAU,SACVnG,WAAY,IAEdyG,iBAAkB,CAChB1G,QAAS,OACTsG,KAAM,WACNF,SAAU,UAEZrB,QAAS,CACPuB,KAAM,WACN7I,OAAQ,OACR2I,SAAU,YAqBCY,GAjBI,WACjB,IAAM/F,EAAU/D,KAEhB,OACE,yBAAK2D,UAAWI,EAAQqC,MACtB,kBAAC,GAAD,MACA,yBAAKzC,UAAWI,EAAQoF,SACtB,yBAAKxF,UAAWI,EAAQyF,kBACtB,yBAAK7F,UAAWI,EAAQ8D,SACtB,kBAAC,IAAD,W,oBCbGkC,GAvBFC,sBAAW,WAIrBC,GAAS,IAHV9O,EAGS,EAHTA,SAGS,IAFTqI,aAES,MAFD,GAEC,EADNM,EACM,qCACT,OACE,uCACEmG,IAAKA,GACDnG,GAEJ,kBAACoG,GAAA,EAAD,KACE,+BAAQ1G,IAETrI,M,gDCCDgP,GAAQ,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,WAAeC,EAAY,yCAGzBC,aAASD,GAHgB,mBAGxCE,EAHwC,KAGjCC,EAHiC,KAI/C,OACE,oCACE,kBAACC,GAAA,EAAD,eACEN,MAAOA,EACPzG,UAAU,aACV6B,QAAQ,WACRmF,UAAQ,EACRC,WAAS,EACTC,WAAYR,GAA0B,MAClCG,EAAWF,IAChBG,EAAKK,SAAWL,EAAKM,MACpB,yBAAKpH,UAAU,SAAS8G,EAAKM,OAC3B,OAMCC,GAAgB,SAAC,GAA2C,IAAzCrH,EAAwC,EAAxCA,UAAWxE,EAA6B,EAA7BA,cAAkB2E,EAAW,8CACpE,OACE,kBAACoB,EAAA,EAAD,KACE,kBAACoB,GAAA,EAAD,eACE3C,UAAWM,aAAKN,IACZG,GAEJ,kBAACyC,GAAA,EAAD,KAEE,kBAACjB,GAAA,EAAD,CACEqB,MAAM,OACNzD,MAAM,cACNqC,cAAY,EACZC,QAAQ,MAJV,wBAQA,kBAACyF,GAAA,EAAD,MACA,kBAAC/F,EAAA,EAAD,CAAKC,GAAI,GAEP,kBAAC,KAAD,CACE+F,cAAe,CACbjP,KAAM,GACNwB,cAAe,GACfC,eAAgB,GAChBxB,oBAAqB,IAEvBiP,iBAAkBC,aAAO,CACvBnP,KAAMoP,eACN5N,cAAezF,eACf0F,eAAgB1F,eAChBkE,oBAAqBlE,iBAGvBsT,SAAU,SAACzM,EAAD,GAA+C,IAAhC0M,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UACtCrM,EAAcN,GACd2M,EAAU,IACVD,GAAc,KAGhB,kBAAC,KAAD,KACE,kBAAC/E,EAAA,EAAD,CACEC,WAAS,EACTI,QAAQ,eACRtD,QAAS,GAET,kBAACiD,EAAA,EAAD,CACE9M,MAAI,GAEJ,kBAAC,GAAD,CACE0Q,MAAM,kBACNnO,KAAK,OACLwP,KAAK,UAIT,kBAACjF,EAAA,EAAD,CACE9M,MAAI,GAEJ,kBAAC,GAAD,CACE0Q,MAAM,gBACNnO,KAAK,gBACLwP,KAAK,OACLpB,WAAY,CACVqB,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAACtG,GAAA,EAAD,kBAOV,kBAACkB,EAAA,EAAD,CACE9M,MAAI,GAEJ,kBAAC,GAAD,CACE0Q,MAAM,gBACNnO,KAAK,iBACLwP,KAAK,OACLpB,WAAY,CACVwB,aACE,kBAACF,GAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACtG,GAAA,EAAD,eAQV,kBAACkB,EAAA,EAAD,CACE9M,MAAI,GAEJ,kBAAC,GAAD,CACE0Q,MAAM,uBACNnO,KAAK,sBACLwP,KAAK,OACLpB,WAAY,CACVqB,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAACtG,GAAA,EAAD,kBAOV,kBAACnB,GAAA,EAAD,CACEjB,MAAM,UACN0H,WAAS,EACTpF,QAAQ,OACRiG,KAAK,UAJP,e,8GC5Hd5T,GAAOC,YAAOC,IAAK,CACxBC,OAAQ,YACRC,UAAW,KAINkS,GAAQ,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,WAAeC,EAAY,yCAGzBC,aAASD,GAHgB,mBAGxCE,EAHwC,KAGjCC,EAHiC,KAI/C,OACI,oCACI,kBAACC,GAAA,EAAD,eACIN,MAAOA,EACPzG,UAAU,aACV6B,QAAQ,WACRmF,UAAQ,EACRC,WAAS,EACTC,WAAYR,GAA0B,MAClCG,EAAWF,IAClBG,EAAKK,SAAWL,EAAKM,MAClB,yBAAKpH,UAAU,SAAS8G,EAAKM,OAC7B,OAMHe,GAAiBC,gBAAK,YAA4F,IAAzFpI,EAAwF,EAAxFA,UAAwF,IAA7EoD,aAA6E,MAArE,GAAqE,EAAjEiF,EAAiE,EAAjEA,WAAYC,EAAqD,EAArDA,aAAcjN,EAAuC,EAAvCA,WAA4B8E,GAAW,EAA3BoI,YAA2B,8FAEtH,OACI,kBAAChH,EAAA,EAAD,CACIC,GAAI,GAEJ,kBAACmB,GAAA,EAAD,eACI3C,UAAWM,aAAKN,IACZG,GAEJ,kBAACyC,GAAA,EAAD,KAEI,kBAACjB,GAAA,EAAD,CACIqB,MAAM,OACNzD,MAAM,cACNqC,cAAY,EACZC,QAAQ,MAJZ,eAQA,kBAACyF,GAAA,EAAD,MAEA,kBAAC/F,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACgH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW5F,MAAM,WACjB,kBAAC4F,GAAA,EAAD,CAAW5F,MAAM,UAAjB,QACA,kBAAC4F,GAAA,EAAD,CAAW5F,MAAM,UAAjB,kBACA,kBAAC4F,GAAA,EAAD,CAAW5F,MAAM,UAAjB,mBACA,kBAAC4F,GAAA,EAAD,CAAW5F,MAAM,UAAjB,wBACA,kBAAC4F,GAAA,EAAD,CAAW5F,MAAM,UAAjB,iBACA,kBAAC4F,GAAA,EAAD,QAGR,kBAACC,GAAA,EAAD,KACKzF,EAAM5J,KAAI,SAAC0B,EAAY3B,GAAb,OACP2B,EAAWI,SACP,kBAAC,KAAD,CACIkH,IAAG,eAAUjJ,GACbgO,cAAe,CACXjP,KAAM4C,EAAW5C,KACjBwB,cAAeoB,EAAWpB,cAC1BC,eAAgB7F,GAAKyC,MAAMzC,GAAKuB,SAASyF,EAAWnB,eAAgB,KAAM,GAC1ExB,oBAAqB2C,EAAW3C,oBAChCyB,aAAc9F,GAAKyC,MAAMzC,GAAKuB,SAASyF,EAAWlB,aAAc,KAAM,IAE1EwN,iBAAkBC,aAAO,CACrBnP,KAAMoP,eACN5N,cAAezF,eACf0F,eAAgB1F,eAChBkE,oBAAqBlE,eACrB2F,aAAc3F,iBAElBsT,SAAU,SAACzM,EAAD,IACN4N,EADqC,EAAhBA,aAErBzN,EAAWH,EAAY3B,MAE7B,gBAAGwP,EAAH,EAAGA,WAAH,OACE,kBAACJ,GAAA,EAAD,CAAUnG,IAAKjJ,GACX,kBAACqP,GAAA,EAAD,CAAW5F,MAAM,UACb,kBAACgG,GAAA,EAAD,CAAM1D,QAASyD,GACX,kBAACE,GAAA,EAAD,QAGR,kBAACL,GAAA,EAAD,CAAW5F,MAAM,UACb,kBAAC,GAAD,CACIyD,MAAM,kBACNnO,KAAK,OACLwP,KAAK,UAGb,kBAACc,GAAA,EAAD,CAAW5F,MAAM,UACb,kBAAC,GAAD,CACIyD,MAAM,gBACNnO,KAAK,gBACLwP,KAAK,OACLpB,WAAY,CACRqB,eACI,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACrB,kBAACtG,GAAA,EAAD,kBAOpB,kBAACiH,GAAA,EAAD,CAAW5F,MAAM,UACb,kBAAC,GAAD,CACIyD,MAAM,gBACNnO,KAAK,iBACLwP,KAAK,OACLpB,WAAY,CACRwB,aACI,kBAACF,GAAA,EAAD,CAAgBC,SAAS,OACrB,kBAACtG,GAAA,EAAD,eAOpB,kBAACiH,GAAA,EAAD,CAAW5F,MAAM,UACb,kBAAC,GAAD,CACIyD,MAAM,uBACNnO,KAAK,sBACLwP,KAAK,OACLpB,WAAY,CACRqB,eACI,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACrB,kBAACtG,GAAA,EAAD,kBAOpB,kBAACiH,GAAA,EAAD,CAAW5F,MAAM,UACb,kBAAC,GAAD,CACIyD,MAAM,gBACNnO,KAAK,eACLwP,KAAK,OACLpB,WAAY,CACRwB,aACI,kBAACF,GAAA,EAAD,CAAgBC,SAAS,OACrB,kBAACtG,GAAA,EAAD,eAOpB,kBAACiH,GAAA,EAAD,CAAW5F,MAAM,UACb,kBAACqC,GAAA,EAAD,CAAY6D,aAAW,cAAc5D,QAAS,kBAAMgD,EAAa/O,KAC7D,kBAAC4P,GAAA,EAAD,YAQZ,kBAACR,GAAA,EAAD,CAAUnG,IAAKjJ,GACX,kBAACqP,GAAA,EAAD,CAAW5F,MAAM,UACb,kBAACoG,GAAA,EAAD,CAAM9D,QAAS,kBAAM+C,EAAW9O,KAC5B,kBAAC8P,GAAA,EAAD,QAGR,kBAACT,GAAA,EAAD,CAAW5F,MAAM,UACZ9H,EAAW5C,MAEhB,kBAACsQ,GAAA,EAAD,CAAW5F,MAAM,UAAjB,OACM9H,EAAWpB,eAEjB,kBAAC8O,GAAA,EAAD,CAAW5F,MAAM,UACZ9O,GAAKyC,MAAMzC,GAAKuB,SAASyF,EAAWnB,eAAgB,KAAM,GAD/D,KAGA,kBAAC6O,GAAA,EAAD,CAAW5F,MAAM,UAAjB,OACM9H,EAAW3C,qBAEjB,kBAACqQ,GAAA,EAAD,CAAW5F,MAAM,UACZ9O,GAAKyC,MAAMzC,GAAKuB,SAASyF,EAAWlB,aAAc,KAAM,GAD7D,KAGA,kBAAC4O,GAAA,EAAD,CAAW5F,MAAM,UACb,kBAACqC,GAAA,EAAD,CAAY6D,aAAW,cAAc5D,QAAS,kBAAMgD,EAAa/O,KAC7D,kBAAC4P,GAAA,EAAD,sBCrKjDG,GAxCK,SAAC,GAA4B,IAA1BtJ,EAAyB,EAAzBA,UAAcG,EAAW,8BAC9C,OACE,uCACEH,UAAWM,aAAKN,IACZG,GAEJ,kBAACwC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAEE,kBAACjB,GAAA,EAAD,CACEqB,MAAM,OACNzD,MAAM,cACNqC,cAAY,EACZC,QAAQ,MAJV,eAQA,kBAACyF,GAAA,EAAD,MACA,kBAAC/F,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,MACG,gBAAGnG,EAAH,EAAGA,WAAYc,EAAf,EAAeA,eAAgBD,EAA/B,EAA+BA,iBAAkBxB,EAAjD,EAAiDA,YAAac,EAA9D,EAA8DA,cAA9D,OACC,oCACE,kBAAC,GAAD,CAAeA,cAAeA,IAE5B,kBAAC2M,GAAD,CAAgB9M,WAAYA,EAAYgN,WAAYlM,EAAgBmM,aAAcpM,EAAkBkH,MAAO1I,aC5BzH2B,GAAYC,aAAW,SAACa,GAAD,MAAY,CACvCsF,KAAM,CACJ1F,gBAAiBI,EAAMG,QAAQC,WAAWC,KAC1C+L,UAAW,OACXlK,cAAelC,EAAMyC,QAAQ,GAC7BR,WAAYjC,EAAMyC,QAAQ,QAmBf4J,GAfD,WACZ,IAAMpJ,EAAU/D,KAEhB,OACE,kBAAC,GAAD,CACE2D,UAAWI,EAAQqC,KACnB5C,MAAM,eAEN,kBAAC4J,GAAA,EAAD,CAAWC,UAAU,GACnB,kBAAC,GAAD,SCdFrN,GAAYC,aAAW,SAACa,GAAD,MAAY,CACrCsF,KAAM,CACF7F,OAAQ,QAEZ+H,OAAQ,CACJ5H,gBAAiBW,IAAOiM,IAAI,KAC5B/M,OAAQ,GACRC,MAAO,IAEX+M,eAAgB,CACZrK,MAAO7B,IAAOiM,IAAI,MAEtBE,gBAAiB,CACbtK,MAAO7B,IAAOiM,IAAI,KAClBhK,YAAaxC,EAAMyC,QAAQ,QAmFpBkK,GA/Ea,SAAC,GAAqE,IAAnE9J,EAAkE,EAAlEA,UAAW+J,EAAuD,EAAvDA,aAAc7S,EAAyC,EAAzCA,cAAeR,EAA0B,EAA1BA,WAAeyJ,EAAW,0EACvFC,EAAU/D,KAEhB,OAEI,kBAACsG,GAAA,EAAD,eACI3C,UAAWM,aAAKF,EAAQqC,KAAMzC,IAC1BG,GAEJ,kBAACyC,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACVG,QAAQ,gBACRtD,QAAS,GAET,kBAACiD,EAAA,EAAD,CAAM9M,MAAI,GACN,kBAAC4L,GAAA,EAAD,CACIpC,MAAM,gBACNqC,cAAY,EACZC,QAAQ,MAHZ,sBAOA,kBAACF,GAAA,EAAD,CACIpC,MAAM,cACNsC,QAAQ,MAFZ,OAIM3K,IAGV,kBAAC2L,EAAA,EAAD,CAAM9M,MAAI,GACN,kBAAC4L,GAAA,EAAD,CACIpC,MAAM,gBACNqC,cAAY,EACZC,QAAQ,MAHZ,kBAOA,kBAACF,GAAA,EAAD,CACIpC,MAAM,cACNsC,QAAQ,MAFZ,OAIMkI,IAIV,kBAAClH,EAAA,EAAD,CAAM9M,MAAI,GACN,kBAAC4L,GAAA,EAAD,CACIpC,MAAM,gBACNqC,cAAY,EACZC,QAAQ,MAHZ,oBAOA,kBAACF,GAAA,EAAD,CACIpC,MAAM,cACNsC,QAAQ,MAFZ,OAIMnL,KAKd,kBAAC6K,EAAA,EAAD,CACIC,GAAI,EACJrC,QAAQ,OACRsC,WAAW,cCjFzB+E,GAAQ,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,MAAOqB,EAAiC,EAAjCA,KAAMpB,EAA2B,EAA3BA,WAAeC,EAAY,gDACjCC,aAASD,GADwB,mBAChDE,EADgD,KACzCC,EADyC,KAEvD,OACE,oCACE,kBAACC,GAAA,EAAD,eACEe,KAAMA,EACNrB,MAAOA,EACPzG,UAAU,aACV6B,QAAQ,WACRmF,UAAQ,EACRC,WAAS,EACTC,WAAYR,GAA0B,MAClCG,EAAWF,IAChBG,EAAKK,SAAWL,EAAKM,MACpB,yBAAKpH,UAAU,SAAS8G,EAAKM,OAC3B,OA2FK4C,GAtFE,SAAC,GAAwC,IAAtChK,EAAqC,EAArCA,UAAW9G,EAA0B,EAA1BA,WAAeiH,EAAW,2CACvD,OACE,kBAACoB,EAAA,EAAD,KACE,kBAACoB,GAAA,EAAD,eACE3C,UAAWM,aAAKN,IACZG,GAEJ,kBAACyC,GAAA,EAAD,KACE,kBAACjB,GAAA,EAAD,CACEqB,MAAM,OACNzD,MAAM,cACNqC,cAAY,EACZC,QAAQ,MAJV,8BAQA,kBAACyF,GAAA,EAAD,MACA,kBAAC/F,EAAA,EAAD,CACEC,GAAI,GACN,kBAAC,KAAD,CACI+F,cAAe,CACbjP,KAAM,GACNW,KAAM,IAERuO,iBAAkBC,aAAO,CACvBnP,KAAMoP,eACNzO,KAAM5E,iBAERsT,SAAU,SAAClO,EAAD,GAA4C,IAAhCmO,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UACnC3O,EAAWO,GACXoO,EAAU,IACVD,GAAc,KAGhB,kBAAC,KAAD,KACE,kBAAC/E,EAAA,EAAD,CACEC,WAAS,EACTI,QAAQ,eACRtD,QAAS,GAET,kBAACiD,EAAA,EAAD,CACE9M,MAAI,GAEJ,kBAAC,GAAD,CACE0Q,MAAM,eACNnO,KAAK,OACLwP,KAAK,UAIT,kBAACjF,EAAA,EAAD,CACE9M,MAAI,GAEJ,kBAAC,GAAD,CACE0Q,MAAM,eACNnO,KAAK,OACLwP,KAAK,MACLpB,WAAY,CACVqB,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAACtG,GAAA,EAAD,kBAOR,kBAACnB,GAAA,EAAD,CACEjB,MAAM,UACN0H,WAAS,EACTpF,QAAQ,OACRiG,KAAK,UAJP,kB,+BCrBLmC,GA/DK7B,gBAAK,gBAAGpI,EAAH,EAAGA,UAAH,IAAcoD,aAAd,MAAsB,GAAtB,EAA0BkF,EAA1B,EAA0BA,aAAcC,EAAxC,EAAwCA,YAAgBpI,EAAxD,0EACrB,kBAACoB,EAAA,EAAD,CACIC,GAAI,GAEJ,kBAACmB,GAAA,EAAD,eACI3C,UAAWM,aAAKN,IACZG,GAEJ,kBAACyC,GAAA,EAAD,KAEI,kBAACjB,GAAA,EAAD,CACIqB,MAAM,OACNzD,MAAM,cACNqC,cAAY,EACZC,QAAQ,MAJZ,YAQA,kBAACyF,GAAA,EAAD,MAEA,kBAAC/F,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACgH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW5F,MAAM,QAAjB,YACA,kBAAC4F,GAAA,EAAD,CAAW5F,MAAM,UAAjB,QACA,kBAAC4F,GAAA,EAAD,CAAW5F,MAAM,UAAjB,QACA,kBAAC4F,GAAA,EAAD,CAAW5F,MAAM,UAAjB,YAGR,kBAAC6F,GAAA,EAAD,KACKzF,EAAM5J,KAAI,SAACC,EAASF,GAAV,OACP,kBAACoP,GAAA,EAAD,CAAUnG,IAAKjJ,GACX,kBAACqP,GAAA,EAAD,CAAW5F,MAAM,SAAStG,QAAQ,YAC9B,kBAACwN,GAAA,EAAD,CACI5E,QAAS,kBAAMiD,EAAYhP,IAC3BT,QAASW,EAAQX,WAGzB,kBAAC8P,GAAA,EAAD,CAAW5F,MAAM,UACZvJ,EAAQnB,MAEb,kBAACsQ,GAAA,EAAD,CAAW5F,MAAM,UAAjB,OACMvJ,EAAQR,MAEd,kBAAC2P,GAAA,EAAD,CAAW5F,MAAM,UACb,kBAACqC,GAAA,EAAD,CAAY6D,aAAW,cAAc5D,QAAS,kBAAMgD,EAAa/O,KAC7D,kBAAC,KAAD,sBClD1CrF,GAAOC,YAAOC,IAAK,CACvBC,OAAQ,YACRC,UAAW,KA+EE6V,GA3EW,SAAC,GAA4B,IAA1BnK,EAAyB,EAAzBA,UAAcG,EAAW,8BACpD,OACE,uCACEH,UAAWM,aAAKN,IACZG,GAEJ,kBAACwC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAEE,kBAACjB,GAAA,EAAD,CACEqB,MAAM,OACNzD,MAAM,cACNqC,cAAY,EACZC,QAAQ,MAJV,UAQA,kBAACyF,GAAA,EAAD,MACA,kBAAC/F,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,MACG,SAAA4I,GAAa,OACZ,kBAACvH,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVG,QAAQ,aACRzB,WAAW,UACX7B,QAAS,GAET,kBAACiD,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAEJ,kBAACC,GAAD,CACEvR,WAAYkR,EAAclR,aAE3BkR,EAAc3R,SAASG,OAAS,GAC/B,kBAAC,GAAD,CACEwK,MAAOgH,EAAc3R,SACrB8P,YAAa,SAAAhP,GAAG,OAAI6Q,EAAc9Q,aAAaC,IAC/C+O,aAAc,SAAA/O,GAAG,OAAI6Q,EAAczQ,cAAcJ,OAKvD,kBAACsJ,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAEJ,kBAAC,EAAD,MACG,gBAAGzS,EAAH,EAAGA,QAAH,OAAkBA,EAAQb,eACzB,kBAAC,GAAD,CAAqBA,cAAehD,GAAKyC,MAAMzC,GAAK8C,OAAOe,EAAQb,cAAe,IAAK,GAAIR,WAAYxC,GAAKyC,MAAMzC,GAAKkC,SAASlC,GAAK8C,OAAOe,EAAQb,cAAe,IAAKkT,EAAczR,cAAe,GAAIoR,aAAcK,EAAczR,4BCvEvP0D,GAAYC,aAAW,SAACa,GAAD,MAAY,CACvCsF,KAAM,CACJ1F,gBAAiBI,EAAMG,QAAQC,WAAWC,KAC1C+L,UAAW,OACXlK,cAAelC,EAAMyC,QAAQ,GAC7BR,WAAYjC,EAAMyC,QAAQ,QAqBf4J,GAjBD,WACZ,IAAMpJ,EAAU/D,KAEhB,OACE,kBAAC,GAAD,CACE2D,UAAWI,EAAQqC,KACnB5C,MAAM,UAEN,kBAAC4J,GAAA,EAAD,CAAWC,UAAU,GACnB,kBAACnI,EAAA,EAAD,KACE,kBAACmJ,GAAD,UCXJrO,GAAYC,aAAW,SAACa,GAAD,MAAY,CACvCsF,KAAM,CACJ7F,OAAQ,YAmDG+N,GA/CQ,SAAC,GAA4B,IAA1B3K,EAAyB,EAAzBA,UAAcG,EAAW,8BAC3CC,EAAU/D,KAEhB,OACE,kBAAC,EAAD,MACG,SAAAuO,GAAO,OACN,kBAACjI,GAAA,EAAD,eACE3C,UAAWM,aAAKF,EAAQqC,KAAMzC,IAC1BG,GAEJ,kBAACyC,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVtB,WAAW,SACXyB,QAAQ,UAER,kBAACL,EAAA,EAAD,CAAM9M,MAAI,GACR,kBAAC4L,GAAA,EAAD,CACEpC,MAAM,gBACNsC,QAAQ,MAFV,yBAQA,kBAACgB,EAAA,EAAD,CAAM9M,MAAI,GACV,kBAAC4L,GAAA,EAAD,CACEpC,MAAM,cACNqC,cAAY,EACZC,QAAQ,MAHV,OAKI+I,EAAQ7S,QAAQb,eAAiB,W,4BCnC/CmF,GAAYC,aAAW,iBAAO,CAClCmG,KAAM,OAIFoI,GAAUC,OAAOC,OAAOrN,IAAOsN,QAqEtBC,GAlEE,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,eAAgBlL,EAAyB,EAAzBA,UAAcG,EAAW,+CACrDC,EAAU/D,KACVc,EAAQgO,eACRC,EAAY,CAChBC,KAAMH,GAGR,OAAOA,EAAetS,OAAS,GAC7B,kBAAC+J,GAAA,EAAD,eACE3C,UAAWM,aAAKF,EAAQqC,KAAMzC,IAC1BG,GAEJ,kBAACmL,GAAA,EAAD,CACEzL,MAAM,wBAER,kBAACyH,GAAA,EAAD,MACA,kBAAC1E,GAAA,EAAD,KACE,kBAACrB,EAAA,EAAD,CACE3E,OAAQ,IACRqL,SAAS,YAET,kBAAC,KAAD,CAAqBpL,MAAO,OAAQD,OAAO,QACzC,kBAAC,KAAD,CACEyO,KAAMD,EAAUC,KAChB5O,OAAQ,CACNkH,IAAK,GAAI4H,MAAO,EAAGC,KAAM,GAAIC,OAAQ,IAIvC,kBAAC,KAAD,CAAOpN,WAAYlB,EAAME,WAAWgB,aACpC,kBAAC,KAAD,CAAOA,WAAYlB,EAAME,WAAWgB,aACpC,kBAAC,KAAD,CAASA,WAAYlB,EAAME,WAAWgB,aAEpCyM,OAAOY,KAAKN,EAAUC,KAAK,IACxBxS,QAAO,SAAA2J,GAAG,MAAY,SAARA,KACdhJ,KAAI,SAACmS,EAAgB3S,GAAjB,OACH,kBAAC,KAAD,CAAMwJ,IAAG,UAAKmJ,EAAL,YAAuB3S,GAAI8O,KAAK,WAAW8D,QAASD,EAAgBE,QAAQ,IAAIC,OAAQjB,GAAQ7R,GAAIiI,KAAM4J,GAAQ7R,YAOzI,kBAACsO,GAAA,EAAD,QCpDA+D,GAAO,CACX,CAAE/S,KAAM,UAAWL,MAAO,IAC1B,CAAEK,KAAM,WAAYL,MAAO,KAGvB4S,GAAUC,OAAOC,OAAOrN,IAAOqO,OAE/B1P,GAAYC,aAAW,iBAAO,CAClCmG,KAAM,CACJ7F,OAAQ,YAmFGoP,GA/ES,SAAC,GAA4B,IAA1BhM,EAAyB,EAAzBA,UAAcG,EAAW,8BAC5CC,EAAU/D,KACVc,EAAQgO,eAId,OACE,kBAACxI,GAAA,EAAD,eACE3C,UAAWM,aAAKF,EAAQqC,KAAMzC,IAC1BG,GAEJ,kBAACmL,GAAA,EAAD,CAAYzL,MAAM,kCAClB,kBAACyH,GAAA,EAAD,MACA,kBAAC1E,GAAA,EAAD,KACE,kBAACrB,EAAA,EAAD,CACE3E,OAAQ,IACRqL,SAAS,YAET,kBAAC,KAAD,CAAqBpL,MAAO,OAAQD,OAAO,QACzC,kBAAC,KAAD,KACE,kBAAC,KAAD,CACEyO,KAAMA,GACNY,WAAY,IACZC,SAAU,EACVC,YAAa,GACbC,YAAa,GACbnL,KAAK,UACLoL,aAAc,EACdT,QAAQ,QACRvN,WAAYlB,EAAME,WAAWgB,YAG3BgN,GAAK7R,KAAI,SAAC8S,EAAO5S,GAAR,OAAkB,kBAAC,KAAD,CAAM2E,WAAYlB,EAAME,WAAWgB,WAAYmE,IAAG,eAAU9I,GAASuH,KAAM4J,GAAQnR,YAOxH,kBAAC6H,EAAA,EAAD,CACEpC,QAAQ,OACRK,eAAe,SACfgC,GAAI,GAEH6J,GAAK7R,KAAI,gBACR+F,EADQ,EACRA,MACAjH,EAFQ,EAERA,KACAL,EAHQ,EAGRA,MAHQ,OAKN,kBAACsJ,EAAA,EAAD,CACEiB,IAAKlK,EACL6L,EAAG,EACHoI,UAAU,UAEV,kBAAC5K,GAAA,EAAD,CACEpC,MAAM,cACNsC,QAAQ,SAEPvJ,GAEH,kBAACqJ,GAAA,EAAD,CACE6K,MAAO,CAAEjN,SACTsC,QAAQ,MAEP5J,EAJH,aC1FHwU,GAA6B,SAAA/R,GAAW,OACnDA,EAAY7E,QAAO,SAACC,EAAOoF,GACzB,IADyC,IAAD,uCAC5BoH,EAD4B,KACtBoK,EADsB,KAElCC,EAAgB7W,EAAM8W,MAAK,SAAAN,GAAK,OAAIA,EAAMhK,OAASA,KAEnDqK,EACFA,EAAczR,EAAW5C,MAAQoU,EAAO,WAAWpS,QAEnDxE,EAAMmG,KAAN,aACEqG,QACCpH,EAAW5C,KAAOoU,EAAO,WAAWpS,WAR3C,MAA6BwQ,OAAO+B,QAAQ3R,EAAWE,cAAvD,eAAuE,IAavE,OAAOtF,IACN,KCFCuG,GAAYC,aAAW,SAACa,GAAD,MAAY,CACvCsF,KAAM,CACJ1F,gBAAiBI,EAAMG,QAAQC,WAAWC,KAC1C+L,UAAW,OACXlK,cAAelC,EAAMyC,QAAQ,GAC7BR,WAAYjC,EAAMyC,QAAQ,QA2FfkN,GAvFG,WAChB,IAAM1M,EAAU/D,KAEhB,OACE,kBAAC,GAAD,CACE2D,UAAWI,EAAQqC,KACnB5C,MAAM,aAEN,kBAAC4J,GAAA,EAAD,CAAWC,UAAU,GACnB,kBAAC,EAAD,MACG,gBAAGhP,EAAH,EAAGA,YAAH,OAGC,kBAACmI,EAAA,EAAD,CACEC,WAAS,EACTlD,QAAS,GAET,kBAACiD,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,OAEF,kBAAC3H,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,OAEF,kBAAC3H,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,OAEF,kBAAC3H,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,OAEF,kBAAC3H,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,GACJxC,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,CAAUU,eAAgBuB,GAA2B/R,MAEvD,kBAACmI,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJxC,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,OAEF,kBAAC3H,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJxC,GAAI,EACJC,GAAI,YC5FdnO,GAAYC,aAAW,SAACa,GAAD,MAAY,CACvCsF,KAAM,CACJ1F,gBAAiBI,EAAMG,QAAQC,WAAWC,KAC1CZ,OAAQ,OACRyC,cAAelC,EAAMyC,QAAQ,GAC7BR,WAAYjC,EAAMyC,QAAQ,IAE5BoN,MAAO,CACLC,UAAW,GACX9N,QAAS,eACTuK,SAAU,OACV7M,MAAO,SA+CIqQ,GA3CM,WACnB,IAAM9M,EAAU/D,KAEhB,OACE,kBAAC,GAAD,CACE2D,UAAWI,EAAQqC,KACnB5C,MAAM,OAEN,kBAAC0B,EAAA,EAAD,CACEpC,QAAQ,OACRgO,cAAc,SACdvQ,OAAO,OACP4C,eAAe,UAEf,kBAACiK,GAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC/H,GAAA,EAAD,CACEqB,MAAM,SACNzD,MAAM,cACNsC,QAAQ,MAHV,qDAOA,kBAACF,GAAA,EAAD,CACEqB,MAAM,SACNzD,MAAM,cACNsC,QAAQ,aAHV,4GAQA,kBAACN,EAAA,EAAD,CAAKgL,UAAU,UACb,yBACEa,IAAI,oBACJpN,UAAWI,EAAQ4M,MACnBK,IAAI,uDCvCZnZ,GAAOC,YAAOC,IAAK,CACvBC,OAAQ,YACRC,UAAW,KAGP+H,GAAYC,aAAW,SAACa,GAAD,MAAY,CACvCsF,KAAM,GACN6K,aAAc,CACZ3N,YAAaxC,EAAMyC,QAAQ,IAE7B2N,aAAc,CACZ5N,YAAaxC,EAAMyC,QAAQ,QAIzB4G,GAAQ,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,MAAOqB,EAAiC,EAAjCA,KAAMpB,EAA2B,EAA3BA,WAAeC,EAAY,gDAGjCC,aAASD,GAHwB,mBAGhDE,EAHgD,KAGzCC,EAHyC,KAIvD,OACE,oCACE,kBAACC,GAAA,EAAD,eACEe,KAAMA,EACNrB,MAAOA,EACPzG,UAAU,aACV6B,QAAQ,WACRmF,UAAQ,EACRC,WAAS,EACTC,WAAYR,GAA0B,MAClCG,EAAWF,IAChBG,EAAKK,SAAWL,EAAKM,MACpB,yBAAKpH,UAAU,SAAS8G,EAAKM,OAC3B,OAuKKoG,GAjKO,SAAC,GAAsD,IAApDtV,EAAmD,EAAnDA,gBAAiBH,EAAkC,EAAlCA,QAASiI,EAAyB,EAAzBA,UAAcG,EAAW,0DACpEC,EAAU/D,KAChB,OACE,uCACE2D,UAAWM,aAAKF,EAAQqC,KAAMzC,IAC1BG,GAEJ,kBAAC,EAAD,MAA4B,gBAAGhI,EAAH,EAAGA,uBAAH,OAC1B,kBAACwK,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAEE,kBAACjB,GAAA,EAAD,CACEqB,MAAM,OACNzD,MAAM,cACNqC,cAAY,EACZC,QAAQ,MAJV,kBAQA,kBAACyF,GAAA,EAAD,MACA,kBAAC/F,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,KAAD,CACE+F,cAAe,CACbnS,OAAQ2C,EAAQ3C,QAAU,EAC1BI,4BAA8BuC,EAAQxC,mCAAqCrB,GAAKyC,MAAMzC,GAAKuB,SAASsC,EAAQxC,mCAAoC,KAAM,GAAK,EAC3JG,4BAA6BqC,EAAQzC,mCAAqCpB,GAAKyC,MAAMzC,GAAKuB,SAASsC,EAAQzC,mCAAoC,KAAM,GAAK,EAC1JD,yBAA0B0C,EAAQ1C,0BAA4B,OAEhEmS,iBAAkBC,aAAO,CACvBrS,OAAQf,eACRmB,4BAA6BnB,eAC7BqB,4BAA6BrB,eAC7BgB,yBAA0BhB,iBAG5BsT,SAAU,SAAC8F,EAAD,GAAqC,IAArB7F,EAAoB,EAApBA,cACxB1P,EAAgBuV,EAAatV,GAC7ByP,GAAc,KAGhB,kBAAC,KAAD,KACE,kBAAC/E,EAAA,EAAD,CACEC,WAAS,EACTlD,QAAS,GAET,kBAACiD,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJvC,GAAI,IAEJ,kBAAC,GAAD,CACE/D,MAAM,gBACNnO,KAAK,SACLwP,KAAK,MACLpB,WAAY,CACVqB,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAACtG,GAAA,EAAD,kBAQV,kBAACkB,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJvC,GAAI,IAGJ,kBAAC,GAAD,CACE/D,MAAM,2CACNnO,KAAK,8BACLwP,KAAK,MACLpB,WAAY,CACVwB,aACE,kBAACF,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAACtG,GAAA,EAAD,eASV,kBAACkB,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJvC,GAAI,IAGJ,kBAAC,GAAD,CACE/D,MAAM,2CACNnO,KAAK,8BACLwP,KAAK,MACLpB,WAAY,CACVwB,aACE,kBAACF,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAACtG,GAAA,EAAD,eASV,kBAACkB,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJvC,GAAI,IAGJ,kBAAC,GAAD,CACE/D,MAAM,8BACNnO,KAAK,2BACLwP,KAAK,MACLpB,WAAY,CACVqB,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAACtG,GAAA,EAAD,mBASZ,kBAACJ,EAAA,EAAD,CACEpC,QAAQ,OACRK,eAAe,SACf2E,EAAG,EACH3C,GAAI,GACJ,kBAAChB,GAAA,EAAD,CACEsH,KAAK,SACLvI,MAAM,UACN0H,WAAS,EACTpF,QAAQ,QAJV,wBCrLdxF,GAAYC,aAAW,SAACa,GAAD,MAAY,CACvCsF,KAAM,CACJtD,QAAS,OACTgO,cAAe,UAEjBO,UAAW,CACTjM,WAAY,SACZtC,QAAS,QAEXwO,UAAW,CACThO,YAAaxC,EAAMyC,QAAQ,QA8HhBgO,GA1HO,SAAC,GAAqC,IAAnC5N,EAAkC,EAAlCA,UAAWjI,EAAuB,EAAvBA,QAAYoI,EAAW,wCACnDC,EAAU/D,KAEhB,OAAOtE,EAAQ3C,OAAS,GAEtB,kBAACmM,EAAA,EAAD,KAGE,kBAACoB,GAAA,EAAD,eACE3C,UAAWM,aAAKF,EAAQqC,KAAMzC,IAC1BG,GAEJ,kBAACyC,GAAA,EAAD,KACE,kBAACjB,GAAA,EAAD,CACEqB,MAAM,SACNzD,MAAM,cACNqC,cAAY,EACZC,QAAQ,MAJV,cAQA,kBAACyF,GAAA,EAAD,MACA,kBAAC/F,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACqB,EAAA,EAAD,CACEC,WAAS,EACTlD,QAAS,GAET,kBAACiD,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJvC,GAAI,IAEJ,kBAAC7I,GAAA,EAAD,CACEqB,MAAM,SACNzD,MAAM,cACNsC,QAAQ,SAHV,2BAKwB9J,EAAQxB,UAAUlB,2BAG5C,kBAACwN,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJvC,GAAI,IAEJ,kBAAC7I,GAAA,EAAD,CACEqB,MAAM,SACNzD,MAAM,cACNsC,QAAQ,SAHV,yBAKsB9J,EAAQxB,UAAUK,iBAG1C,kBAACiM,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJvC,GAAI,IAEJ,kBAAC7I,GAAA,EAAD,CACEqB,MAAM,SACNzD,MAAM,cACNsC,QAAQ,SAHV,uBAKoB9J,EAAQ7B,gBA3ChC,UA6CgB,kBAAC2M,EAAA,EAAD,CACZ9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJvC,GAAI,IAEJ,kBAAC7I,GAAA,EAAD,CACEqB,MAAM,SACNzD,MAAM,cACNsC,QAAQ,SAHV,+BAK4B9J,EAAQxB,UAAU5B,UAAUI,UAxD5D,UA0DgB,kBAAC8N,EAAA,EAAD,CACZ9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJvC,GAAI,IAEJ,kBAAC7I,GAAA,EAAD,CACEqB,MAAM,SACNzD,MAAM,cACNsC,QAAQ,SAHV,gCAK6B9J,EAAQxB,UAAUtB,WAAWF,UArE9D,UAuEgB,kBAAC8N,EAAA,EAAD,CACZ9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJvC,GAAI,IAEJ,kBAAC7I,GAAA,EAAD,CACEqB,MAAM,SACNzD,MAAM,cACNsC,QAAQ,SAHV,gCAK6B9J,EAAQxB,UAAUrB,UAAUH,aAMjE,kBAACwM,EAAA,EAAD,CAAK6D,SAAU,IACf,kBAACkC,GAAA,EAAD,SC/HFjL,GAAYC,aAAW,SAACa,GAAD,MAAY,CACvCsF,KAAM,CACJtD,QAAS,OACTgO,cAAe,UAEjBO,UAAW,CACTjM,WAAY,SACZtC,QAAS,QAEXwO,UAAW,CACThO,YAAaxC,EAAMyC,QAAQ,QAwGhBiO,GApGe,SAAC,GAA4B,IAA1B7N,EAAyB,EAAzBA,UAAcG,EAAW,8BAClDC,EAAU/D,KAEhB,OACE,kBAACkF,EAAA,EAAD,KACE,kBAAC,EAAD,MACG,SAAAqJ,GAAO,OAAIA,EAAQ7S,QAAQ3C,OAAS,GACnC,kBAACuN,GAAA,EAAD,eACE3C,UAAWM,aAAKF,EAAQqC,KAAMzC,IAC1BG,GAEJ,kBAACyC,GAAA,EAAD,KAEE,kBAACjB,GAAA,EAAD,CACEqB,MAAM,SACNzD,MAAM,cACNqC,cAAY,EACZC,QAAQ,MAJV,sBAQA,kBAACyF,GAAA,EAAD,MACA,kBAAC/F,EAAA,EAAD,CAAK3E,OAAO,OAAO4E,GAAI,GACrB,kBAACqB,EAAA,EAAD,CACEC,WAAS,EACTlD,QAAS,GAGT,kBAACiD,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJvC,GAAI,IAEJ,kBAAC7I,GAAA,EAAD,CACEqB,MAAM,SACNzD,MAAM,cACNsC,QAAQ,SAHV,wBAKqB+I,EAAQ7S,QAAQhB,qBAAqBtC,4BAG5D,kBAACoO,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJvC,GAAI,IAEJ,kBAAC7I,GAAA,EAAD,CACEqB,MAAM,SACNzD,MAAM,cACNsC,QAAQ,SAHV,+BAK4B+I,EAAQ7S,QAAQhB,qBAAqBpC,UAAUI,UAG7E,kBAAC8N,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJvC,GAAI,IAEJ,kBAAC7I,GAAA,EAAD,CACEqB,MAAM,SACNzD,MAAM,cACNsC,QAAQ,SAHV,gCAK6B+I,EAAQ7S,QAAQhB,qBAAqB9B,WAAWF,UAG/E,kBAAC8N,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJvC,GAAI,IAEJ,kBAAC7I,GAAA,EAAD,CACEqB,MAAM,SACNzD,MAAM,cACNsC,QAAQ,SAHV,gCAK6B+I,EAAQ7S,QAAQhB,qBAAqB7B,UAAUH,aAMpF,kBAACwM,EAAA,EAAD,MACA,kBAAC+F,GAAA,EAAD,YCvGNjL,I,4BCWYC,aAAW,SAACa,GAAD,MAAY,CACrCsF,KAAM,CACFtD,QAAS,OACTgO,cAAe,UAEnBW,MAAO,CACH/M,SAAU,KAEd2M,UAAW,CACPjM,WAAY,SACZtC,QAAS,QAEbwO,UAAW,CACPhO,YAAaxC,EAAMyC,QAAQ,QDxBjBtD,aAAW,SAACa,GAAD,MAAY,CACvCsF,KAAM,CACJ1F,gBAAiBI,EAAMG,QAAQC,WAAWC,KAC1C+L,UAAW,OACXlK,cAAelC,EAAMyC,QAAQ,GAC7BR,WAAYjC,EAAMyC,QAAQ,SAmDfmO,GA/CU,WACvB,IAAM3N,EAAU/D,KAEhB,OACE,kBAAC,GAAD,CACE2D,UAAWI,EAAQqC,KACnB5C,MAAM,qBAEN,kBAAC,EAAD,MAEI,gBAAG3H,EAAH,EAAGA,gBAAiBH,EAApB,EAAoBA,QAApB,OACE,kBAAC0R,GAAA,EAAD,CAAWC,UAAU,GACnB,kBAAC,GAAD,CAAa3R,QAASA,EAASG,gBAAiBA,IAChD,kBAACqJ,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACqB,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVG,QAAQ,aACRzB,WAAW,UACX7B,QAAS,GAET,kBAACiD,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJvC,GAAI,GAEN,kBAAC,GAAD,CAAezS,QAASA,KAExB,kBAAC8K,EAAA,EAAD,CACE9M,MAAI,EACJsU,GAAI,EACJ0C,GAAI,EACJvC,GAAI,GAEJ,kBAAC,GAAD,eExBLwD,I,OCjBG1R,YAAY,CAC5BmG,KAAM,GACN1M,KAAM,CACJoJ,QAAS,OACTgO,cAAe,YCPD7Q,YAAY,CAC5BmG,KAAM,KCLUnG,aAAW,SAACa,GAAD,MAAY,CACvCsF,KAAM,CACJ1F,gBAAiBI,EAAMG,QAAQC,WAAWC,KAC1C+L,UAAW,OACXlK,cAAelC,EAAMyC,QAAQ,GAC7BR,WAAYjC,EAAMyC,QAAQ,QHJf,CACb,CACEqO,KAAM,MACNC,QAAS,kBAAC,GAAD,MACT1W,SAAU,CACR,CAAEyW,KAAM,cAAeC,QAAS,kBAAC,GAAD,OAChC,CAAED,KAAM,SAAUC,QAAS,kBAAC,GAAD,OAC3B,CAAED,KAAM,YAAaC,QAAS,kBAAC,GAAD,OAC9B,CAAED,KAAM,oBAAqBC,QAAS,kBAAC,GAAD,OACtC,CAAED,KAAM,IAAKC,QAAS,kBAAC,IAAD,CAAUtN,GAAG,YAGvC,CACEqN,KAAM,IACNC,QAAS,kBAAC,GAAD,MACT1W,SAAU,CACR,CAAEyW,KAAM,MAAOC,QAAS,kBAAC,GAAD,OACxB,CAAED,KAAM,IAAKC,QAAS,kBAAC,IAAD,CAAUtN,GAAG,4BACnC,CAAEqN,KAAM,IAAKC,QAAS,kBAAC,IAAD,CAAUtN,GAAG,cIV1BuN,GAXH,WACV,IAAMC,EAAUC,YAAUL,IAE1B,OACE,kBAACM,EAAA,EAAD,CAAenR,MAAOA,GACpB,kBAAC,EAAD,MACCiR,ICJPG,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,UAKPC,SAASC,eAAe,SlD8GrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f4a74186.chunk.js","sourcesContent":["/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nexport function calculatePreTaxDeductions({ salary = 0, personalPensionContribution = 0 }, taxBreaks = []) {\n\n  const taxBreaksTotal = taxBreaks.reduce((accum, item) => math.add(accum, item.amount), 0)\n  let taxableIncome = math\n    .chain(salary)\n    .subtract(personalPensionContribution)\n    .subtract(taxBreaksTotal)\n    .done()\n\n  taxableIncome = taxableIncome > 0\n    ? taxableIncome = taxableIncome\n    : 0\n\n\n  return {\n    taxBreaksTotal,\n    taxableIncome\n  }\n\n}\n","import {all, create} from 'mathjs'\n\nconst BANDS = ['lowerBand', 'mediumBand', 'upperBand']\n\nconst math = create(all, {\n  number: 'BigNumber',  \n  precision: 32\n});\n\nconst ROUND_AMOUNT = 2\n\nexport const calculateIncomeTax = (tax, taxableIncome) => {\n  taxableIncome = math.subtract(taxableIncome, tax.taxFreePersonalAllowance)\n  \n  let carryOver = taxableIncome\n\n  for (const band of BANDS) {\n    const difference = math.subtract(tax[band].end, tax[band].start)\n\n    if (math.subtract(carryOver, difference) > 0) {\n      tax[band].taxPaid = math.round(math.multiply(difference, tax[band].taxPercent), ROUND_AMOUNT)\n      tax.totalIncomeTax = math.add(tax.totalIncomeTax, tax[band].taxPaid)\n      tax[band].carryOver = math.subtract(carryOver, difference)\n      carryOver = math.subtract(carryOver, difference)\n\n    } else {\n      tax[band].taxPaid = math.multiply(carryOver, tax[band].taxPercent) > 0 \n        ? math.round(math.multiply(carryOver, tax[band].taxPercent), ROUND_AMOUNT)\n        : 0\n\n      tax.totalIncomeTax = math.round(math.add(tax.totalIncomeTax, tax[band].taxPaid), ROUND_AMOUNT)\n      carryOver = 0\n      break\n    }\n  }\n\n  return tax\n}\n\n","export const incomeTaxBands = (taxFreePersonalAllowance = 12500 ) => ({\n  taxFreePersonalAllowance,\n  totalIncomeTax: 0,\n  lowerBand: {\n    taxPercent: .2,\n    start: taxFreePersonalAllowance + 0.01,\n    end: 50000,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  mediumBand: {\n    taxPercent: .4,\n    start: 50000.01,\n    end: 150000,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  upperBand: {\n    taxPercent: .45,\n    start: 150000.01,\n    end: 99999999,\n    taxPaid: 0,\n    carryOver: 0\n  }\n})\n\nexport const nationalInsuranceTaxBands = {\n  totalNationalInsuranceTax: 0,\n  weeklyNationalInsuranceTax: 0,\n  lowerBand: {\n    taxPercent: 0,\n    start: 0,\n    end: 183,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  mediumBand: {\n    taxPercent: .12,\n    start: 183.01,\n    end: 962.00,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  upperBand: {\n    taxPercent: .02,\n    start: 962.01,\n    end: 99999999,\n    taxPaid: 0,\n    carryOver: 0\n  }\n}\n","import { all, create } from 'mathjs'\n\nconst BANDS = ['lowerBand', 'mediumBand', 'upperBand']\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst WEEKS_IN_YEAR = 52\nconst ROUND_AMOUNT = 2\n\n\nexport const calculateNationalInsurance = (tax, taxableIncome) => {\n  tax.weeklyNationalInsuranceTax = 0;\n  tax.totalNationalInsuranceTax = 0;\n  const weeklyIncome = math.divide(taxableIncome, WEEKS_IN_YEAR)\n\n  let carryOver = weeklyIncome\n\n  for (const band of BANDS) {\n    const difference = math.subtract(tax[band].end, tax[band].start)\n    if (math.subtract(carryOver, difference) > 0) {\n      tax[band].taxPaid = math.round(math.multiply(difference, tax[band].taxPercent), ROUND_AMOUNT)\n      tax.weeklyNationalInsuranceTax = math.add(tax.weeklyNationalInsuranceTax, tax[band].taxPaid)\n\n\n      tax[band].carryOver = math.subtract(carryOver, difference)\n      carryOver = math.subtract(carryOver, difference)\n\n    } else {\n      tax[band].taxPaid = math.multiply(carryOver, tax[band].taxPercent) > 0\n        ? math.round(math.multiply(carryOver, tax[band].taxPercent), ROUND_AMOUNT)\n        : 0\n\n      tax.weeklyNationalInsuranceTax = math.add(tax.weeklyNationalInsuranceTax, tax[band].taxPaid)\n      \n      carryOver = 0\n      break\n    }\n  }\n  tax.totalNationalInsuranceTax = math.round(math.multiply(tax.weeklyNationalInsuranceTax, WEEKS_IN_YEAR), ROUND_AMOUNT)\n  return tax\n}\n\n","import { all, create } from 'mathjs'\nimport { calculatePreTaxDeductions } from './calculatePreTaxDeductions'\nimport { calculateIncomeTax }  from './calculateIncomeTax'\nimport { incomeTaxBands, nationalInsuranceTaxBands} from './taxTypes';\nimport {calculateNationalInsurance }  from './calculateNationalInsurance'\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nexport default function calculateAllTax({\n  salary = 0, \n  taxFreePersonalAllowance = 12500,\n  employerPensionContributionPercent = 0,\n  personalPensionContributionPercent = 0}) {\n\n\n    const personalPensionContribution = math.multiply(personalPensionContributionPercent, salary)\n    const employerPensionContribution = math.multiply(employerPensionContributionPercent, salary)\n  \n    const { taxBreaksTotal, taxableIncome} = calculatePreTaxDeductions({taxFreePersonalAllowance, salary, personalPensionContribution }) //TODO : Tax breaks\n\n    const incomeTax = calculateIncomeTax(incomeTaxBands(taxFreePersonalAllowance), taxableIncome)\n    const nationalInsuranceTax = calculateNationalInsurance(nationalInsuranceTaxBands, taxableIncome)\n    \n    return {\n      salary,\n      employerPensionContributionPercent,\n      personalPensionContributionPercent,\n      personalPensionContribution,\n      employerPensionContribution,\n      taxBreaksTotal,\n      taxableIncome,\n      incomeTax,\n      nationalInsuranceTax,\n      totalTakeHome: math.round(salary - personalPensionContribution - incomeTax.totalIncomeTax - nationalInsuranceTax.totalNationalInsuranceTax, 2)\n    }\n}\n","import React, { useState } from 'react';\nimport calculateAllTax from '../utils/calculateAllTax'\nimport { all, create } from 'mathjs'\nconst { Provider, Consumer } = React.createContext();\n\nconst math = create(all, {\n\tnumber: 'BigNumber',\n\tprecision: 32\n});\n\nconst SalaryContextProvider = ({ children }) => {\n\tconst state = JSON.parse(localStorage.getItem('salary')) ? JSON.parse(localStorage.getItem('salary')) : {}\n\tconst [userTax, setUserTax] = useState(state)\n\n\tconst setUserFinances = ({ salary, taxFreePersonalAllowance, personalPensionContribution = 0, employerPensionContribution = 0 }, addMultipleInvestments) => {\n\t\tconst tax = calculateAllTax({\n\t\t\tsalary,\n\t\t\ttaxFreePersonalAllowance,\n\t\t\temployerPensionContributionPercent: employerPensionContribution / 100,\n\t\t\tpersonalPensionContributionPercent: personalPensionContribution / 100\n\t\t})\n\t\tsetUserTax(tax)\n\t\tlocalStorage.setItem('salary', JSON.stringify(tax))\n\n\t\taddMultipleInvestments([{\n\t\t\tname: 'Workplace Pension (employer contribution)',\n\t\t\tmonthlyContribution: math.round(math.divide(tax.employerPensionContribution, 12), 2)\n\t\t},\n\t\t{\n\t\t\tname: 'Workplace Pension (personal contribution)',\n\t\t\tmonthlyContribution: math.round(math.divide(tax.personalPensionContribution, 12), 2)\n\t\t}])\n\t}\n\n\treturn (\n\t\t<Provider value={{ setUserFinances, userTax }}>\n\t\t\t{children}\n\t\t</Provider>\n\t)\n}\n\nexport { SalaryContextProvider, Consumer as SalaryContextConsumer }","import React, { useState } from 'react';\nimport { all, create } from 'mathjs'\nconst { Provider, Consumer } = React.createContext();\n\nconst math = create(all, {\n    number: 'BigNumber',\n    precision: 32\n  });\n  \n  \n\nconst BudgetContextProvider = ({ children }) => {\n  const state = JSON.parse(localStorage.getItem('expenses')) ? JSON.parse(localStorage.getItem('expenses')) : []\n    const [expenses, setExpenses] = useState(state);\n\n      const addExpense = ({name, cost}) => {\n        if (name !== \"\" || !cost) {\n          const newExpenses = expenses.concat({\n            name,\n            cost: parseFloat(cost),\n            checked: true\n          })\n\n          setExpenses(newExpenses);\n          localStorage.setItem('expenses', JSON.stringify(newExpenses))\n        }\n      }\n\n      const checkExpense = idx => {\n        setExpenses(\n          expenses.map((expense, index) => {\n            if (idx === index) {\n              expense.checked = !expense.checked;\n            }\n  \n            return expense;\n          })\n        );\n      }\n\n      const removeExpense = idx => {\n        const newExpenses = expenses.filter((_, index) => idx !== index)\n        setExpenses(newExpenses);\n        localStorage.setItem('expenses', JSON.stringify(newExpenses))\n      }\n    \n      const expenseTotal = expenses.length > 0\n      ? expenses.filter(item => item.checked).reduce((acc, i) => math.add(acc, i.cost), 0)\n      : 0\n\n\treturn (\n\t\t<Provider value={{ expenses, addExpense, checkExpense, removeExpense, expenseTotal }}>\n\t\t\t{children}\n\t\t</Provider>\n\t)\n}\n\nexport { BudgetContextProvider, Consumer as BudgetContextConsumer }","import { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst MONTHS_OF_THE_YEAR = 12\nconst ROUND_AMOUNT = 2\n\nexport const calculateYearlyCompoundWithCharge = ({\n  initialAmount = 0, \n  expectedReturn = 0, \n  monthlyContribution = 0,\n  annualCharge = 0,\n  noOfYearsToMature = 0\n}) => {\n  const compoundInterest = {}\n  let totalAmount = initialAmount;\n\n  // forgive for starting at 1 plz god. Makes years easier\n  for (let i = 1; i <= noOfYearsToMature; i++ ) {  \n    compoundInterest[`Year ${i}`] = calculateMonthlyCompoundInterest({\n      totalAmount, \n      expectedReturn, \n      monthlyContribution\n    })\n\n    const totalAmountAfterMaturing = compoundInterest[`Year ${i}`][`Month ${MONTHS_OF_THE_YEAR}`].balance\n    \n    totalAmount = annualCharge\n    ? math.round(math.subtract(totalAmountAfterMaturing, math.multiply(totalAmountAfterMaturing, annualCharge)), ROUND_AMOUNT)\n    : totalAmountAfterMaturing\n  }\n\n  return compoundInterest\n}\n\nexport const calculateMonthlyCompoundInterest = ({\n    totalAmount, \n    expectedReturn, \n    monthlyContribution,\n  }) => {\n  const compoundInterest = {}\n\n  let balance = totalAmount\n  let  cumulativeInterest = 0;\n  \n  // forgive for starting at 1 plz god. Makes years easier\n  for (let i = 1; i <= MONTHS_OF_THE_YEAR; i++ ) {  \n    const earnedInterest = math.chain(balance).multiply(expectedReturn).divide(MONTHS_OF_THE_YEAR).round(ROUND_AMOUNT).done()\n    cumulativeInterest = math.round(math.add(cumulativeInterest, earnedInterest), ROUND_AMOUNT)\n\n    balance =  math.chain(balance).add(monthlyContribution).add(earnedInterest).round(ROUND_AMOUNT).done()\n    \n    compoundInterest[`Month ${i}`] = {\n      earnedInterest,\n      balance,\n      cumulativeInterest\n    }\n  }\n\n  return compoundInterest\n}\n","import React, { useState } from 'react';\nimport { calculateYearlyCompoundWithCharge } from 'src/utils/calculateCompoundInterest';\nimport { all, create } from 'mathjs'\nconst { Provider, Consumer } = React.createContext();\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\n\nconst InvestmentContextProvider = ({ children }) => {\n  const state = JSON.parse(localStorage.getItem('investments')) ? JSON.parse(localStorage.getItem('investments')) : []\n\n  const [investments, setInvestments] = useState(state);\n\n  const [yearsToMature, setYearsToMature] = useState(1)\n\n  const saveYearsToMature = years => {\n    setYearsToMature(years)\n    setInvestments([...investments].map(investment => {\n      const investmentToRecalculate = {\n        ...investment,\n        noOfYearsToMature: years,\n      }\n\n      return {\n        ...investmentToRecalculate,\n        compoundData: calculateYearlyCompoundWithCharge(investmentToRecalculate)\n      }\n    }))\n  }\n  const saveInvestments = (investmentToSave) => {\n    setInvestments(investmentToSave)\n    localStorage.setItem('investments', JSON.stringify(investmentToSave))\n  }\n\n  const addMultipleInvestments = (investmentsToAdd) => {\n\n    const copy = [...investments]\n\n    for (const newInvestment of investmentsToAdd) {\n\n      let isInvestmentAlreadyInList = copy.findIndex(oldInvestments => oldInvestments.name === newInvestment.name)\n\n      if (isInvestmentAlreadyInList > -1) {\n        const { monthlyContribution } = newInvestment\n        const investment = {\n          ...copy[isInvestmentAlreadyInList],\n          monthlyContribution: parseFloat(monthlyContribution),\n        }\n\n        copy[isInvestmentAlreadyInList] = {\n          ...investment,\n          compoundData: calculateYearlyCompoundWithCharge(investment)\n        }\n\n      } else {\n        const investment = {\n          name: newInvestment.name,\n          initialAmount: 0,\n          expectedReturn: 0,\n          annualCharge: 0,\n          monthlyContribution: parseFloat(newInvestment.monthlyContribution),\n          editMode: false,\n          noOfYearsToMature: yearsToMature,\n        }\n\n        copy.push({\n          ...investment,\n          compoundData: calculateYearlyCompoundWithCharge(investment)\n        })\n      }\n\n    }\n\n    saveInvestments(copy)\n  }\n\n  const addInvestment = ({ name = '', initialAmount = 0, expectedReturn = 0, monthlyContribution = 0, annualCharge = 0 }) => {\n    const investment = {\n      name,\n      initialAmount: parseFloat(initialAmount),\n      expectedReturn: math.round(math.divide(expectedReturn, 100), 2),\n      monthlyContribution: parseFloat(monthlyContribution),\n      noOfYearsToMature: yearsToMature,\n      annualCharge: math.divide(annualCharge, 100),\n      editMode: false,\n    }\n\n    saveInvestments([\n      ...investments.filter(investment => investment.name !== name),\n      {\n        ...investment,\n        compoundData: calculateYearlyCompoundWithCharge(investment)\n      }\n    ])\n  }\n\n  const editInvestment = idx => {\n    saveInvestments(\n      investments.map((investment, index) => {\n        if (idx === index) {\n          investment.editMode = true;\n        }\n\n        return investment;\n      })\n    );\n  }\n\n  const onItemSave = ({ name = '', initialAmount = 0, expectedReturn = 0, monthlyContribution = 0, annualCharge = 0 }, idx) => {\n    const investment = {\n      name,\n      initialAmount: parseFloat(initialAmount),\n      expectedReturn: math.round(math.divide(expectedReturn, 100), 2),\n      monthlyContribution: parseFloat(monthlyContribution),\n      noOfYearsToMature: yearsToMature,\n      annualCharge: math.divide(annualCharge, 100),\n      editMode: false,\n    }\n\n    const investmentCopy = [...investments]\n\n    investmentCopy[idx] = {\n      ...investment,\n      compoundData: calculateYearlyCompoundWithCharge(investment)\n    }\n\n    saveInvestments(investmentCopy)\n  }\n\n  const removeInvestment = idx => {\n    saveInvestments(investments.filter((_, index) => idx !== index));\n  }\n\n  const getExpectedInterestIncomeInXYears = () => investments.length > 0\n    ? math.round(investments.reduce((accum, investment) => accum + investment.compoundData[`Year ${yearsToMature}`]['Month 12'].earnedInterest, 0), 2)\n    : 0\n\n  const getTotalNetWorthInXYears = () => investments.length > 0\n    ? math.round(investments.reduce((accum, investment) => accum + investment.compoundData[`Year ${yearsToMature}`]['Month 12'].balance, 0), 2)\n    : 0\n\n  const getAmountInvestedPerMonth = () => investments.length > 0\n    ? investments.reduce((accum, investment) => accum + investment.monthlyContribution, 0)\n    : 0\n\n  return (\n    <Provider value={{ investments, saveYearsToMature, yearsToMature, onItemSave, addInvestment, getAmountInvestedPerMonth, getTotalNetWorthInXYears, addMultipleInvestments, removeInvestment, editInvestment, getExpectedInterestIncomeInXYears }}>\n      {children}\n    </Provider>\n  )\n}\n\nexport { InvestmentContextProvider, Consumer as InvestmentContextConsumer }","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  typography: {\n    \"fontFamily\": `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n    \"fontSize\": 14,\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n  },\n  palette: {\n    background: {\n      dark: '#F4F6F8',\n      default: colors.common.white,\n      paper: colors.common.white\n    },\n    primary: {\n      main: colors.blue[500]\n    },\n    secondary: {\n      main: colors.blue[700]\n    },\n    text: {\n      primary: colors.blueGrey[900],\n      secondary: colors.blueGrey[600]\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n  fontSize: 14,\n  fontWeightLight: 300,\n  fontWeightRegular: 400,\n  fontWeightMedium: 500,\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useState } from 'react';\nimport {\n    Drawer,\n    Hidden,\n    List,\n    makeStyles,\n    Grid,\n    InputLabel,\n    MenuItem,\n    FormControl,\n    Select,\n    Button,\n    Typography,\n    Box\n} from '@material-ui/core';\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\n// const SomeContent = React.forwardRef((props, ref) => <div {...props} ref={ref}>Hello, World!</div>);\n// const SomeContent = React.forwardRef((props, ref) => <div {...props} ref={ref}>Hello, World!</div>);\n\nconst years = new Array(70).fill(0).map((_, i) => i + 1)\n\n// const generateYears = () => new Array(1).fill(0).map((_, i) => React.forwardRef((props, ref) => )\n\nexport const SelectYears = () => {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(false);\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n\n    return (\n        <InvestmentContextConsumer>\n            {({ saveYearsToMature, yearsToMature }) => (\n                <Box\n                    display=\"flex\"\n                    mt={3}\n                    alignItems=\"center\">\n                    <FormControl className={classes.formControl}>\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h6\"\n                        >\n                            Predict Net Worth In\n                        </Typography>\n                        <Select\n                            labelId=\"open-select-label\"\n                            id=\"open-select\"\n                            open={open}\n                            onClose={handleClose}\n                            onOpen={handleOpen}\n                            value={yearsToMature}\n                            onChange={e => saveYearsToMature(e.target.value)}\n                        >\n                            {years.map((year) =>\n                                <MenuItem key={`${year}-Years`} value={year}>{`${year} Years`}</MenuItem>\n                            )}\n                        </Select>\n                    </FormControl>\n                </Box>\n            )}\n        </InvestmentContextConsumer>\n\n\n    )\n}","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext'\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst ExpectedMonthlyIncome = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <InvestmentContextConsumer>\n      {({ getExpectedInterestIncomeInXYears, yearsToMature }) => (\n        <Card\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <CardContent>\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <Typography\n                  align=\"center\"\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"h6\"\n                >\n                  Expected Monthly Interest in {yearsToMature} Years\n            </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h3\"\n                >\n                  £{getExpectedInterestIncomeInXYears()}\n                </Typography>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      )}\n    </InvestmentContextConsumer>\n  );\n};\n\nExpectedMonthlyIncome.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ExpectedMonthlyIncome;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst NetWorthTotal = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <InvestmentContextConsumer>\n      {({ getTotalNetWorthInXYears, yearsToMature }) => (\n        <Card\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <CardContent>\n            <Grid\n             container\n             direction=\"column\"\n             alignItems=\"center\"\n             justify=\"center\"\n            >\n              <Grid item>\n                <Typography\n                  align=\"center\"\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"h6\"\n                >\n                  Total Net Worth in {yearsToMature} Years\n                </Typography>\n                </Grid>\n                <Grid item> \n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h3\"\n                >\n                  £{getTotalNetWorthInXYears()}\n                </Typography>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      )}\n    </InvestmentContextConsumer>\n  );\n};\n\nNetWorthTotal.propTypes = {\n  className: PropTypes.string\n};\n\nexport default NetWorthTotal;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst AmountInvestedPerMonth = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <InvestmentContextConsumer>\n      {({ getAmountInvestedPerMonth }) => (\n        <Card\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <CardContent>\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Grid item>\n                <Typography\n                  align=\"center\"\n                  color=\"textSecondary\"\n                  variant=\"h6\"\n                >\n                  Amount Invested Per Month\n                </Typography>\n                </Grid>\n                <Grid item> \n                \n                <Typography\n                  gutterBottom\n                  color=\"textPrimary\"\n                  variant=\"h3\"\n                >\n                  £{getAmountInvestedPerMonth()}\n                </Typography>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card >\n      )}\n    </InvestmentContextConsumer>\n  );\n};\n\nAmountInvestedPerMonth.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AmountInvestedPerMonth;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Drawer,\n  Hidden,\n  List,\n  makeStyles,\n  Grid\n} from '@material-ui/core';\nimport {\n  BarChart as BarChartIcon,\n  TrendingUp,\n  DollarSign,\n  Download\n} from 'react-feather';\nimport NavItem from './NavItem';\nimport { SelectYears } from './SelectYears'\nimport ExpectedMonthlyIncome from '../../../views/dashboard/DashboardView/ExpectedMonthlyIncome';\nimport NetWorthTotal from '../../../views/dashboard/DashboardView/NetWorthTotal';\nimport AmountInvested from '../../../views/dashboard/DashboardView/AmountInvestedPerMonth';\n\n\nconst items = [\n  {\n    href: '/app/salary-calculator',\n    icon: DollarSign,\n    title: 'Salary Calculator'\n  },\n  {\n    href: '/app/budget',\n    icon: Download,\n    title: 'Budget'\n  },\n\n  {\n    href: '/app/investments',\n    icon: TrendingUp,\n    title: 'Investments'\n  },\n  {\n    href: '/app/net-worth',\n    icon: BarChartIcon,\n    title: 'Net Worth'\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  mobileDrawer: {\n    width: 256\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: 'calc(100% - 64px)'\n  }\n}));\n\n\nconst NavBar = ({ onMobileClose, openMobile }) => {\n  const location = useLocation();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n\n    <Box p={2}>\n      <List>\n        {items.map((item) => (\n          <NavItem\n            href={item.href}\n            key={item.title}\n            title={item.title}\n            icon={item.icon}\n          />\n        ))}\n      </List>\n      <SelectYears />\n\n      <Grid\n        spacing={3}\n        container\n        direction=\"column\"\n        justify=\"flex-end\"\n        alignItems=\"center\"\n      >\n        <Box mt={10}>\n          <Grid\n            item >\n            <ExpectedMonthlyIncome />\n\n          </Grid>\n          <Grid\n            item >\n            <NetWorthTotal />\n\n          </Grid>\n          <Grid\n            item >\n            <AmountInvested />\n\n          </Grid>\n        </Box>\n      </Grid>\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => { },\n  openMobile: false\n};\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Typography,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Logo from 'src/components/Logo';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  }\n}));\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        <Hidden smDown>\n          <Box ml={3}>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h1\">\n              Ultimate Fire Calculator\n          </Typography>\n          </Box>\n        </Hidden>\n\n        <Hidden mdUp>\n          <Box>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h1\">\n              UFC\n          </Typography>\n\n          </Box>\n        </Hidden>\n        <Box flexGrow={1} />\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n","import React, { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport NavBar from './NavBar';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst DashboardLayout = () => {\n  const classes = useStyles();\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Toolbar,\n  makeStyles,\n  Typography,\n  Box\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {},\n  toolbar: {\n    height: 64\n  }\n}));\n\nconst TopBar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar className={classes.toolbar}>\n        <Box mb={3}>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h1\">\n            Ultimate Fire Calculator\n          </Typography>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopBar;\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst MainLayout = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TopBar />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainLayout;\n","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  Divider,\n  Button,\n  TextField,\n  InputAdornment\n} from '@material-ui/core';\nimport { Formik, Form, useField } from \"formik\";\nimport { string, number, object } from \"yup\";\n\n\n\nconst Input = ({ label, inputProps, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input> and alse replace ErrorMessage entirely.\n    const [field, meta] = useField(props);\n    return (\n      <>\n        <TextField\n          label={label}\n          className=\"text-input\"\n          variant=\"outlined\"\n          required\n          fullWidth\n          InputProps={inputProps ? inputProps : null}\n          {...field} {...props} />\n        {meta.touched && meta.error ? (\n          <div className=\"error\">{meta.error}</div>\n        ) : null}\n      </>\n    );\n  };\n  \n  \nexport const AddInvestment = ({ className, addInvestment, ...rest }) => {\n    return (\n      <Box>\n        <Card\n          className={clsx(className)}\n          {...rest}\n        >\n          <CardContent>\n  \n            <Typography\n              align=\"left\"\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"h4\"\n            >\n              Add your investments\n        </Typography>\n            <Divider />\n            <Box mt={3}>\n  \n              <Formik\n                initialValues={{\n                  name: \"\",\n                  initialAmount: \"\",\n                  expectedReturn: \"\",\n                  monthlyContribution: \"\"\n                }}\n                validationSchema={object({\n                  name: string(),\n                  initialAmount: number(),\n                  expectedReturn: number(),\n                  monthlyContribution: number()\n  \n                })}\n                onSubmit={(investment, { setSubmitting, resetForm }) => {\n                  addInvestment(investment)\n                  resetForm({})\n                  setSubmitting(false);\n                }}\n              >\n                <Form>\n                  <Grid\n                    container\n                    justify=\"space-evenly\"\n                    spacing={1}\n                  >\n                    <Grid\n                      item\n                    >\n                      <Input\n                        label=\"Investment Name\"\n                        name=\"name\"\n                        type=\"text\"\n                      />\n                    </Grid>\n  \n                    <Grid\n                      item\n                    >\n                      <Input\n                        label=\"Current Value\"\n                        name=\"initialAmount\"\n                        type=\"text\"\n                        inputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                £\n                        </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                    >\n                      <Input\n                        label=\"Annual Return\"\n                        name=\"expectedReturn\"\n                        type=\"text\"\n                        inputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Typography >\n                                %\n                        </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n                    </Grid>\n  \n                    <Grid\n                      item\n                    >\n                      <Input\n                        label=\"Monthly Contribution\"\n                        name=\"monthlyContribution\"\n                        type=\"text\"\n                        inputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                £\n                        </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n                    </Grid>\n                    <Button\n                      color=\"primary\"\n                      fullWidth\n                      variant=\"text\"\n                      type=\"submit\">Add</Button>\n                  </Grid>\n                </Form>\n              </Formik>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box >\n    );\n  };\n  ","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Typography,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    IconButton,\n    TextField,\n    Button,\n    InputAdornment\n} from '@material-ui/core';\nimport { DeleteOutlined, Edit, EditOutlined, SaveOutlined, Save } from '@material-ui/icons';\nimport { Formik, useField } from \"formik\";\nimport { string, number, object } from \"yup\";\nimport { all, create } from 'mathjs'\n\nconst math = create(all, {\n\tnumber: 'BigNumber',\n\tprecision: 32\n});\n\n\nconst Input = ({ label, inputProps, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input> and alse replace ErrorMessage entirely.\n    const [field, meta] = useField(props);\n    return (\n        <>\n            <TextField\n                label={label}\n                className=\"text-input\"\n                variant=\"standard\"\n                required\n                fullWidth\n                InputProps={inputProps ? inputProps : null}\n                {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <div className=\"error\">{meta.error}</div>\n            ) : null}\n        </>\n    );\n};\n\n\nexport const InvestmentList = memo(({ className, items = [], onItemEdit, onItemRemove, onItemSave, onItemCheck, ...rest }) => {\n\n        return (\n            <Box\n                mt={3}\n            >\n                <Card\n                    className={clsx(className)}\n                    {...rest}\n                >\n                    <CardContent>\n\n                        <Typography\n                            align=\"left\"\n                            color=\"textPrimary\"\n                            gutterBottom\n                            variant=\"h4\"\n                        >\n                            Investments\n                    </Typography>\n                        <Divider />\n\n                        <Box mt={3}>\n                            <TableContainer>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align=\"center\"></TableCell>\n                                            <TableCell align=\"center\">Name</TableCell>\n                                            <TableCell align=\"center\">Initial Amount</TableCell>\n                                            <TableCell align=\"center\">Expected Return</TableCell>\n                                            <TableCell align=\"center\">Monthly Contribution</TableCell>\n                                            <TableCell align=\"center\">Annual Charge</TableCell>\n                                            <TableCell />\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {items.map((investment, idx) => \n                                            investment.editMode ? (\n                                                <Formik\n                                                    key={`form-${idx}`}\n                                                    initialValues={{\n                                                        name: investment.name,\n                                                        initialAmount: investment.initialAmount,\n                                                        expectedReturn: math.round(math.multiply(investment.expectedReturn, 100), 2),\n                                                        monthlyContribution: investment.monthlyContribution,\n                                                        annualCharge: math.round(math.multiply(investment.annualCharge, 100), 2)\n                                                    }}\n                                                    validationSchema={object({\n                                                        name: string(),\n                                                        initialAmount: number(),\n                                                        expectedReturn: number(),\n                                                        monthlyContribution: number(),\n                                                        annualCharge: number()\n                                                    })}\n                                                    onSubmit={(investment, { setStatus }) => {\n                                                        setStatus()\n                                                        onItemSave(investment, idx)\n                                                    }}\n                                                >{({ submitForm }) => (\n                                                    <TableRow key={idx}>\n                                                        <TableCell align=\"center\">\n                                                            <Save onClick={submitForm} >\n                                                                <SaveOutlined />\n                                                            </Save>\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Investment Name\"\n                                                                name=\"name\"\n                                                                type=\"text\"\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Current Value\"\n                                                                name=\"initialAmount\"\n                                                                type=\"text\"\n                                                                inputProps={{\n                                                                    startAdornment: (\n                                                                        <InputAdornment position=\"start\">\n                                                                            <Typography >\n                                                                                £\n                                                                    </Typography>\n                                                                        </InputAdornment>)\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Annual Return\"\n                                                                name=\"expectedReturn\"\n                                                                type=\"text\"\n                                                                inputProps={{\n                                                                    endAdornment: (\n                                                                        <InputAdornment position=\"end\">\n                                                                            <Typography >\n                                                                                %\n                                                                    </Typography>\n                                                                        </InputAdornment>)\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Monthly Contribution\"\n                                                                name=\"monthlyContribution\"\n                                                                type=\"text\"\n                                                                inputProps={{\n                                                                    startAdornment: (\n                                                                        <InputAdornment position=\"start\">\n                                                                            <Typography >\n                                                                                £\n                                                                    </Typography>\n                                                                        </InputAdornment>)\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Annual Charge\"\n                                                                name=\"annualCharge\"\n                                                                type=\"text\"\n                                                                inputProps={{\n                                                                    endAdornment: (\n                                                                        <InputAdornment position=\"end\">\n                                                                            <Typography >\n                                                                                %\n                                                                    </Typography>\n                                                                        </InputAdornment>)\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\">\n                                                            <IconButton aria-label=\"Delete Item\" onClick={() => onItemRemove(idx)}>\n                                                                <DeleteOutlined />\n                                                            </IconButton>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )}\n                                                </Formik>\n\n                                            ) : (\n                                                    <TableRow key={idx}>\n                                                        <TableCell align=\"center\">\n                                                            <Edit onClick={() => onItemEdit(idx)}>\n                                                                <EditOutlined />\n                                                            </Edit>\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            {investment.name}\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            £{investment.initialAmount}\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            {math.round(math.multiply(investment.expectedReturn, 100), 2)}%\n                                            </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            £{investment.monthlyContribution}\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            {math.round(math.multiply(investment.annualCharge, 100), 2)}%\n                                            </TableCell>\n                                                        <TableCell align=\"center\">\n                                                            <IconButton aria-label=\"Delete Item\" onClick={() => onItemRemove(idx)}>\n                                                                <DeleteOutlined />\n                                                            </IconButton>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                        )}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Box >\n        )\n    })\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n} from '@material-ui/core';\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext';\nimport { AddInvestment } from './AddInvestment'\nimport { InvestmentList } from './InvestmentList'\nconst Investments = ({ className, ...rest }) => {\n  return (\n    <div\n      className={clsx(className)}\n      {...rest}\n    >\n      <Card>\n        <CardContent>\n\n          <Typography\n            align=\"left\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            Investments\n                  </Typography>\n          <Divider />\n          <Box mt={3}>\n            <InvestmentContextConsumer>\n              {({ onItemSave, editInvestment, removeInvestment, investments, addInvestment }) => (\n                <>\n                  <AddInvestment addInvestment={addInvestment} />\n                  {(\n                    <InvestmentList onItemSave={onItemSave} onItemEdit={editInvestment} onItemRemove={removeInvestment} items={investments} />\n                  )}\n                </>\n              )}\n            </InvestmentContextConsumer>\n          </Box>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvestments.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Investments;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles,\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Investments from './Investments';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Index = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Investments\"\n    >\n      <Container maxWidth={false}>\n        <Investments />\n      </Container>\n    </Page>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Grid,\n    Typography,\n    colors,\n    makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100%'\n    },\n    avatar: {\n        backgroundColor: colors.red[600],\n        height: 56,\n        width: 56\n    },\n    differenceIcon: {\n        color: colors.red[900]\n    },\n    differenceValue: {\n        color: colors.red[900],\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst MonthlyTakeHomeCard = ({ className, expensesCost, totalTakeHome, difference, ...rest }) => {\n    const classes = useStyles();\n\n    return (\n\n        <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n        >\n            <CardContent>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"space-between\"\n                    spacing={3}\n                >\n                    <Grid item>\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h5\"\n                        >\n                            Monthly Net Income\n                                </Typography>\n                        <Typography\n                            color=\"textPrimary\"\n                            variant=\"h3\"\n                        >\n                            £{totalTakeHome}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h5\"\n                        >\n                            Total Expenses\n                                </Typography>\n                        <Typography\n                            color=\"textPrimary\"\n                            variant=\"h3\"\n                        >\n                            £{expensesCost}\n                        </Typography>\n                    </Grid>\n\n                    <Grid item>\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h5\"\n                        >\n                            Amount Left Over\n                                </Typography>\n                        <Typography\n                            color=\"textPrimary\"\n                            variant=\"h3\"\n                        >\n                            £{difference}\n                        </Typography>\n                    </Grid>\n\n                </Grid>\n                <Box\n                    mt={2}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                >\n                </Box>\n            </CardContent>\n        </Card>\n    );\n};\n\nMonthlyTakeHomeCard.propTypes = {\n    className: PropTypes.string\n};\n\nexport default MonthlyTakeHomeCard;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n  Box,\n  InputAdornment,\n  TextField,\n  Grid,\n  Button\n} from '@material-ui/core';\nimport { Formik, Form, useField } from \"formik\";\nimport { string, number, object } from \"yup\";\n\nconst Input = ({ label, type, inputProps, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <TextField\n        type={type}\n        label={label}\n        className=\"text-input\"\n        variant=\"outlined\"\n        required\n        fullWidth\n        InputProps={inputProps ? inputProps : null}\n        {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst Expenses = ({ className, addExpense, ...rest }) => {\n  return (\n    <Box>\n      <Card\n        className={clsx(className)}\n        {...rest}\n      >\n        <CardContent>\n          <Typography\n            align=\"left\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h4\"\n          >\n            List Your Monthly Expenses\n        </Typography>\n          <Divider />\n          <Box \n            mt={3}>\n          <Formik\n              initialValues={{\n                name: \"\",\n                cost: \"\"\n              }}\n              validationSchema={object({\n                name: string(),\n                cost: number(),\n              })}\n              onSubmit={(expense, { setSubmitting, resetForm }) => {\n                addExpense(expense)\n                resetForm({})\n                setSubmitting(false);\n              }}\n            >\n              <Form>\n                <Grid\n                  container\n                  justify=\"space-evenly\"\n                  spacing={1}\n                >\n                  <Grid\n                    item\n                  >\n                    <Input\n                      label=\"Expense Name\"\n                      name=\"name\"\n                      type=\"text\"\n                    />\n                  </Grid>\n\n                  <Grid\n                    item\n                  >\n                    <Input\n                      label=\"Expense cost\"\n                      name=\"cost\"\n                      type=\"tel\"\n                      inputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <Typography >\n                              £\n                      </Typography>\n                          </InputAdornment>)\n                      }}\n                    />\n                  </Grid>                \n                    <Button\n                      color=\"primary\"\n                      fullWidth\n                      variant=\"text\"\n                      type=\"submit\">Submit</Button>\n                </Grid>\n              </Form>\n            </Formik>\n          </Box>\n        </CardContent>\n      </Card>\n    </Box >\n  );\n};\n\nExpenses.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Expenses;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Typography,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    IconButton,\n    Checkbox\n} from '@material-ui/core';\nimport DeleteOutlined from '@material-ui/icons/DeleteOutlined';\n\n\nconst ExpenseList = memo(({ className, items = [], onItemRemove, onItemCheck, ...rest }) => (\n    <Box\n        mt={3}\n    >\n        <Card\n            className={clsx(className)}\n            {...rest}\n        >\n            <CardContent>\n\n                <Typography\n                    align=\"left\"\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"h4\"\n                >\n                    Expenses\n                    </Typography>\n                <Divider />\n\n                <Box mt={3}>\n                    <TableContainer>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"left\">Include?</TableCell>\n                                    <TableCell align=\"center\">Name</TableCell>\n                                    <TableCell align=\"center\">Cost</TableCell>\n                                    <TableCell align=\"center\">Remove</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {items.map((expense, idx) => (\n                                    <TableRow key={idx}>\n                                        <TableCell align=\"center\" padding=\"checkbox\">\n                                            <Checkbox\n                                                onClick={() => onItemCheck(idx)}\n                                                checked={expense.checked}\n                                            />\n                                        </TableCell>\n                                        <TableCell align=\"center\" >\n                                            {expense.name}\n                                        </TableCell>\n                                        <TableCell align=\"center\" >\n                                            £{expense.cost}\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            <IconButton aria-label=\"Delete Item\" onClick={() => onItemRemove(idx)}>\n                                                <DeleteOutlined />\n                                            </IconButton>\n                                        </TableCell>\n\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Box>\n            </CardContent>\n        </Card>\n    </Box>\n\n));\nexport default ExpenseList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  Divider\n} from '@material-ui/core';\nimport MonthlyTakeHomeCard from './MonthlyTakeHomeCard'\nimport AddExpenses from './AddExpenses'\nimport ExpenseList from './ExpenseList'\nimport { SalaryContextConsumer } from '../../../context/SalaryContext';\nimport { BudgetContextConsumer } from '../../../context/BudgetContext';\nimport { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\n\nconst ExpenseHeaderCard = ({ className, ...rest }) => {\n  return (\n    <div\n      className={clsx(className)}\n      {...rest}\n    >\n      <Card>\n        <CardContent>\n\n          <Typography\n            align=\"left\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            Budget\n                  </Typography>\n          <Divider />\n          <Box mt={3}>\n            <BudgetContextConsumer>\n              {budgetContext => (\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={3}\n                >\n                  <Grid\n                    item\n                    lg={6}\n                    sm={6}\n                    xl={6}\n                    xs={6}\n                  >\n                    <AddExpenses\n                      addExpense={budgetContext.addExpense}\n                    />\n                    {budgetContext.expenses.length > 0 && (\n                      <ExpenseList\n                        items={budgetContext.expenses}\n                        onItemCheck={idx => budgetContext.checkExpense(idx)}\n                        onItemRemove={idx => budgetContext.removeExpense(idx)}\n                      />\n                    )}\n                  </Grid>\n\n                  <Grid\n                    item\n                    lg={6}\n                    sm={6}\n                    xl={6}\n                    xs={6}\n                  >\n                    <SalaryContextConsumer>\n                      {({ userTax, }) => userTax.totalTakeHome && (\n                        <MonthlyTakeHomeCard totalTakeHome={math.round(math.divide(userTax.totalTakeHome, 12), 2)} difference={math.round(math.subtract(math.divide(userTax.totalTakeHome, 12), budgetContext.expenseTotal), 2)} expensesCost={budgetContext.expenseTotal} />\n                      )}\n                    </SalaryContextConsumer>\n                  </Grid>\n                </Grid>\n              )}\n            </BudgetContextConsumer>\n\n          </Box>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nExpenseHeaderCard.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ExpenseHeaderCard;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Budget from './Budget'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Index = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Budget\"\n    >\n      <Container maxWidth={false}>\n        <Box>\n          <Budget />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport { SalaryContextConsumer } from 'src/context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst TakeHomeIncome = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <SalaryContextConsumer>\n      {context => (\n        <Card\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <CardContent>\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Grid item>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"h6\"\n                  >\n                  Annual Take Home Pay\n                </Typography>\n                </Grid>\n\n                <Grid item> \n                <Typography\n                  color=\"textPrimary\"\n                  gutterBottom\n                  variant=\"h3\"\n                >\n                  £{context.userTax.totalTakeHome || 0 }\n              </Typography>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      )}\n    </SalaryContextConsumer>\n  );\n};\n\nTakeHomeIncome.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TakeHomeIncome;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AreaChart, Area, XAxis, YAxis, ResponsiveContainer, Tooltip,\n} from 'recharts';\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\n\nconst colours = Object.values(colors.indigo)\n\n\nconst NetWorth = ({ investmentData, className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const chartData = {\n    data: investmentData\n  }\n\n  return investmentData.length > 0 && (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Net Worth Over Time\"\n      />\n      <Divider />\n      <CardContent>\n        <Box\n          height={600}\n          position=\"relative\"\n        >\n          <ResponsiveContainer width={\"100%\"} height=\"100%\">\n            <AreaChart\n              data={chartData.data}\n              margin={{\n                top: 10, right: 0, left: 30, bottom: 0,\n              }}\n            >\n\n              <XAxis fontFamily={theme.typography.fontFamily} />\n              <YAxis fontFamily={theme.typography.fontFamily} />\n              <Tooltip fontFamily={theme.typography.fontFamily} />\n              {\n                Object.keys(chartData.data[0])\n                  .filter(key => key !== 'year')\n                  .map((investmentType, i) =>\n                    <Area key={`${investmentType}-${i}`}type=\"monotone\" dataKey={investmentType} stackId='1' stroke={colours[i]} fill={colours[i]} />\n                  )}\n            </AreaChart>\n          </ResponsiveContainer>\n\n        </Box>\n      </CardContent>\n      <Divider />\n      {/* <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button>\n      </Box> */}\n    </Card>\n  );\n};\n\nNetWorth.propTypes = {\n  className: PropTypes.string\n};\n\nexport default NetWorth;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Typography,\n  colors,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\nimport {\n  PieChart, Pie, Tooltip, Cell, ResponsiveContainer\n} from 'recharts';\n\n\nconst data = [\n  { name: 'Pre Tax', value: 38 },\n  { name: 'Post Tax', value: 40 },\n\n];\nconst colours = Object.values(colors.green)\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst TrafficByDevice = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Saving Percentage (hardcoded)\" />\n      <Divider />\n      <CardContent>\n        <Box\n          height={300}\n          position=\"relative\"\n        >\n          <ResponsiveContainer width={\"100%\"} height=\"100%\">\n            <PieChart >\n              <Pie\n                data={data}\n                startAngle={180}\n                endAngle={0}\n                innerRadius={60}\n                outerRadius={80}\n                fill=\"#8884d8\"\n                paddingAngle={5}\n                dataKey=\"value\"\n                fontFamily={theme.typography.fontFamily}\n              >\n                {\n                  data.map((entry, index) => <Cell fontFamily={theme.typography.fontFamily} key={`cell-${index}`} fill={colours[index]} />)\n                }\n              </Pie>\n            </PieChart>\n          </ResponsiveContainer>\n\n        </Box>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          mt={2}\n        >\n          {data.map(({\n            color,\n            name,\n            value\n          }) => (\n              <Box\n                key={name}\n                p={1}\n                textAlign=\"center\"\n              >\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  {name}\n                </Typography>\n                <Typography\n                  style={{ color }}\n                  variant=\"h2\"\n                >\n                  {value}\n                %\n              </Typography>\n              </Box>\n            ))}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTrafficByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TrafficByDevice;\n","\n\nexport const convertCompoundDataToGraph = investments =>\n  investments.reduce((accum, investment) => {\n    for (const [year, months] of Object.entries(investment.compoundData)) {\n      let isYearInAccum = accum.find(entry => entry.year === year)\n      \n      if (isYearInAccum) {\n        isYearInAccum[investment.name] = months['Month 1'].balance\n      } else {\n        accum.push({\n          year,\n          [investment.name]: months['Month 1'].balance,\n        })\n      }\n    }\n\n    return accum\n  }, [])\n\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport TakeHomeIncome from './TakeHomeIncome';\nimport NetWorth from './NetWorth';\nimport TasksProgress from './NetWorthTotal';\nimport AmountInvestedPerMonth from './AmountInvestedPerMonth';\nimport TotalProfit from './ExpectedMonthlyIncome';\nimport TrafficByDevice from './SavingPercentage';\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext';\nimport { convertCompoundDataToGraph } from '../../../utils/convertCompoundDataToGraph';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard\"\n    >\n      <Container maxWidth={false}>\n        <InvestmentContextConsumer>\n          {({ investments }) => (\n\n\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                lg={3}\n                sm={6}\n                xl={3}\n                xs={12}\n              >\n                <TakeHomeIncome />\n              </Grid>\n              <Grid\n                item\n                lg={3}\n                sm={6}\n                xl={3}\n                xs={12}\n              >\n                <AmountInvestedPerMonth />\n              </Grid>\n              <Grid\n                item\n                lg={3}\n                sm={6}\n                xl={3}\n                xs={12}\n              >\n                <TasksProgress />\n              </Grid>\n              <Grid\n                item\n                lg={3}\n                sm={6}\n                xl={3}\n                xs={12}\n              >\n                <TotalProfit />\n              </Grid>\n              <Grid\n                item\n                lg={8}\n                md={12}\n                xl={9}\n                xs={12}\n              >\n                <NetWorth investmentData={convertCompoundDataToGraph(investments)} />\n              </Grid>\n              <Grid\n                item\n                lg={4}\n                md={6}\n                xl={3}\n                xs={12}\n              >\n                <TrafficByDevice />\n              </Grid>\n              <Grid\n                item\n                lg={4}\n                md={6}\n                xl={3}\n                xs={12}\n              >\n              </Grid>\n            </Grid>\n          )}\n        </InvestmentContextConsumer>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  image: {\n    marginTop: 50,\n    display: 'inline-block',\n    maxWidth: '100%',\n    width: 560\n  }\n}));\n\nconst NotFoundView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"404\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"md\">\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"h1\"\n          >\n            404: The page you are looking for isn’t here\n          </Typography>\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"subtitle2\"\n          >\n            You either tried some shady route or you came here by mistake.\n            Whichever it is, try using the navigation\n          </Typography>\n          <Box textAlign=\"center\">\n            <img\n              alt=\"Under development\"\n              className={classes.image}\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            />\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  Typography,\n  makeStyles,\n  Grid,\n  Divider\n} from '@material-ui/core';\nimport { Formik, Form, useField } from \"formik\";\nimport { number, object } from \"yup\";\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext';\nimport { all, create } from 'mathjs'\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Input = ({ label, type, inputProps, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <TextField\n        type={type}\n        label={label}\n        className=\"text-input\"\n        variant=\"outlined\"\n        required\n        fullWidth\n        InputProps={inputProps ? inputProps : null}\n        {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\n\nconst IncomeDetails = ({ setUserFinances, userTax, className, ...rest }) => {\n  const classes = useStyles();\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <InvestmentContextConsumer>{({ addMultipleInvestments }) => (\n        <Card>\n          <CardContent>\n\n            <Typography\n              align=\"left\"\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"h3\"\n            >\n              Your Situation\n                  </Typography>\n            <Divider />\n            <Box mt={3}>\n              <Formik\n                initialValues={{\n                  salary: userTax.salary || 0,\n                  personalPensionContribution:  userTax.personalPensionContributionPercent ? math.round(math.multiply(userTax.personalPensionContributionPercent, 100), 2) : 0,\n                  employerPensionContribution: userTax.employerPensionContributionPercent ? math.round(math.multiply(userTax.employerPensionContributionPercent, 100), 2) : 0,\n                  taxFreePersonalAllowance: userTax.taxFreePersonalAllowance || 12500,\n                }}\n                validationSchema={object({\n                  salary: number(),\n                  personalPensionContribution: number(),\n                  employerPensionContribution: number(),\n                  taxFreePersonalAllowance: number(),\n\n                })}\n                onSubmit={(userFinance, { setSubmitting }) => {\n                  setUserFinances(userFinance, addMultipleInvestments)\n                  setSubmitting(false);\n                }}\n              >\n                <Form>\n                  <Grid\n                    container\n                    spacing={3}\n                  >\n                    <Grid\n                      item\n                      lg={6}\n                      md={6}\n                      xs={12}\n                    >\n                      <Input\n                        label=\"Annual Salary\"\n                        name=\"salary\"\n                        type=\"tel\"\n                        inputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                £\n                                    </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid\n                      item\n                      lg={6}\n                      md={6}\n                      xs={12}\n                    >\n\n                      <Input\n                        label=\"Personal Pension Contribution Percentage\"\n                        name=\"personalPensionContribution\"\n                        type=\"tel\"\n                        inputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                %\n                                    </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n\n                    </Grid>\n\n                    <Grid\n                      item\n                      lg={6}\n                      md={6}\n                      xs={12}\n                    >\n\n                      <Input\n                        label=\"Employer Pension Contribution Percentage\"\n                        name=\"employerPensionContribution\"\n                        type=\"tel\"\n                        inputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                %\n                                    </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n\n                    </Grid>\n\n                    <Grid\n                      item\n                      lg={6}\n                      md={6}\n                      xs={12}\n                    >\n\n                      <Input\n                        label=\"Tax Free Personal Allowance\"\n                        name=\"taxFreePersonalAllowance\"\n                        type=\"tel\"\n                        inputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                £\n                                    </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n\n                    </Grid>\n                  </Grid>\n                  <Box\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    p={2}\n                    mt={3}>\n                    <Button\n                      type=\"submit\"\n                      color=\"primary\"\n                      fullWidth\n                      variant=\"text\">Calculate</Button>\n                  </Box>\n                </Form>\n              </Formik>\n            </Box>\n          </CardContent>\n        </Card>\n      )}\n      </InvestmentContextConsumer>\n    </div >\n  );\n};\n\nIncomeDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default IncomeDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  statsItem: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  statsIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst IncomeTaxCard = ({ className, userTax, ...rest }) => {\n  const classes = useStyles();\n\n  return userTax.salary > 0 && (\n\n    <Box>\n\n\n      <Card\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <CardContent>\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h4\"\n          >\n            Income Tax\n        </Typography>\n          <Divider />\n          <Box mt={3} >\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Tax free allowance: £{userTax.incomeTax.taxFreePersonalAllowance}\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Total Income Tax: £{userTax.incomeTax.totalIncomeTax}\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Taxable Income: £{userTax.taxableIncome}\n                </Typography>\n              </Grid>       <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Tax paid at lower band: £{userTax.incomeTax.lowerBand.taxPaid}\n                </Typography>\n              </Grid>       <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Tax paid at medium band: £{userTax.incomeTax.mediumBand.taxPaid}\n                </Typography>\n              </Grid>       <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Tax paid at higher band: £{userTax.incomeTax.upperBand.taxPaid}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Box>\n        </CardContent>\n        <Box flexGrow={1} />\n        <Divider />\n      </Card>\n    </Box>\n  );\n};\n\nIncomeTaxCard.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default IncomeTaxCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { SalaryContextConsumer } from '../../../context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  statsItem: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  statsIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst NationalInsuranceCard = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Box >\n      <SalaryContextConsumer>\n        {context => context.userTax.salary > 0 && (\n          <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n          >\n            <CardContent>\n\n              <Typography\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h4\"\n              >\n                National Insurance\n        </Typography>\n              <Divider />\n              <Box height=\"100%\" mt={3}>\n                <Grid\n                  container\n                  spacing={3}\n                >\n\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Typography\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      variant=\"body1\"\n                    >\n                      Total N.I. Paid: £{context.userTax.nationalInsuranceTax.totalNationalInsuranceTax}\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Typography\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      variant=\"body1\"\n                    >\n                      Tax paid at lower band: £{context.userTax.nationalInsuranceTax.lowerBand.taxPaid}\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Typography\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      variant=\"body1\"\n                    >\n                      Tax paid at medium band: £{context.userTax.nationalInsuranceTax.mediumBand.taxPaid}\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Typography\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      variant=\"body1\"\n                    >\n                      Tax paid at higher band: £{context.userTax.nationalInsuranceTax.upperBand.taxPaid}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Box>\n            </CardContent>\n            <Box />\n            <Divider />\n          </Card>\n        )}\n      </SalaryContextConsumer>\n    </Box>\n  );\n};\n\nNationalInsuranceCard.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default NationalInsuranceCard;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport UserFinance from './IncomeDetails';\nimport IncomeTaxCard from './IncomeTaxCard'\nimport NationalInsurance from './NationalInsuranceCard'\nimport BreakdownCard from './BreakdownCard';\nimport { SalaryContextConsumer } from '../../../context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst SalaryCalculator = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Salary Calculator\"\n    >\n      <SalaryContextConsumer>\n        {\n          ({ setUserFinances, userTax }) => (\n            <Container maxWidth={false}>\n              <UserFinance userTax={userTax} setUserFinances={setUserFinances}/>\n              <Box mt={3} >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={3}\n                >\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={6}\n                  >                  \n                  <IncomeTaxCard userTax={userTax} />\n                  </Grid>\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={6}\n                  >\n                    <NationalInsurance />\n                  </Grid>\n                </Grid>\n                {/* <BreakdownCard /> */}\n              </Box>\n            </Container>\n          )}\n      </SalaryContextConsumer>\n    </Page>\n  );\n};\n\nexport default SalaryCalculator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Divider,\n    Typography,\n    makeStyles,\n    Collapse,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    IconButton\n} from '@material-ui/core';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nimport { SalaryContextConsumer } from '../../../context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    table: {\n        minWidth: 650,\n    },\n    statsItem: {\n        alignItems: 'center',\n        display: 'flex'\n    },\n    statsIcon: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst BreakdownCard = ({ className, ...rest }) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <SalaryContextConsumer>\n            {context => context.userTax.salary > 0 && (\n                <Box mt={3}>\n                <Card\n                    className={clsx(classes.root, className)}\n                    {...rest}\n                >\n                    <CardContent>\n\n                        <Typography\n                            align=\"center\"\n                            color=\"textPrimary\"\n                            gutterBottom\n                            variant=\"h3\"\n                        >\n                            Tax Breakdown\n                        </Typography>\n                        <Divider />\n                        <Box mt={3}>\n                            <TableContainer component={Paper}>\n                                <Table className={classes.table} aria-label=\"simple table\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell />\n                                            <TableCell align=\"center\">Yearly</TableCell>\n                                            <TableCell align=\"center\">Monthly</TableCell>\n                                            <TableCell align=\"center\">Weekly</TableCell>\n                                            <TableCell align=\"center\">Daily</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        <TableRow key={'id'}>\n                                            <TableCell align=\"center\" >\n                                                <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                                                    {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                                                </IconButton>\n                                            </TableCell>\n\n\n                                            <TableCell align=\"center\" >\n                                                Gross Income\n                                        </TableCell>\n                                            <TableCell align=\"center\" >\n                                                £test\n                                        </TableCell>\n                                          \n\n                                            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                                                <Box margin={1}>\n                                                    <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                                        History\n                                                     </Typography>\n                                                    <Table size=\"small\" aria-label=\"purchases\">\n                                                        <TableHead>\n                                                            <TableRow>\n                                                                <TableCell>Date</TableCell>\n                                                                <TableCell>Customer</TableCell>\n                                                                <TableCell align=\"right\">Amount</TableCell>\n                                                                <TableCell align=\"right\">Total price ($)</TableCell>\n                                                            </TableRow>\n                                                        </TableHead>\n                                                        <TableBody>\n                                                            <TableRow key='id'>\n                                                                <TableCell component=\"th\" scope=\"row\">\n                                                                    date\n                                                                    </TableCell>\n                                                                <TableCell>id</TableCell>\n                                                                <TableCell align=\"right\">sigh</TableCell>\n                                                            </TableRow>\n                                                        </TableBody>\n                                                    </Table>\n                                                </Box>\n                                            </Collapse>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </Box>\n                    </CardContent>\n                    <Divider />\n                </Card>\n            </Box>\n            )}\n        </SalaryContextConsumer >\n    );\n};\n\nBreakdownCard.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default BreakdownCard;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/layouts/DashboardLayout';\nimport MainLayout from 'src/layouts/MainLayout';\nimport Investments from 'src/views/investments/Investments';\nimport Budget from 'src/views/budget/Budget';\nimport NetWorthDashboard from 'src/views/dashboard/DashboardView';\nimport NotFoundView from 'src/views/errors/NotFoundView';\nimport SalaryCalculator from 'src/views/salaryCalculator/SalaryCalculator';\nimport SettingsView from 'src/views/settings/SettingsView';\n\nconst routes = [\n  {\n    path: 'app',\n    element: <DashboardLayout />,\n    children: [\n      { path: 'investments', element: <Investments /> },\n      { path: 'budget', element: <Budget /> },\n      { path: 'net-worth', element: <NetWorthDashboard /> },\n      { path: 'salary-calculator', element: <SalaryCalculator /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  },\n  {\n    path: '/',\n    element: <MainLayout />,\n    children: [\n      { path: '404', element: <NotFoundView /> },\n      { path: '/', element: <Navigate to=\"/app/salary-calculator\" /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  }\n];\n\nexport default routes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Notifications = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Manage the notifications\"\n          title=\"Notifications\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Notifications\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Text Messages\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Messages\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {}\n}));\n\nconst Password = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Update password\"\n          title=\"Password\"\n        />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            margin=\"normal\"\n            name=\"confirm\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Update\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Password;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Notifications from './Notifications';\nimport Password from './Password';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst SettingsView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Settings\"\n    >\n      <Container maxWidth=\"lg\">\n        <Notifications />\n        <Box mt={3}>\n          <Password />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SettingsView;\n","import 'react-perfect-scrollbar/dist/css/styles.css';\nimport React from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\n\nconst App = () => {\n  const routing = useRoutes(routes);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {routing}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { SalaryContextProvider } from './context/SalaryContext'\nimport { BudgetContextProvider } from './context/BudgetContext'\nimport { InvestmentContextProvider } from './context/InvestmentContext'\n\nimport App from './App';\n\nReactDOM.render((\n  <HashRouter>\n    <SalaryContextProvider>\n      <BudgetContextProvider>\n        <InvestmentContextProvider>\n          <App />\n        </InvestmentContextProvider>\n      </BudgetContextProvider>\n    </SalaryContextProvider>\n  </HashRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}