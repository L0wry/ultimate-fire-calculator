{"version":3,"sources":["serviceWorker.js","utils/calculatePreTaxDeductions.js","consts/index.js","utils/calculateIncomeTax.js","utils/taxTypes.js","utils/calculateNationalInsurance.js","utils/calculateStudentLoan.js","utils/calculateAllTax.js","context/SalaryContext.jsx","context/BudgetContext.jsx","utils/calculateCompoundInterest.js","context/InvestmentContext.jsx","components/GlobalStyles.js","theme/index.js","theme/shadows.js","theme/typography.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/SelectYears.jsx","layouts/DashboardLayout/NavBar/SelectDrawDown.jsx","views/dashboard/DashboardView/ExpectedMonthlyIncome.js","views/dashboard/DashboardView/NetWorthTotal.js","views/dashboard/DashboardView/AmountInvestedPerMonth.jsx","layouts/DashboardLayout/NavBar/index.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/investments/Investments/AddInvestment.jsx","views/investments/Investments/InvestmentList.jsx","views/investments/Investments/Investments.jsx","views/investments/Investments/index.js","views/budget/Budget/MonthlyTakeHomeCard.jsx","views/budget/Budget/AddExpenses.jsx","views/budget/Budget/ExpenseList.jsx","views/budget/Budget/Budget.jsx","views/budget/Budget/index.js","views/dashboard/DashboardView/TakeHomeIncome.js","views/dashboard/DashboardView/NetWorth.js","views/dashboard/DashboardView/Fire.jsx","utils/convertCompoundDataToGraph.js","utils/convertInvestmentDataToFire.js","views/dashboard/DashboardView/index.js","views/errors/NotFoundView.js","views/salaryCalculator/SalaryCalculator/IncomeDetails.jsx","views/salaryCalculator/SalaryCalculator/IncomeTaxCard.jsx","views/salaryCalculator/SalaryCalculator/NationalInsuranceCard.jsx","views/salaryCalculator/SalaryCalculator/index.jsx","views/salaryCalculator/SalaryCalculator/BreakdownCard.jsx","routes.js","views/settings/SettingsView/Notifications.js","views/settings/SettingsView/Password.js","views/settings/SettingsView/index.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","math","create","all","number","precision","TAX_BANDS","nationalInsuranceTaxBands","totalNationalInsuranceTax","weeklyNationalInsuranceTax","lowerBand","taxPercent","start","end","taxPaid","carryOver","mediumBand","upperBand","BANDS","PLAN_TYPES","calculateStudentLoan","studentLoanPlanType","salary","monthlyAmountPaid","yearlyAmountPaid","difference","subtract","chain","divide","multiply","round","done","calculatePlanOne","calculatePlanTwo","calculateAllTax","taxFreePersonalAllowance","employerPensionContributionPercent","personalPensionContributionPercent","personalPensionContribution","employerPensionContribution","taxBreaks","taxBreaksTotal","reduce","accum","item","add","amount","taxableIncome","calculatePreTaxDeductions","incomeTax","tax","amountOver","amountToRemoveFromPersonalAllowance","Math","floor","newTaxFreeAmount","taxFreePersonalAllowanceRemovedBy100kTax","band","totalIncomeTax","calculateIncomeTax","incomeTaxBands","nationalInsuranceTax","calculateNationalInsurance","studentLoan","totalTakeHome","SalaryContext","React","createContext","SalaryContextProvider","children","state","JSON","parse","localStorage","getItem","useState","userTax","setUserTax","Provider","value","setUserFinances","addMultipleInvestments","setItem","stringify","name","monthlyContribution","useSalaryContext","context","useContext","undefined","Error","BudgetContext","BudgetContextProvider","expenses","setExpenses","expenseTotal","length","filter","checked","acc","i","cost","addExpense","newExpenses","concat","parseFloat","checkExpense","idx","map","expense","index","removeExpense","_","useBudgetContext","calculateYearlyCompoundWithCharge","initialAmount","expectedReturn","annualCharge","noOfYearsToMature","compoundInterest","totalAmount","calculateMonthlyCompoundInterest","totalAmountAfterMaturing","balance","cumulativeInterest","earnedInterest","InvestmentContext","InvestmentContextProvider","investmentState","yearState","drawdownState","investments","setInvestments","yearsToMature","setYearsToMature","drawDownPercent","setDrawDownPercent","saveInvestments","investmentToSave","saveDrawdown","percent","console","log","saveYearsToMature","years","newInvestments","investment","investmentToRecalculate","compoundData","onItemSave","editMode","investmentCopy","addInvestment","getAmountInvestedPerMonth","getTotalNetWorthInXYears","investmentsToAdd","copy","newInvestment","isInvestmentAlreadyInList","findIndex","oldInvestments","push","removeInvestment","editInvestment","getExpectedInterestIncomeInXYears","useInvestmentContext","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","theme","createMuiTheme","typography","palette","background","dark","default","colors","common","white","paper","primary","main","blue","secondary","text","blueGrey","shadows","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","h1","fontWeight","letterSpacing","h2","h3","h4","h5","h6","overline","display","paddingTop","paddingBottom","button","color","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","formControl","minWidth","Array","fill","SelectYears","open","setOpen","Box","alignItems","FormControl","style","Typography","align","gutterBottom","variant","Select","textAlign","labelId","id","onClose","onOpen","onChange","e","target","year","MenuItem","key","percentages","SelectDrawDown","root","ExpectedMonthlyIncome","Card","CardContent","Grid","container","direction","toString","replace","NetWorthTotal","justify","AmountInvestedPerMonth","items","DollarSign","Download","TrendingUp","BarChartIcon","mobileDrawer","desktopDrawer","top","NavBar","onMobileClose","openMobile","useLocation","useEffect","pathname","content","p","List","mt","Hidden","lgUp","Drawer","anchor","mdDown","defaultProps","avatar","TopBar","onMobileNavOpen","AppBar","elevation","Toolbar","smDown","ml","mdUp","flexGrow","IconButton","onClick","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","toolbar","mb","MainLayout","Page","forwardRef","ref","Helmet","Input","label","inputProps","props","useField","field","meta","TextField","required","fullWidth","InputProps","touched","error","AddInvestment","Divider","initialValues","validationSchema","object","string","onSubmit","setSubmitting","resetForm","lg","md","xs","type","startAdornment","InputAdornment","position","endAdornment","InvestmentList","memo","onItemEdit","onItemRemove","onItemCheck","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","setStatus","submitForm","Save","SaveOutlined","aria-label","DeleteOutlined","Edit","EditOutlined","Investments","minHeight","Index","Container","maxWidth","red","differenceIcon","differenceValue","MonthlyTakeHomeCard","expensesCost","Expenses","ExpenseList","Checkbox","ExpenseHeaderCard","takeHome","setTakeHome","prevState","sm","xl","AddExpenses","Budget","TakeHomeIncome","colours","Text","stroke","dataKey","ToolTip","m","payload","NetWorth","investmentData","useTheme","CardHeader","data","right","left","bottom","strokeDasharray","tickFormatter","Object","keys","investmentType","stackId","LegendText","Fire","classyear","convertCompoundDataToGraph","months","isYearInAccum","find","entry","entries","convertInvestmentDataToFire","drawdownPercent","incomeToAdd","Dashboard","image","marginTop","NotFoundView","flexDirection","alt","src","importButton","exportButton","IncomeDetails","handleClose","handleOpen","userFinance","values","handleChange","InputLabel","statsItem","statsIcon","IncomeTaxCard","NationalInsuranceCard","table","SalaryCalculator","routes","path","element","App","routing","useRoutes","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d488f7fb.chunk.js","sourcesContent":["/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nexport function calculatePreTaxDeductions({ salary = 0, personalPensionContribution = 0 }, taxBreaks = []) {\n\n  const taxBreaksTotal = taxBreaks.reduce((accum, item) => math.add(accum, item.amount), 0)\n  let taxableIncome = math\n    .chain(salary)\n    .subtract(personalPensionContribution)\n    .subtract(taxBreaksTotal)\n    .done()\n\n  taxableIncome = taxableIncome > 0\n    ? taxableIncome = taxableIncome\n    : 0\n\n\n  return {\n    taxBreaksTotal,\n    taxableIncome\n  }\n\n}\n","export const TAX_BANDS = ['lowerBand', 'mediumBand', 'upperBand']","import { all, create } from 'mathjs'\n\nimport { TAX_BANDS } from 'src/consts/';\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst ROUND_AMOUNT = 2\n\nexport const calculateIncomeTax = (tax, taxableIncome) => {\n\n  const isSalaryOver100k = taxableIncome > 100000\n\n  if (isSalaryOver100k) {\n    const amountOver = math.subtract(taxableIncome, 100000)\n\n    const amountToRemoveFromPersonalAllowance = Math.floor(math.divide(amountOver, 2))\n    const newTaxFreeAmount = math.subtract(tax.taxFreePersonalAllowance, amountToRemoveFromPersonalAllowance) > 0 ?\n      math.subtract(tax.taxFreePersonalAllowance, amountToRemoveFromPersonalAllowance) :\n      0\n\n    tax.taxFreePersonalAllowanceRemovedBy100kTax = amountToRemoveFromPersonalAllowance > tax.taxFreePersonalAllowance ? tax.taxFreePersonalAllowance : amountToRemoveFromPersonalAllowance\n    tax.taxFreePersonalAllowance = newTaxFreeAmount\n  }\n\n  taxableIncome = math.subtract(taxableIncome, tax.taxFreePersonalAllowance)\n\n  let carryOver = taxableIncome\n\n  for (const band of TAX_BANDS) {\n    const difference = math.subtract(tax[band].end, tax[band].start)\n\n    if (math.subtract(carryOver, difference) > 0) {\n      tax[band].taxPaid = math.round(math.multiply(difference, tax[band].taxPercent), ROUND_AMOUNT)\n      tax.totalIncomeTax = math.add(tax.totalIncomeTax, tax[band].taxPaid)\n      tax[band].carryOver = math.subtract(carryOver, difference)\n      carryOver = math.subtract(carryOver, difference)\n\n    } else {\n      tax[band].taxPaid = math.multiply(carryOver, tax[band].taxPercent) > 0\n        ? math.round(math.multiply(carryOver, tax[band].taxPercent), ROUND_AMOUNT)\n        : 0\n\n      tax.totalIncomeTax = math.round(math.add(tax.totalIncomeTax, tax[band].taxPaid), ROUND_AMOUNT)\n      carryOver = 0\n      break\n    }\n  }\n\n  return tax\n}\n\n","export const incomeTaxBands = (taxFreePersonalAllowance = 12500 ) => ({\n  taxFreePersonalAllowance,\n  totalIncomeTax: 0,\n  lowerBand: {\n    taxPercent: .2,\n    start: taxFreePersonalAllowance + 0.01,\n    end: 50000,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  mediumBand: {\n    taxPercent: .4,\n    start: 50000.01,\n    end: 150000,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  upperBand: {\n    taxPercent: .45,\n    start: 150000.01,\n    end: 99999999,\n    taxPaid: 0,\n    carryOver: 0\n  }\n})\n\nexport const nationalInsuranceTaxBands = {\n  totalNationalInsuranceTax: 0,\n  weeklyNationalInsuranceTax: 0,\n  lowerBand: {\n    taxPercent: 0,\n    start: 0,\n    end: 183,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  mediumBand: {\n    taxPercent: .12,\n    start: 183.01,\n    end: 962.00,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  upperBand: {\n    taxPercent: .02,\n    start: 962.01,\n    end: 99999999,\n    taxPaid: 0,\n    carryOver: 0\n  }\n}\n","import { all, create } from 'mathjs'\n\nconst BANDS = ['lowerBand', 'mediumBand', 'upperBand']\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst WEEKS_IN_YEAR = 52\nconst ROUND_AMOUNT = 2\n\n\nexport const calculateNationalInsurance = (tax, taxableIncome) => {\n  tax.weeklyNationalInsuranceTax = 0;\n  tax.totalNationalInsuranceTax = 0;\n  const weeklyIncome = math.divide(taxableIncome, WEEKS_IN_YEAR)\n\n  let carryOver = weeklyIncome\n\n  for (const band of BANDS) {\n    const difference = math.subtract(tax[band].end, tax[band].start)\n    if (math.subtract(carryOver, difference) > 0) {\n      tax[band].taxPaid = math.round(math.multiply(difference, tax[band].taxPercent), ROUND_AMOUNT)\n      tax.weeklyNationalInsuranceTax = math.add(tax.weeklyNationalInsuranceTax, tax[band].taxPaid)\n\n\n      tax[band].carryOver = math.subtract(carryOver, difference)\n      carryOver = math.subtract(carryOver, difference)\n\n    } else {\n      tax[band].taxPaid = math.multiply(carryOver, tax[band].taxPercent) > 0\n        ? math.round(math.multiply(carryOver, tax[band].taxPercent), ROUND_AMOUNT)\n        : 0\n\n      tax.weeklyNationalInsuranceTax = math.round(math.add(tax.weeklyNationalInsuranceTax, tax[band].taxPaid), ROUND_AMOUNT)\n      \n      carryOver = 0\n      break\n    }\n  }\n\n  tax.totalNationalInsuranceTax = math.round(math.multiply(tax.weeklyNationalInsuranceTax, WEEKS_IN_YEAR), ROUND_AMOUNT)\n  return tax\n}\n\n","import { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst PLAN_TYPES = {\n  ONE: 1,\n  TWO: 2\n}\n\nconst PLAN_ONE_THRESHOLD = 19390\nconst PLAN_TWO_THRESHOLD = 26575\nconst PAYBACK_PERCENT = 9\n\nconst calculatePlanOne = ({ salary = 0 }) => {\n  if (salary <= PLAN_ONE_THRESHOLD) {\n    return {\n      monthlyAmountPaid: 0,\n      yearlyAmountPaid: 0\n    }\n  }\n\n  const difference = math.subtract(salary, PLAN_ONE_THRESHOLD)\n  const yearlyAmountPaid = math.chain(difference).divide(100).multiply(PAYBACK_PERCENT).round(2).done()\n\n  return {\n    monthlyAmountPaid: math.round(math.divide(yearlyAmountPaid, 12), 2),\n    yearlyAmountPaid\n  }\n}\n\nconst calculatePlanTwo = ({ salary = 0 }) => {\n  if (salary <= PLAN_TWO_THRESHOLD) {\n    return {\n      monthlyAmountPaid: 0,\n      yearlyAmountPaid: 0\n    }\n  }\n\n  const difference = math.subtract(salary, PLAN_TWO_THRESHOLD)\n  const yearlyAmountPaid = math.chain(difference).divide(100).multiply(PAYBACK_PERCENT).round(2).done()\n\n  return {\n    monthlyAmountPaid: math.round(math.divide(yearlyAmountPaid, 12), 2),\n    yearlyAmountPaid\n  }\n}\n\nexport const calculateStudentLoan = ({ studentLoanPlanType = 0, salary = 0 }) => {\n  if (studentLoanPlanType === PLAN_TYPES.ONE) {\n    return calculatePlanOne({ salary })\n  } else if (studentLoanPlanType === PLAN_TYPES.TWO) {\n    return calculatePlanTwo({ salary })\n  }\n  return {\n    monthlyAmountPaid: 0,\n    yearlyAmountPaid: 0\n  }\n}\n","import { all, create } from 'mathjs'\nimport { calculatePreTaxDeductions } from './calculatePreTaxDeductions'\nimport { calculateIncomeTax } from './calculateIncomeTax'\nimport { incomeTaxBands, nationalInsuranceTaxBands } from './taxTypes';\nimport { calculateNationalInsurance } from './calculateNationalInsurance'\nimport { calculateStudentLoan } from './calculateStudentLoan'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nexport default function calculateAllTax({\n  salary = 0,\n  taxFreePersonalAllowance = 12500,\n  employerPensionContributionPercent = 0,\n  personalPensionContributionPercent = 0,\n  studentLoanPlanType = 0 }) {\n\n\n  const personalPensionContribution = math.multiply(personalPensionContributionPercent, salary)\n  const employerPensionContribution = math.multiply(employerPensionContributionPercent, salary)\n  const { monthlyAmountPaid, yearlyAmountPaid } = calculateStudentLoan({ studentLoanPlanType , salary})\n  const { taxBreaksTotal, taxableIncome } = calculatePreTaxDeductions({ taxFreePersonalAllowance, salary, personalPensionContribution }) //TODO : Tax breaks\n\n  const incomeTax = calculateIncomeTax(incomeTaxBands(taxFreePersonalAllowance), taxableIncome)\n  const nationalInsuranceTax = calculateNationalInsurance(nationalInsuranceTaxBands, taxableIncome)\n\n  return {\n    salary,\n    studentLoan: {\n      studentLoanPlanType,\n      monthlyAmountPaid,\n      yearlyAmountPaid\n    },\n    employerPensionContributionPercent,\n    personalPensionContributionPercent,\n    personalPensionContribution,\n    employerPensionContribution,\n    taxBreaksTotal,\n    taxableIncome,\n    incomeTax,\n    nationalInsuranceTax,\n    totalTakeHome: math\n      .chain(salary)\n      .subtract(personalPensionContribution)\n      .subtract(incomeTax.totalIncomeTax)\n      .subtract(nationalInsuranceTax.totalNationalInsuranceTax)\n      .subtract(yearlyAmountPaid)\n      .round(2)\n      .done()\n  }\n}\n","import React, { useState } from 'react';\nimport calculateAllTax from '../utils/calculateAllTax'\nimport { all, create } from 'mathjs'\n\nconst math = create(all, {\n\tnumber: 'BigNumber',\n\tprecision: 32\n});\n\nconst SalaryContext = React.createContext({}); \n\nexport const SalaryContextProvider = ({ children }) => {\n\tconst state = JSON.parse(localStorage.getItem('salary')) ? JSON.parse(localStorage.getItem('salary')) : {}\n\tconst [userTax, setUserTax] = useState(state)\n\n\tconst setUserFinances = ({\n\t\tsalary,\n\t\ttaxFreePersonalAllowance,\n\t\tpersonalPensionContribution = 0,\n\t\temployerPensionContribution = 0,\n\t\tstudentLoanPlanType = 0\n\t}, addMultipleInvestments) => {\n\t\tconst tax = calculateAllTax({\n\t\t\tsalary,\n\t\t\ttaxFreePersonalAllowance,\n\t\t\temployerPensionContributionPercent: employerPensionContribution / 100,\n\t\t\tpersonalPensionContributionPercent: personalPensionContribution / 100,\n\t\t\tstudentLoanPlanType\n\t\t})\n\t\tsetUserTax(tax)\n\t\tlocalStorage.setItem('salary', JSON.stringify(tax))\n\n\t\taddMultipleInvestments([{\n\t\t\t\tname: 'Workplace Pension (employer contribution)',\n\t\t\t\tmonthlyContribution: math.round(math.divide(tax.employerPensionContribution, 12), 2)\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Workplace Pension (personal contribution)',\n\t\t\t\tmonthlyContribution: math.round(math.divide(tax.personalPensionContribution, 12), 2)\n\t\t\t}\n\t\t])\n\t}\n\n\treturn (\n\t\t<SalaryContext.Provider value={{ setUserFinances, userTax }}>\n\t\t\t{children}\n\t\t</SalaryContext.Provider>\n\t)\n}\n\nexport const useSalaryContext = () => {\n\tconst context = React.useContext(SalaryContext);\n\tif (context === undefined) {\n\t\tthrow new Error('useSalaryContext must be used within SalaryContextProvider');\n\t}\n\treturn context;\n}\n\n","import React, { useState } from 'react';\nimport { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst BudgetContext = React.createContext({}); \n\nexport const BudgetContextProvider = ({ children }) => {\n  const state = JSON.parse(localStorage.getItem('expenses')) ? JSON.parse(localStorage.getItem('expenses')) : []\n  const [expenses, setExpenses] = useState(state);\n\n  const addExpense = ({ name, cost }) => {\n    if (name !== \"\" || !cost) {\n      const newExpenses = expenses.concat({\n        name,\n        cost: parseFloat(cost),\n        checked: true\n      })\n\n      setExpenses(newExpenses);\n      localStorage.setItem('expenses', JSON.stringify(newExpenses))\n    }\n  }\n\n  const checkExpense = idx => {\n    setExpenses(\n      expenses.map((expense, index) => {\n        if (idx === index) {\n          expense.checked = !expense.checked;\n        }\n\n        return expense;\n      })\n    );\n  }\n\n  const removeExpense = idx => {\n    const newExpenses = expenses.filter((_, index) => idx !== index)\n    setExpenses(newExpenses);\n    localStorage.setItem('expenses', JSON.stringify(newExpenses))\n  }\n\n  const expenseTotal = expenses.length > 0 ?\n    expenses.filter(item => item.checked).reduce((acc, i) => math.add(acc, i.cost), 0) :\n    0\n\n  return (\n    <BudgetContext.Provider value={{\n        expenses,\n        addExpense,\n        checkExpense,\n        removeExpense,\n        expenseTotal\n      }}>\n      {children}\n    </BudgetContext.Provider>\n  )\n}\n\nexport const useBudgetContext = () => {\n  const context = React.useContext(BudgetContext);\n  if (context === undefined) {\n    throw new Error('useBudgetContext must be used within BudgetContextProvider');\n  }\n  return context;\n}\n","import { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst MONTHS_OF_THE_YEAR = 12\nconst ROUND_AMOUNT = 2\n\nexport const calculateYearlyCompoundWithCharge = ({\n  initialAmount = 0, \n  expectedReturn = 0, \n  monthlyContribution = 0,\n  annualCharge = 0,\n  noOfYearsToMature = 0\n}) => {\n  const compoundInterest = {}\n  let totalAmount = initialAmount;\n\n  // forgive for starting at 1 plz god. Makes years easier\n  for (let i = 1; i <= noOfYearsToMature; i++ ) {  \n    compoundInterest[`Year ${i}`] = calculateMonthlyCompoundInterest({\n      totalAmount, \n      expectedReturn, \n      monthlyContribution\n    })\n\n    const totalAmountAfterMaturing = compoundInterest[`Year ${i}`][`Month ${MONTHS_OF_THE_YEAR}`].balance\n    \n    totalAmount = annualCharge\n    ? math.round(math.subtract(totalAmountAfterMaturing, math.multiply(totalAmountAfterMaturing, annualCharge)), ROUND_AMOUNT)\n    : totalAmountAfterMaturing\n  }\n\n  return compoundInterest\n}\n\nexport const calculateMonthlyCompoundInterest = ({\n    totalAmount, \n    expectedReturn, \n    monthlyContribution,\n  }) => {\n  const compoundInterest = {}\n\n  let balance = totalAmount\n  let  cumulativeInterest = 0;\n  \n  // forgive for starting at 1 plz god. Makes years easier\n  for (let i = 1; i <= MONTHS_OF_THE_YEAR; i++ ) {  \n    const earnedInterest = math.chain(balance).multiply(expectedReturn).divide(MONTHS_OF_THE_YEAR).round(ROUND_AMOUNT).done()\n    cumulativeInterest = math.round(math.add(cumulativeInterest, earnedInterest), ROUND_AMOUNT)\n\n    balance =  math.chain(balance).add(monthlyContribution).add(earnedInterest).round(ROUND_AMOUNT).done()\n    \n    compoundInterest[`Month ${i}`] = {\n      earnedInterest,\n      balance,\n      cumulativeInterest\n    }\n  }\n\n  return compoundInterest\n}\n","import React, { useState } from 'react';\nimport { calculateYearlyCompoundWithCharge } from 'src/utils/calculateCompoundInterest';\nimport { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst InvestmentContext = React.createContext({});\n\nexport const InvestmentContextProvider = ({ children }) => {\n  const investmentState = JSON.parse(localStorage.getItem('investments')) ? JSON.parse(localStorage.getItem('investments')) : []\n  const yearState = localStorage.getItem('yearsToMature') || 1\n  const drawdownState = localStorage.getItem('drawDownPercent') || 0.04\n  \n  const [investments, setInvestments] = useState(investmentState);\n  const [yearsToMature, setYearsToMature] = useState(yearState)\n  const [drawDownPercent, setDrawDownPercent] = useState(drawdownState)\n\n\n  const saveDrawdown = percent => {\n    console.log(percent)\n      setDrawDownPercent(percent /  100)\n      localStorage.setItem('drawDownPercent', percent /  100)\n  }\n\n  const saveYearsToMature = years => {\n    setYearsToMature(years)\n\n    const newInvestments = [...investments].map(investment => {\n      const investmentToRecalculate = {\n        ...investment,\n        noOfYearsToMature: years,\n      }\n\n      return {\n        ...investmentToRecalculate,\n        compoundData: calculateYearlyCompoundWithCharge(investmentToRecalculate)\n      }\n    })\n\n    setInvestments(newInvestments)\n\n    localStorage.setItem('investments', JSON.stringify(newInvestments))\n    localStorage.setItem('yearsToMature', years)\n  }\n  const saveInvestments = (investmentToSave) => {\n    setInvestments(investmentToSave)\n    localStorage.setItem('investments', JSON.stringify(investmentToSave))\n  }\n\n  const addMultipleInvestments = (investmentsToAdd) => {\n\n    const copy = [...investments]\n\n    for (const newInvestment of investmentsToAdd) {\n\n      let isInvestmentAlreadyInList = copy.findIndex(oldInvestments => oldInvestments.name === newInvestment.name)\n\n      if (isInvestmentAlreadyInList > -1) {\n        const { monthlyContribution } = newInvestment\n        const investment = {\n          ...copy[isInvestmentAlreadyInList],\n          monthlyContribution: parseFloat(monthlyContribution),\n        }\n\n        copy[isInvestmentAlreadyInList] = {\n          ...investment,\n          compoundData: calculateYearlyCompoundWithCharge(investment)\n        }\n\n      } else {\n        const investment = {\n          name: newInvestment.name,\n          initialAmount: 0,\n          expectedReturn: 0,\n          annualCharge: 0,\n          monthlyContribution: parseFloat(newInvestment.monthlyContribution),\n          editMode: false,\n          noOfYearsToMature: yearsToMature,\n        }\n\n        copy.push({\n          ...investment,\n          compoundData: calculateYearlyCompoundWithCharge(investment)\n        })\n      }\n\n    }\n\n    saveInvestments(copy)\n  }\n\n  const addInvestment = ({ name = '', initialAmount = 0, expectedReturn = 0, monthlyContribution = 0, annualCharge = 0 }) => {\n    const investment = {\n      name,\n      initialAmount: parseFloat(initialAmount),\n      expectedReturn: math.round(math.divide(expectedReturn, 100), 2),\n      monthlyContribution: parseFloat(monthlyContribution),\n      noOfYearsToMature: yearsToMature,\n      annualCharge: math.divide(annualCharge, 100),\n      editMode: false,\n    }\n\n    saveInvestments([\n      ...investments.filter(investment => investment.name !== name),\n      {\n        ...investment,\n        compoundData: calculateYearlyCompoundWithCharge(investment)\n      }\n    ])\n  }\n\n  const editInvestment = idx => {\n    saveInvestments(\n      investments.map((investment, index) => {\n        if (idx === index) {\n          investment.editMode = true;\n        }\n\n        return investment;\n      })\n    );\n  }\n\n  const onItemSave = ({ name = '', initialAmount = 0, expectedReturn = 0, monthlyContribution = 0, annualCharge = 0 }, idx) => {\n    const investment = {\n      name,\n      initialAmount: parseFloat(initialAmount),\n      expectedReturn: math.round(math.divide(expectedReturn, 100), 2),\n      monthlyContribution: parseFloat(monthlyContribution),\n      noOfYearsToMature: yearsToMature,\n      annualCharge: math.divide(annualCharge, 100),\n      editMode: false,\n    }\n\n    const investmentCopy = [...investments]\n\n    investmentCopy[idx] = {\n      ...investment,\n      compoundData: calculateYearlyCompoundWithCharge(investment)\n    }\n\n    saveInvestments(investmentCopy)\n  }\n\n  const removeInvestment = idx => {\n    saveInvestments(investments.filter((_, index) => idx !== index));\n  }\n\n  const getExpectedInterestIncomeInXYears = () => investments.length > 0 ?\n    math.round(investments.reduce((accum, investment) => accum + investment.compoundData[`Year ${yearsToMature}`]['Month 12'].earnedInterest, 0), 2) :\n    0\n\n  const getTotalNetWorthInXYears = () => investments.length > 0 ?\n    math.round(investments.reduce((accum, investment) => accum + investment.compoundData[`Year ${yearsToMature}`]['Month 12'].balance, 0), 2) :\n    0\n\n  const getAmountInvestedPerMonth = () => investments.length > 0 ?\n    investments.reduce((accum, investment) => accum + investment.monthlyContribution, 0) :\n    0\n\n  return (\n    <InvestmentContext.Provider value={{ drawDownPercent, saveDrawdown, investments, saveYearsToMature, yearsToMature, onItemSave, addInvestment, getAmountInvestedPerMonth, getTotalNetWorthInXYears, addMultipleInvestments, removeInvestment, editInvestment, getExpectedInterestIncomeInXYears }}>\n      {children}\n    </InvestmentContext.Provider>\n  )\n}\n\nexport const useInvestmentContext = () => {\n  const context = React.useContext(InvestmentContext);\n  if (context === undefined) {\n    throw new Error('useInvestmentContext must be used within InvestmentProvider');\n  }\n  return context;\n}\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  typography: {\n    \"fontFamily\": `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n    \"fontSize\": 14,\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n  },\n  palette: {\n    background: {\n      dark: '#F4F6F8',\n      default: colors.common.white,\n      paper: colors.common.white\n    },\n    primary: {\n      main: colors.blue[500]\n    },\n    secondary: {\n      main: colors.blue[700]\n    },\n    text: {\n      primary: colors.blueGrey[900],\n      secondary: colors.blueGrey[600]\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n  fontSize: 14,\n  fontWeightLight: 300,\n  fontWeightRegular: 400,\n  fontWeightMedium: 500,\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useState } from 'react';\nimport {\n    makeStyles,\n    MenuItem,\n    FormControl,\n    Select,\n    Button,\n    Typography,\n    Box\n} from '@material-ui/core';\nimport { useInvestmentContext } from '../../../context/InvestmentContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst years = new Array(100).fill(0).map((_, i) => i + 1)\n\nexport const SelectYears = () => {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(false);\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const { saveYearsToMature, yearsToMature } = useInvestmentContext();\n\n    return (\n        <Box\n            display=\"flex\"\n            alignItems=\"center\">\n            <FormControl style={{ width: \"100%\"}} className={classes.formControl}>\n                <Typography\n                    align=\"center\"\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"h6\"\n                >\n                    Predict Net Worth In\n                </Typography>\n                <Select\n                    style={{  textAlign: 'center'}}\n                    labelId=\"open-select-label\"\n                    id=\"open-select\"\n                    open={open}\n                    onClose={handleClose}\n                    onOpen={handleOpen}\n                    value={yearsToMature}\n                    onChange={e => saveYearsToMature(e.target.value)}\n                >\n                    {years.map((year) =>\n                        <MenuItem key={`${year}-Years`} style={{ justifyContent: 'center' }} value={year}>{`${year} Years`}</MenuItem>\n                    )}\n                </Select>\n            </FormControl>\n        </Box>\n    )\n}","import React, { useState } from 'react';\nimport {\n    makeStyles,\n    MenuItem,\n    FormControl,\n    Select,\n    Typography,\n    Box\n} from '@material-ui/core';\nimport { useInvestmentContext } from '../../../context/InvestmentContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst percentages = new Array(10).fill(0).map((_, i) => i + 1)\n\nexport const SelectDrawDown = () => {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(false);\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const { saveDrawdown, drawDownPercent } = useInvestmentContext();\n\n    console.log(drawDownPercent)\n    return (\n        <Box\n            display=\"flex\"\n            alignItems=\"center\">\n            <FormControl style={{ width: \"100%\"}} className={classes.formControl}>\n                <Typography\n                    align=\"center\"\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"h6\"\n                >\n                    Draw Down Percentage\n                </Typography>\n                <Select\n                    style={{  textAlign: 'center'}}\n                    labelId=\"open-select-label\"\n                    id=\"open-select\"\n                    open={open}\n                    onClose={handleClose}\n                    onOpen={handleOpen}\n                    value={drawDownPercent * 100}\n                    onChange={e => saveDrawdown(e.target.value)}\n                >\n                    {percentages.map((percent) =>\n                        <MenuItem key={percent} style={{ justifyContent: 'center' }} value={percent}>{`${percent}%`}</MenuItem>\n                    )}\n                </Select>\n            </FormControl>\n        </Box>\n    )\n}","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useInvestmentContext } from '../../../context/InvestmentContext'\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst ExpectedMonthlyIncome = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  const { getExpectedInterestIncomeInXYears, yearsToMature } = useInvestmentContext();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <Typography\n              align=\"center\"\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              Expected Monthly Interest in {yearsToMature} Years\n        </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              £{getExpectedInterestIncomeInXYears().toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nExpectedMonthlyIncome.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ExpectedMonthlyIncome;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport { useInvestmentContext } from '../../../context/InvestmentContext'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst NetWorthTotal = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  const { getTotalNetWorthInXYears, yearsToMature } = useInvestmentContext();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n         container\n         direction=\"column\"\n         alignItems=\"center\"\n         justify=\"center\"\n        >\n          <Grid item>\n            <Typography\n              align=\"center\"\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              Total Net Worth in {yearsToMature} Years\n            </Typography>\n            </Grid>\n            <Grid item> \n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              £{getTotalNetWorthInXYears().toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nNetWorthTotal.propTypes = {\n  className: PropTypes.string\n};\n\nexport default NetWorthTotal;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport { useInvestmentContext } from '../../../context/InvestmentContext'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst AmountInvestedPerMonth = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  const { getAmountInvestedPerMonth } = useInvestmentContext();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n        >\n          <Grid item>\n            <Typography\n              align=\"center\"\n              color=\"textSecondary\"\n              variant=\"h6\"\n            >\n              Amount Invested Per Month\n            </Typography>\n            </Grid>\n            <Grid item> \n            \n            <Typography\n              gutterBottom\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              £{getAmountInvestedPerMonth().toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card >\n  );\n};\n\nAmountInvestedPerMonth.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AmountInvestedPerMonth;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Drawer,\n  Hidden,\n  List,\n  makeStyles,\n  Grid\n} from '@material-ui/core';\nimport {\n  BarChart as BarChartIcon,\n  TrendingUp,\n  DollarSign,\n  Download\n} from 'react-feather';\nimport NavItem from './NavItem';\nimport { SelectYears } from './SelectYears'\nimport { SelectDrawDown } from './SelectDrawDown'\n\nimport ExpectedMonthlyIncome from '../../../views/dashboard/DashboardView/ExpectedMonthlyIncome';\nimport NetWorthTotal from '../../../views/dashboard/DashboardView/NetWorthTotal';\nimport AmountInvested from '../../../views/dashboard/DashboardView/AmountInvestedPerMonth';\n\n\nconst items = [\n  {\n    href: '/app/salary-calculator',\n    icon: DollarSign,\n    title: 'Salary Calculator'\n  },\n  {\n    href: '/app/budget',\n    icon: Download,\n    title: 'Budget'\n  },\n\n  {\n    href: '/app/investments',\n    icon: TrendingUp,\n    title: 'Investments'\n  },\n  {\n    href: '/app/net-worth',\n    icon: BarChartIcon,\n    title: 'Net Worth'\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  mobileDrawer: {\n    width: 256\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: 'calc(100% - 64px)'\n  }\n}));\n\n\nconst NavBar = ({ onMobileClose, openMobile }) => {\n  const location = useLocation();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n\n    <Box p={2}>\n      <List>\n        {items.map((item) => (\n          <NavItem\n            href={item.href}\n            key={item.title}\n            title={item.title}\n            icon={item.icon}\n          />\n        ))}\n      </List>\n     \n\n      <Box mt={10}>\n\n      <Grid\n        spacing={3}\n        container\n        direction=\"column\"\n        justify=\"flex-end\"\n        alignItems=\"stretch\"\n      >\n        <Grid item>\n          <SelectYears/>\n        </Grid>\n        <Grid item>\n          <SelectDrawDown/>\n        </Grid>\n          <Grid\n            item >\n            <ExpectedMonthlyIncome />\n\n          </Grid>\n          <Grid\n            item >\n            <NetWorthTotal />\n\n          </Grid>\n          <Grid\n            item >\n            <AmountInvested />\n\n          </Grid>\n      </Grid>\n    </Box>\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => { },\n  openMobile: false\n};\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Typography,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Logo from 'src/components/Logo';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  }\n}));\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        <Hidden smDown>\n          <Box ml={3}>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h1\">\n              Ultimate Fire Calculator\n          </Typography>\n          </Box>\n        </Hidden>\n\n        <Hidden mdUp>\n          <Box>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h1\">\n              UFC\n          </Typography>\n\n          </Box>\n        </Hidden>\n        <Box flexGrow={1} />\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n","import React, { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport NavBar from './NavBar';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst DashboardLayout = () => {\n  const classes = useStyles();\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Toolbar,\n  makeStyles,\n  Typography,\n  Box\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {},\n  toolbar: {\n    height: 64\n  }\n}));\n\nconst TopBar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar className={classes.toolbar}>\n        <Box mb={3}>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h1\">\n            Ultimate Fire Calculator\n          </Typography>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopBar;\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst MainLayout = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TopBar />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainLayout;\n","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  Divider,\n  Button,\n  TextField,\n  InputAdornment\n} from '@material-ui/core';\nimport { Formik, Form, useField } from \"formik\";\nimport { string, number, object } from \"yup\";\n\n\n\nconst Input = ({ label, inputProps, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <TextField\n        label={label}\n        className=\"text-input\"\n        variant=\"outlined\"\n        required\n        fullWidth\n        InputProps={inputProps ? inputProps : null}\n        {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\n\nexport const AddInvestment = ({ className, addInvestment, ...rest }) => {\n  return (\n    <Box>\n      <Card\n        className={clsx(className)}\n        {...rest}\n      >\n        <CardContent>\n\n          <Typography\n            align=\"left\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h4\"\n          >\n            Add your investments\n        </Typography>\n          <Divider />\n          <Box mt={3}>\n\n            <Formik\n              initialValues={{\n                name: \"\",\n                initialAmount: \"\",\n                expectedReturn: \"\",\n                monthlyContribution: \"\"\n              }}\n              validationSchema={object({\n                name: string(),\n                initialAmount: number(),\n                expectedReturn: number(),\n                monthlyContribution: number()\n\n              })}\n              onSubmit={(investment, { setSubmitting, resetForm }) => {\n                addInvestment(investment)\n                resetForm({})\n                setSubmitting(false);\n              }}\n            >\n              <Form>\n                <Grid\n                  container\n                  justify=\"space-evenly\"\n                  spacing={3}\n                >\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Input\n                      label=\"Investment Name\"\n                      name=\"name\"\n                      type=\"text\"\n                    />\n                  </Grid>\n\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Input\n                      label=\"Current Value\"\n                      name=\"initialAmount\"\n                      type=\"text\"\n                      inputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <Typography >\n                              £\n                        </Typography>\n                          </InputAdornment>)\n                      }}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Input\n                      label=\"Annual Return\"\n                      name=\"expectedReturn\"\n                      type=\"text\"\n                      inputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <Typography >\n                              %\n                        </Typography>\n                          </InputAdornment>)\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Input\n                      label=\"Monthly Contribution\"\n                      name=\"monthlyContribution\"\n                      type=\"text\"\n                      inputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <Typography >\n                              £\n                        </Typography>\n                          </InputAdornment>)\n                      }}\n                    />\n                  </Grid>\n                  <Button\n                    color=\"primary\"\n                    fullWidth\n                    variant=\"text\"\n                    type=\"submit\">Add</Button>\n                </Grid>\n              </Form>\n            </Formik>\n          </Box>\n        </CardContent>\n      </Card>\n    </Box >\n  );\n};\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Typography,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    IconButton,\n    TextField,\n    Button,\n    InputAdornment\n} from '@material-ui/core';\nimport { DeleteOutlined, Edit, EditOutlined, SaveOutlined, Save } from '@material-ui/icons';\nimport { Formik, useField } from \"formik\";\nimport { string, number, object } from \"yup\";\nimport { all, create } from 'mathjs'\n\nconst math = create(all, {\n\tnumber: 'BigNumber',\n\tprecision: 32\n});\n\n\nconst Input = ({ label, inputProps, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input> and alse replace ErrorMessage entirely.\n    const [field, meta] = useField(props);\n    return (\n        <>\n            <TextField\n                label={label}\n                className=\"text-input\"\n                variant=\"standard\"\n                required\n                fullWidth\n                InputProps={inputProps ? inputProps : null}\n                {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <div className=\"error\">{meta.error}</div>\n            ) : null}\n        </>\n    );\n};\n\n\nexport const InvestmentList = memo(({ className, items = [], onItemEdit, onItemRemove, onItemSave, onItemCheck, ...rest }) => {\n\n        return (\n            <Box\n                mt={3}\n            >\n                <Card\n                    className={clsx(className)}\n                    {...rest}\n                >\n                    <CardContent>\n\n                        <Typography\n                            align=\"left\"\n                            color=\"textPrimary\"\n                            gutterBottom\n                            variant=\"h4\"\n                        >\n                            Investments\n                    </Typography>\n                        <Divider />\n\n                        <Box mt={3}>\n                            <TableContainer>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align=\"center\"></TableCell>\n                                            <TableCell align=\"center\">Name</TableCell>\n                                            <TableCell align=\"center\">Initial Amount</TableCell>\n                                            <TableCell align=\"center\">Expected Annual Return</TableCell>\n                                            <TableCell align=\"center\">Monthly Contribution</TableCell>\n                                            <TableCell align=\"center\">Annual Charge</TableCell>\n                                            <TableCell />\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {items.map((investment, idx) => \n                                            investment.editMode ? (\n                                                <Formik\n                                                    key={`form-${idx}`}\n                                                    initialValues={{\n                                                        name: investment.name,\n                                                        initialAmount: investment.initialAmount,\n                                                        expectedReturn: math.round(math.multiply(investment.expectedReturn, 100), 2),\n                                                        monthlyContribution: investment.monthlyContribution,\n                                                        annualCharge: math.round(math.multiply(investment.annualCharge, 100), 2)\n                                                    }}\n                                                    validationSchema={object({\n                                                        name: string(),\n                                                        initialAmount: number(),\n                                                        expectedReturn: number(),\n                                                        monthlyContribution: number(),\n                                                        annualCharge: number()\n                                                    })}\n                                                    onSubmit={(investment, { setStatus }) => {\n                                                        setStatus()\n                                                        onItemSave(investment, idx)\n                                                    }}\n                                                >{({ submitForm }) => (\n                                                    <TableRow key={idx}>\n                                                        <TableCell align=\"center\">\n                                                            <Save onClick={submitForm} >\n                                                                <SaveOutlined />\n                                                            </Save>\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Investment Name\"\n                                                                name=\"name\"\n                                                                type=\"text\"\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Current Value\"\n                                                                name=\"initialAmount\"\n                                                                type=\"text\"\n                                                                inputProps={{\n                                                                    startAdornment: (\n                                                                        <InputAdornment position=\"start\">\n                                                                            <Typography >\n                                                                                £\n                                                                    </Typography>\n                                                                        </InputAdornment>)\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Annual Return\"\n                                                                name=\"expectedReturn\"\n                                                                type=\"text\"\n                                                                inputProps={{\n                                                                    endAdornment: (\n                                                                        <InputAdornment position=\"end\">\n                                                                            <Typography >\n                                                                                %\n                                                                    </Typography>\n                                                                        </InputAdornment>)\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Monthly Contribution\"\n                                                                name=\"monthlyContribution\"\n                                                                type=\"text\"\n                                                                inputProps={{\n                                                                    startAdornment: (\n                                                                        <InputAdornment position=\"start\">\n                                                                            <Typography >\n                                                                                £\n                                                                    </Typography>\n                                                                        </InputAdornment>)\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Annual Charge\"\n                                                                name=\"annualCharge\"\n                                                                type=\"text\"\n                                                                inputProps={{\n                                                                    endAdornment: (\n                                                                        <InputAdornment position=\"end\">\n                                                                            <Typography >\n                                                                                %\n                                                                    </Typography>\n                                                                        </InputAdornment>)\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\">\n                                                            <IconButton aria-label=\"Delete Item\" onClick={() => onItemRemove(idx)}>\n                                                                <DeleteOutlined />\n                                                            </IconButton>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )}\n                                                </Formik>\n\n                                            ) : (\n                                                    <TableRow key={idx}>\n                                                        <TableCell align=\"center\">\n                                                            <Edit onClick={() => onItemEdit(idx)}>\n                                                                <EditOutlined />\n                                                            </Edit>\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            {investment.name}\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            £{investment.initialAmount}\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            {math.round(math.multiply(investment.expectedReturn, 100), 2)}%\n                                            </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            £{investment.monthlyContribution}\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            {math.round(math.multiply(investment.annualCharge, 100), 2)}%\n                                            </TableCell>\n                                                        <TableCell align=\"center\">\n                                                            <IconButton aria-label=\"Delete Item\" onClick={() => onItemRemove(idx)}>\n                                                                <DeleteOutlined />\n                                                            </IconButton>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                        )}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Box >\n        )\n    })\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n} from '@material-ui/core';\nimport { useInvestmentContext } from '../../../context/InvestmentContext';\nimport { AddInvestment } from './AddInvestment'\nimport { InvestmentList } from './InvestmentList'\nconst Investments = ({ className, ...rest }) => {\n\n  const { onItemSave, editInvestment, removeInvestment, investments, addInvestment } = useInvestmentContext();\n\n  return (\n    <div\n      className={clsx(className)}\n      {...rest}\n    >\n      <Card>\n        <CardContent>\n\n          <Typography\n            align=\"left\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            Investments\n                  </Typography>\n          <Divider />\n          <Box mt={3}>\n            <AddInvestment addInvestment={addInvestment} />\n              {(\n                <InvestmentList onItemSave={onItemSave} onItemEdit={editInvestment} onItemRemove={removeInvestment} items={investments} />\n              )}\n          </Box>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvestments.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Investments;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles,\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Investments from './Investments';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Index = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Investments\"\n    >\n      <Container maxWidth={false}>\n        <Investments />\n      </Container>\n    </Page>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Grid,\n    Typography,\n    colors,\n    makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100%'\n    },\n    avatar: {\n        backgroundColor: colors.red[600],\n        height: 56,\n        width: 56\n    },\n    differenceIcon: {\n        color: colors.red[900]\n    },\n    differenceValue: {\n        color: colors.red[900],\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst MonthlyTakeHomeCard = ({ className, expensesCost, totalTakeHome, difference, ...rest }) => {\n    const classes = useStyles();\n\n    return (\n\n        <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n        >\n            <CardContent>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"space-between\"\n                    spacing={3}\n                >\n                    <Grid item>\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h5\"\n                        >\n                            Monthly Net Income\n                                </Typography>\n                        <Typography\n                            color=\"textPrimary\"\n                            variant=\"h3\"\n                        >\n                            £{totalTakeHome}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h5\"\n                        >\n                            Total Expenses\n                                </Typography>\n                        <Typography\n                            color=\"textPrimary\"\n                            variant=\"h3\"\n                        >\n                            £{expensesCost}\n                        </Typography>\n                    </Grid>\n\n                    <Grid item>\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h5\"\n                        >\n                            Amount Left Over\n                                </Typography>\n                        <Typography\n                            color=\"textPrimary\"\n                            variant=\"h3\"\n                        >\n                            £{difference}\n                        </Typography>\n                    </Grid>\n\n                </Grid>\n                <Box\n                    mt={2}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                >\n                </Box>\n            </CardContent>\n        </Card>\n    );\n};\n\nMonthlyTakeHomeCard.propTypes = {\n    className: PropTypes.string\n};\n\nexport default MonthlyTakeHomeCard;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n  Box,\n  InputAdornment,\n  TextField,\n  Grid,\n  Button\n} from '@material-ui/core';\nimport { Formik, Form, useField } from \"formik\";\nimport { string, number, object } from \"yup\";\n\nconst Input = ({ label, type, inputProps, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <TextField\n        type={type}\n        label={label}\n        className=\"text-input\"\n        variant=\"outlined\"\n        required\n        fullWidth\n        InputProps={inputProps ? inputProps : null}\n        {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst Expenses = ({ className, addExpense, ...rest }) => {\n  return (\n      <Card\n        className={clsx(className)}\n        {...rest}\n      >\n        <CardContent>\n          <Typography\n            align=\"left\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h4\"\n          >\n            List Your Monthly Expenses\n        </Typography>\n          <Divider />\n          <Box \n            mt={3}>\n          <Formik\n              initialValues={{\n                name: \"\",\n                cost: \"\"\n              }}\n              validationSchema={object({\n                name: string(),\n                cost: number(),\n              })}\n              onSubmit={(expense, { setSubmitting, resetForm }) => {\n                addExpense(expense)\n                resetForm({})\n                setSubmitting(false);\n              }}\n            >\n              <Form>\n                <Grid\n                  container\n                  spacing={3}\n                >\n                  <Grid\n                      item\n                      lg={6}\n                      md={6}\n                      xs={12}\n                  >\n                    <Input\n                      label=\"Expense Name\"\n                      name=\"name\"\n                      type=\"text\"\n                    />\n                  </Grid>\n\n                  <Grid\n                      item\n                      lg={6}\n                      md={6}\n                      xs={12}\n                  >\n                    <Input\n                      label=\"Expense cost\"\n                      name=\"cost\"\n                      type=\"tel\"\n                      inputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <Typography >\n                              £\n                      </Typography>\n                          </InputAdornment>)\n                      }}\n                    />\n                  </Grid>                \n                    <Button\n                      color=\"primary\"\n                      fullWidth\n                      variant=\"text\"\n                      type=\"submit\">ADD</Button>\n                </Grid>\n              </Form>\n            </Formik>\n          </Box>\n        </CardContent>\n      </Card>\n  );\n};\n\nExpenses.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Expenses;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Typography,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    IconButton,\n    Checkbox\n} from '@material-ui/core';\nimport DeleteOutlined from '@material-ui/icons/DeleteOutlined';\n\n\nconst ExpenseList = memo(({ className, items = [], onItemRemove, onItemCheck, ...rest }) => (\n    <Box\n        mt={3}\n    >\n        <Card\n            className={clsx(className)}\n            {...rest}\n        >\n            <CardContent>\n\n                <Typography\n                    align=\"left\"\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"h4\"\n                >\n                    Expenses\n                    </Typography>\n                <Divider />\n\n                <Box mt={3}>\n                    <TableContainer>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"left\">Include?</TableCell>\n                                    <TableCell align=\"center\">Name</TableCell>\n                                    <TableCell align=\"center\">Cost</TableCell>\n                                    <TableCell align=\"center\">Remove</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {items.map((expense, idx) => (\n                                    <TableRow key={idx}>\n                                        <TableCell align=\"center\" padding=\"checkbox\">\n                                            <Checkbox\n                                                onClick={() => onItemCheck(idx)}\n                                                checked={expense.checked}\n                                            />\n                                        </TableCell>\n                                        <TableCell align=\"center\" >\n                                            {expense.name}\n                                        </TableCell>\n                                        <TableCell align=\"center\" >\n                                            £{expense.cost}\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            <IconButton aria-label=\"Delete Item\" onClick={() => onItemRemove(idx)}>\n                                                <DeleteOutlined />\n                                            </IconButton>\n                                        </TableCell>\n\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Box>\n            </CardContent>\n        </Card>\n    </Box>\n\n));\nexport default ExpenseList;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  Divider\n} from '@material-ui/core';\nimport MonthlyTakeHomeCard from './MonthlyTakeHomeCard'\nimport AddExpenses from './AddExpenses'\nimport ExpenseList from './ExpenseList'\nimport { useSalaryContext } from '../../../context/SalaryContext';\nimport { useBudgetContext } from '../../../context/BudgetContext';\nimport { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst ExpenseHeaderCard = ({ className, ...rest }) => {\n  const { userTax } = useSalaryContext();\n  const {\n    expenses,\n    addExpense,\n    checkExpense,\n    removeExpense,\n    expenseTotal\n  } = useBudgetContext();\n\n  const [takeHome, setTakeHome] = useState({\n    totalTakeHome: 0,\n    difference: 0,\n    expensesCost: 0,\n  });\n\n  const totalTakeHome = userTax.totalTakeHome || 0\n\n  useEffect(() => {\n    setTakeHome((prevState) => ({\n      ...prevState,\n      totalTakeHome: math.round(math.divide(totalTakeHome, 12), 2),\n      difference: math.round(math.subtract(math.divide(totalTakeHome, 12), expenseTotal), 2),\n      expensesCost: expenseTotal,\n    }))\n    // subscribe to changes in userTax and expense total to trigger effect\n  }, [userTax, expenseTotal]);\n\n  return (\n    <div\n      className={clsx(className)}\n      {...rest}\n    >\n      <Card>\n        <CardContent>\n\n          <Typography\n            align=\"left\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            Budget\n                  </Typography>\n          <Divider />\n          <Box mt={3}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"stretch\"\n              spacing={3}\n            >\n              <Grid\n                item\n                lg={6}\n                sm={6}\n                xl={6}\n                xs={6}\n              >\n                <AddExpenses\n                  addExpense={addExpense}\n                />\n                {expenses.length > 0 && (\n                  <ExpenseList\n                    items={expenses}\n                    onItemCheck={idx => checkExpense(idx)}\n                    onItemRemove={idx => removeExpense(idx)}\n                  />\n                )}\n              </Grid>\n\n              <Grid\n                item\n                lg={6}\n                sm={6}\n                xl={6}\n                xs={6}\n              >\n                <MonthlyTakeHomeCard {...takeHome} />\n              </Grid>\n            </Grid>\n          </Box>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nExpenseHeaderCard.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ExpenseHeaderCard;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Budget from './Budget'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Index = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Budget\"\n    >\n      <Container maxWidth={false}>\n        <Box>\n          <Budget />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport { useSalaryContext } from 'src/context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst TakeHomeIncome = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  const {\n    userTax: { totalTakeHome = 0 },\n  } = useSalaryContext();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"h6\"\n              >\n              Annual Take Home Pay\n            </Typography>\n            </Grid>\n\n            <Grid item> \n            <Typography\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"h3\"\n            >\n              £{totalTakeHome.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n          </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n\n  );\n};\n\nTakeHomeIncome.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TakeHomeIncome;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nimport {\n  AreaChart, Area, XAxis, YAxis, ResponsiveContainer, Tooltip, CartesianGrid, Legend\n} from 'recharts';\n\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\n\nconst colours = [\n  '#64b5f6',\n  '#42a5f5',\n  '#2196f3',\n  '#1e88e5',\n  '#1976d2',\n  '#1565c0']\n\nconst Text = ({ item }) => {\n  const useStyles = makeStyles(theme => ({\n    typography: {\n      color: item.stroke\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Typography\n      className={classes.typography}\n      variant=\"h6\"\n    >\n      {`${item.dataKey}: £${item.value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`}\n    </Typography>\n  )\n}\n\nconst ToolTip = props => (props.active) ? (\n  <Card className={clsx(props.classes.root)}>\n    <Box p={1} m={1} >\n\n      <Typography\n        align=\"center\"\n        color=\"textSecondary\"\n        variant=\"h5\"\n        gutterBottom\n      >\n        {props.label}\n\n      </Typography>\n      {props.payload.map((item, i) =>\n        <Box key={i}>\n          <Text item={item} />\n        </Box>\n      )}\n    </Box>\n  </Card>\n) : null\n\nconst NetWorth = ({ investmentData, className, ...rest }) => {\n  const useStyles = makeStyles(() => ({\n    root: {}\n  }));\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return investmentData.length > 0 && (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Net Worth Over Time\"\n      />\n      <Divider />\n      <CardContent>\n        <Box\n          height={400}\n          position=\"relative\"\n        >\n          <ResponsiveContainer width={\"100%\"} height=\"100%\">\n            <AreaChart\n              data={investmentData}\n              margin={{\n                top: 0, right: 35, left: 35, bottom: 0,\n              }}\n            >\n              <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\n\n\n              <XAxis dataKey=\"year\" style={{ fontFamily: theme.typography.fontFamily }} />\n              <YAxis tickFormatter={amount => `£${amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`} style={{ fontFamily: theme.typography.fontFamily }} />\n              <Tooltip content={<ToolTip classes={classes} />} />\n              {\n                Object.keys(investmentData[0])\n                  .filter(key => key !== 'year')\n                  .map((investmentType, i) =>\n                    <Area\n                      key={`${investmentType}-${i}`}\n                      type=\"monotone\"\n                      dataKey={investmentType}\n                      stackId='1'\n                      stroke={colours[i]}\n                      fill={colours[i]}\n                    />\n                  )}\n            </AreaChart>\n          </ResponsiveContainer>\n\n        </Box>\n      </CardContent>\n      <Divider />\n      {/* <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button>\n      </Box> */}\n    </Card>\n  );\n};\n\nNetWorth.propTypes = {\n  className: PropTypes.string\n};\n\nexport default NetWorth;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nimport {\n  LineChart, Line, XAxis, YAxis, ResponsiveContainer, Tooltip, CartesianGrid, Legend\n} from 'recharts';\n\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  Typography,\n  Grid\n} from '@material-ui/core';\n\nconst colours = [\n  '#64b5f6',\n  '#42a5f5',\n  '#2196f3',\n  '#1e88e5',\n  '#1976d2',\n  '#1565c0']\n\nconst Text = ({ item }) => {\n  const useStyles = makeStyles(theme => ({\n    typography: {\n      color: item.color\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Typography\n    className={classes.typography}\n      variant=\"h5\"\n      gutterBottom\n    >\n      {`${item.dataKey}`}\n    </Typography>\n  )\n}\n\nconst LegendText = props => (\n  <Box>\n    <Grid spacing={3}           \n justify=\"space-evenly\"\n alignItems=\"stretch\"\n           container>\n\n      {props.payload.map((item, i) =>\n        <Grid\n          item\n        >\n\n          <Box key={i}>\n            <Text item={item} />\n          </Box>\n        </Grid>\n      )}\n    </Grid>\n  </Box>\n)\n\nconst Fire = ({ investmentData, classyear, ...rest }) => {\n  const useStyles = makeStyles(() => ({\n    root: {}\n  }));\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n\n  return investmentData.length > 0 && (\n    <Card\n      classyear={clsx(classes.root, classyear)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Firing In\"\n      />\n      <Divider />\n      <CardContent>\n        <Box\n          height={400}\n          position=\"relative\"\n        >\n          <ResponsiveContainer width={\"100%\"} height=\"100%\">\n            <LineChart\n              data={investmentData}\n              margin={{\n                top: 0, right: 35, left: 35, bottom: 0,\n              }}\n            >\n              <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\n\n              <XAxis dataKey=\"year\" style={{ fontFamily: theme.typography.fontFamily }} />\n              <YAxis tickFormatter={amount => `£${amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`} style={{ fontFamily: theme.typography.fontFamily }} />\n              <Legend content={<LegendText classes={classes} />} />\n\n\n              {\n                Object.keys(investmentData[0])\n                  .filter(key => key !== 'year')\n                  .map((investmentType, i) =>\n                    <Line\n                      key={`${investmentType}-${i}`}\n                      type=\"monotone\"\n                      dataKey={investmentType}\n                      stackId='1'\n                      stroke={colours[i]}\n                      fill={colours[i]}\n                    />\n                  )}\n            </LineChart>\n          </ResponsiveContainer>\n\n        </Box>\n      </CardContent>\n      <Divider />\n    </Card>\n  );\n};\n\nFire.propTypes = {\n  classyear: PropTypes.string\n};\n\nexport default Fire;\n","\n\nexport const convertCompoundDataToGraph = investments =>\n  investments.reduce((accum, investment) => {\n    for (const [year, months] of Object.entries(investment.compoundData)) {\n      let isYearInAccum = accum.find(entry => entry.year === year)\n      \n      if (isYearInAccum) {\n        isYearInAccum[investment.name] = months['Month 12'].balance\n      } else {\n        accum.push({\n          year,\n          [investment.name]: months['Month 12'].balance,\n        })\n      }\n    }\n\n    return accum\n  }, [])\n\n","import { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nexport const convertInvestmentDataToFire = (investments, drawdownPercent, expenseTotal) =>\n  investments.reduce((accum, investment,) => {\n\n    for (const [year, months] of Object.entries(investment.compoundData)) {\n      let isYearInAccum = accum.find(entry => entry.year === year)\n      \n      const incomeToAdd = math.chain(months['Month 12'].balance).divide(100).multiply(drawdownPercent).round(2).done()\n\n      if (isYearInAccum) {\n        isYearInAccum['Income From Drawdown'] = math.add(isYearInAccum['Income From Drawdown'], incomeToAdd)\n      } else {\n        accum.push({\n          year,\n          Expenses: expenseTotal,\n          'Income From Drawdown': incomeToAdd\n        })\n      }   \n    }\n\n    return accum\n  }, [])\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport TakeHomeIncome from './TakeHomeIncome';\nimport NetWorth from './NetWorth';\nimport Fire from './Fire'\nimport TasksProgress from './NetWorthTotal';\nimport AmountInvestedPerMonth from './AmountInvestedPerMonth';\nimport TotalProfit from './ExpectedMonthlyIncome';\nimport { useInvestmentContext } from '../../../context/InvestmentContext';\nimport { useBudgetContext } from '../../../context/BudgetContext';\n\nimport { convertCompoundDataToGraph } from '../../../utils/convertCompoundDataToGraph';\nimport { convertInvestmentDataToFire } from '../../../utils/convertInvestmentDataToFire';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  const { investments, drawDownPercent } = useInvestmentContext();\n  const { expenseTotal } = useBudgetContext();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard\"\n    >\n      <Container maxWidth={false}>\n        <Grid\n          container\n          spacing={3}\n        >\n\n          <Grid\n            item\n            lg={9}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <NetWorth investmentData={convertCompoundDataToGraph(investments)} />\n          </Grid>\n          <Grid\n            xs={12}\n            md={12}\n            lg={3}\n            xl={3}\n            item\n            container\n            spacing={3}\n            justify=\"space-evenly\"\n            alignItems=\"stretch\"\n          >\n            <Grid\n              xs={12}\n              md={6}\n              lg={12}\n              item\n            >\n              <TakeHomeIncome />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={6}\n              lg={12}\n            >\n              <AmountInvestedPerMonth />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={6}\n              lg={12}\n            >\n              <TasksProgress />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={6}\n              lg={12}\n            >\n              <TotalProfit />\n            </Grid>\n          </Grid>\n       \n          <Grid\n            item\n            lg={9}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <Fire investmentData={convertInvestmentDataToFire(investments, drawDownPercent, expenseTotal)} />\n          </Grid>\n        </Grid>\n\n    \n        \n       \n      </Container>\n    </Page>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  image: {\n    marginTop: 50,\n    display: 'inline-block',\n    maxWidth: '100%',\n    width: 560\n  }\n}));\n\nconst NotFoundView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"404\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"md\">\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"h1\"\n          >\n            404: The page you are looking for isn’t here\n          </Typography>\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"subtitle2\"\n          >\n            You either tried some shady route or you came here by mistake.\n            Whichever it is, try using the navigation\n          </Typography>\n          <Box textAlign=\"center\">\n            <img\n              alt=\"Under development\"\n              className={classes.image}\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            />\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default NotFoundView;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  InputLabel,\n  Select,\n  Button,\n  Card,\n  MenuItem,\n  CardContent,\n  TextField,\n  InputAdornment,\n  Typography,\n  makeStyles,\n  Grid,\n  Divider\n} from '@material-ui/core';\nimport { Formik, Form, useField } from \"formik\";\nimport { number, object } from \"yup\";\nimport { useInvestmentContext } from '../../../context/InvestmentContext';\nimport { all, create } from 'mathjs'\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Input = ({ label, type, inputProps, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <TextField\n        type={type}\n        label={label}\n        className=\"text-input\"\n        variant=\"outlined\"\n        required\n        fullWidth\n        InputProps={inputProps ? inputProps : null}\n        {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\n\nconst IncomeDetails = ({ setUserFinances, userTax, className, ...rest }) => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const { addMultipleInvestments } = useInvestmentContext();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n        <Card>\n          <CardContent>\n\n            <Typography\n              align=\"left\"\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"h3\"\n            >\n              Your Circumstance\n                  </Typography>\n            <Divider />\n            <Box mt={3}>\n              <Formik\n                initialValues={{\n                  salary: userTax.salary || 0,\n                  personalPensionContribution: userTax.personalPensionContributionPercent ? math.round(math.multiply(userTax.personalPensionContributionPercent, 100), 2) : 0,\n                  employerPensionContribution: userTax.employerPensionContributionPercent ? math.round(math.multiply(userTax.employerPensionContributionPercent, 100), 2) : 0,\n                  taxFreePersonalAllowance: userTax.taxFreePersonalAllowance || 12500,\n                  studentLoanPlanType: userTax.studentLoan?.studentLoanPlanType || 0\n                }}\n                validationSchema={object({\n                  salary: number(),\n                  personalPensionContribution: number(),\n                  employerPensionContribution: number(),\n                  taxFreePersonalAllowance: number(),\n                  studentLoanPlanType: number()\n                })}\n                onSubmit={(userFinance, { setSubmitting }) => {\n                  setUserFinances(userFinance, addMultipleInvestments)\n                  setSubmitting(false);\n                }}\n              >{({values, handleChange}) => (\n                <Form>\n                  <Grid\n                    container\n                    spacing={3}\n                  >\n                    <Grid\n                      item\n                      lg={6}\n                      md={6}\n                      xs={12}\n                    >\n                      <Input\n                        label=\"Annual Salary\"\n                        name=\"salary\"\n                        type=\"tel\"\n                        inputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                £\n                                    </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid\n                      item\n                      lg={6}\n                      md={6}\n                      xs={12}\n                    >\n\n                      <Input\n                        label=\"Personal Pension Contribution Percentage\"\n                        name=\"personalPensionContribution\"\n                        type=\"tel\"\n                        inputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                %\n                                    </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n\n                    </Grid>\n\n                    <Grid\n                      item\n                      lg={6}\n                      md={6}\n                      xs={12}\n                    >\n\n                      <Input\n                        label=\"Employer Pension Contribution Percentage\"\n                        name=\"employerPensionContribution\"\n                        type=\"tel\"\n                        inputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                %\n                                    </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n\n                    </Grid>\n\n                    <Grid\n                      item\n                      lg={6}\n                      md={6}\n                      xs={12}\n                    >\n                      <Input\n                        label=\"Tax Free Personal Allowance\"\n                        name=\"taxFreePersonalAllowance\"\n                        type=\"tel\"\n                        inputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                £\n                                    </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid\n                      item\n                      lg={6}\n                      md={6}\n                      xs={12}>\n\n                      <InputLabel id=\"plan-name\">Student Loan Type</InputLabel>\n\n                      <Select\n                        labelId=\"studentLoanPlanType\"\n                        id=\"studentLoanPlanType\"\n                        open={open}\n                        onClose={handleClose}\n                        onOpen={handleOpen}\n                        onChange={handleChange(\"studentLoanPlanType\")}\n                        value={values.studentLoanPlanType}\n                      >\n                        <MenuItem key={'plan0'} value={0}>{`No Loan`}</MenuItem>\n                        <MenuItem key={'plan1'} value={1}>{`Plan 1 (before 1 September 2012)`}</MenuItem>\n                        <MenuItem key={'plan2'} value={2}>{`Plan 2 (after 1 September 2012)`}</MenuItem>\n                      </Select>\n                    </Grid>\n                  </Grid>\n                  <Box\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    p={2}\n                    mt={3}>\n                    <Button\n                      type=\"submit\"\n                      color=\"primary\"\n                      fullWidth\n                      variant=\"text\">Calculate</Button>\n                  </Box>\n                </Form>\n              )}\n              </Formik>\n            </Box>\n          </CardContent>\n        </Card>\n    </div >\n  );\n};\n\nIncomeDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default IncomeDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  statsItem: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  statsIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst IncomeTaxCard = ({ className, userTax, ...rest }) => {\n  const classes = useStyles();\n\n  const {\n      incomeTax: {\n        taxFreePersonalAllowance,\n        totalIncomeTax,\n        lowerBand,\n        mediumBand,\n        upperBand,\n      },\n      taxableIncome,\n      studentLoan,\n  } = userTax;\n\n  return userTax.salary > 0 && (\n\n    <Box>\n      <Card\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <CardContent>\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h4\"\n          >\n            Income Tax\n        </Typography>\n          <Divider />\n          <Box mt={3} >\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Tax free allowance: £{taxFreePersonalAllowance.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                </Typography>\n              </Grid>\n              {userTax.incomeTax.taxFreePersonalAllowanceRemovedBy100kTax && (\n                <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  100k Personal Allowance Deduction: £{userTax.incomeTax.taxFreePersonalAllowanceRemovedBy100kTax.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                </Typography>\n              </Grid>\n              )}\n\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Total Income Tax: £{totalIncomeTax.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Taxable Income: £{taxableIncome.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                </Typography>\n              </Grid>       <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Tax paid at lower band: £{lowerBand.taxPaid.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                </Typography>\n              </Grid>       <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Tax paid at medium band: £{mediumBand.taxPaid.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Tax paid at higher band: £{upperBand.taxPaid.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                </Typography>\n              </Grid>\n              {studentLoan?.yearlyAmountPaid > 0 && (\n                <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    align=\"center\"\n                    color=\"textPrimary\"\n                    variant=\"body1\"\n                  >\n                    Student Loan Paid: £{studentLoan?.yearlyAmountPaid.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                  </Typography>\n                </Grid>\n              )}\n            </Grid>\n          </Box>\n        </CardContent>\n        <Box flexGrow={1} />\n        <Divider />\n      </Card>\n    </Box>\n  );\n};\n\nIncomeTaxCard.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default IncomeTaxCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { useSalaryContext } from '../../../context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  statsItem: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  statsIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst NationalInsuranceCard = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const {\n    userTax: {\n      salary,\n      nationalInsuranceTax: {\n        totalNationalInsuranceTax,\n        lowerBand,\n        mediumBand,\n        upperBand,\n      },\n    },\n  } = useSalaryContext();\n\n  return (\n    <>\n      {salary > 0 && (\n        <Card\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <CardContent>\n\n            <Typography\n              align=\"center\"\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"h4\"\n            >\n              National Insurance\n        </Typography>\n            <Divider />\n            <Box mt={3}>\n              <Grid\n                container\n                spacing={3}\n              >\n\n                <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    align=\"center\"\n                    color=\"textPrimary\"\n                    variant=\"body1\"\n                  >\n                    Total N.I. Paid: £{totalNationalInsuranceTax}\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    align=\"center\"\n                    color=\"textPrimary\"\n                    variant=\"body1\"\n                  >\n                    Tax paid at lower band: £{lowerBand.taxPaid}\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    align=\"center\"\n                    color=\"textPrimary\"\n                    variant=\"body1\"\n                  >\n                    Tax paid at medium band: £{mediumBand.taxPaid}\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    align=\"center\"\n                    color=\"textPrimary\"\n                    variant=\"body1\"\n                  >\n                    Tax paid at higher band: £{upperBand.taxPaid}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Box>\n          </CardContent>\n          <Box />\n          <Divider />\n        </Card>\n      )}\n    </>\n  );\n};\n\nNationalInsuranceCard.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default NationalInsuranceCard;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport IncomeDetails from './IncomeDetails';\nimport IncomeTaxCard from './IncomeTaxCard'\nimport NationalInsurance from './NationalInsuranceCard'\nimport BreakdownCard from './BreakdownCard';\nimport { useSalaryContext } from '../../../context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst SalaryCalculator = () => {\n  const classes = useStyles();\n\n  const { setUserFinances, userTax } = useSalaryContext();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Salary Calculator\"\n    >\n      <Container maxWidth={false}>\n        <IncomeDetails userTax={userTax} setUserFinances={setUserFinances} />\n        {userTax.salary && (\n          <Box mt={3} >\n            <Grid\n              container\n              justify=\"space-evenly\"\n              spacing={3}\n            >\n\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <IncomeTaxCard userTax={userTax} />\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <NationalInsurance />\n              </Grid>\n            </Grid>\n            {/* <BreakdownCard /> */}\n          </Box>\n        )}\n\n      </Container>\n    </Page>\n  );\n};\n\nexport default SalaryCalculator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Divider,\n    Typography,\n    makeStyles,\n    Collapse,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    IconButton\n} from '@material-ui/core';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nimport { useSalaryContext } from '../../../context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    table: {\n        minWidth: 650,\n    },\n    statsItem: {\n        alignItems: 'center',\n        display: 'flex'\n    },\n    statsIcon: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst BreakdownCard = ({ className, ...rest }) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const { userTax: {\n        salary,\n    }} = useSalaryContext;\n\n    return salary > 0 && (\n        <Box mt={3}>\n            <Card\n                className={clsx(classes.root, className)}\n                {...rest}\n            >\n                <CardContent>\n\n                    <Typography\n                        align=\"center\"\n                        color=\"textPrimary\"\n                        gutterBottom\n                        variant=\"h3\"\n                    >\n                        Tax Breakdown\n                    </Typography>\n                    <Divider />\n                    <Box mt={3}>\n                        <TableContainer component={Paper}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell />\n                                        <TableCell align=\"center\">Yearly</TableCell>\n                                        <TableCell align=\"center\">Monthly</TableCell>\n                                        <TableCell align=\"center\">Weekly</TableCell>\n                                        <TableCell align=\"center\">Daily</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    <TableRow key={'id'}>\n                                        <TableCell align=\"center\" >\n                                            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                                                {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                                            </IconButton>\n                                        </TableCell>\n\n\n                                        <TableCell align=\"center\" >\n                                            Gross Income\n                                    </TableCell>\n                                        <TableCell align=\"center\" >\n                                            £test\n                                    </TableCell>\n                                      \n\n                                        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                                            <Box margin={1}>\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                                    History\n                                                 </Typography>\n                                                <Table size=\"small\" aria-label=\"purchases\">\n                                                    <TableHead>\n                                                        <TableRow>\n                                                            <TableCell>Date</TableCell>\n                                                            <TableCell>Customer</TableCell>\n                                                            <TableCell align=\"right\">Amount</TableCell>\n                                                            <TableCell align=\"right\">Total price ($)</TableCell>\n                                                        </TableRow>\n                                                    </TableHead>\n                                                    <TableBody>\n                                                        <TableRow key='id'>\n                                                            <TableCell component=\"th\" scope=\"row\">\n                                                                date\n                                                                </TableCell>\n                                                            <TableCell>id</TableCell>\n                                                            <TableCell align=\"right\">sigh</TableCell>\n                                                        </TableRow>\n                                                    </TableBody>\n                                                </Table>\n                                            </Box>\n                                        </Collapse>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Box>\n                </CardContent>\n                <Divider />\n            </Card>\n        </Box>\n    );\n};\n\nBreakdownCard.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default BreakdownCard;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/layouts/DashboardLayout';\nimport MainLayout from 'src/layouts/MainLayout';\nimport Investments from 'src/views/investments/Investments';\nimport Budget from 'src/views/budget/Budget';\nimport NetWorthDashboard from 'src/views/dashboard/DashboardView';\nimport NotFoundView from 'src/views/errors/NotFoundView';\nimport SalaryCalculator from 'src/views/salaryCalculator/SalaryCalculator';\nimport SettingsView from 'src/views/settings/SettingsView';\n\nconst routes = [\n  {\n    path: 'app',\n    element: <DashboardLayout />,\n    children: [\n      { path: 'investments', element: <Investments /> },\n      { path: 'budget', element: <Budget /> },\n      { path: 'net-worth', element: <NetWorthDashboard /> },\n      { path: 'salary-calculator', element: <SalaryCalculator /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  },\n  {\n    path: '/',\n    element: <MainLayout />,\n    children: [\n      { path: '404', element: <NotFoundView /> },\n      { path: '/', element: <Navigate to=\"/app/salary-calculator\" /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  }\n];\n\nexport default routes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Notifications = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Manage the notifications\"\n          title=\"Notifications\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Notifications\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Text Messages\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Messages\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {}\n}));\n\nconst Password = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Update password\"\n          title=\"Password\"\n        />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            margin=\"normal\"\n            name=\"confirm\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Update\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Password;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Notifications from './Notifications';\nimport Password from './Password';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst SettingsView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Settings\"\n    >\n      <Container maxWidth=\"lg\">\n        <Notifications />\n        <Box mt={3}>\n          <Password />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SettingsView;\n","import 'react-perfect-scrollbar/dist/css/styles.css';\nimport React from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\n\nconst App = () => {\n  const routing = useRoutes(routes);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {routing}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { SalaryContextProvider } from './context/SalaryContext'\nimport { BudgetContextProvider } from './context/BudgetContext'\nimport { InvestmentContextProvider } from './context/InvestmentContext'\n\nimport App from './App';\n\nReactDOM.render((\n  <HashRouter>\n    <SalaryContextProvider>\n      <BudgetContextProvider>\n        <InvestmentContextProvider>\n          <App />\n        </InvestmentContextProvider>\n      </BudgetContextProvider>\n    </SalaryContextProvider>\n  </HashRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}