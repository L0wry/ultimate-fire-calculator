{"version":3,"sources":["serviceWorker.js","utils/calculatePreTaxDeductions.js","consts/index.js","utils/calculateIncomeTax.js","utils/taxTypes.js","utils/calculateNationalInsurance.js","utils/calculateStudentLoan.js","utils/calculateAllTax.js","context/SalaryContext.jsx","context/BudgetContext.jsx","utils/calculateCompoundInterest.js","context/InvestmentContext.jsx","context/MobileContext.jsx","components/GlobalStyles.js","theme/index.js","theme/shadows.js","theme/typography.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/SelectYears.jsx","layouts/DashboardLayout/NavBar/SelectDrawDown.jsx","views/dashboard/DashboardView/ExpectedMonthlyIncome.js","views/dashboard/DashboardView/NetWorthTotal.js","views/dashboard/DashboardView/AmountInvestedPerMonth.jsx","layouts/DashboardLayout/NavBar/index.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/investments/Investments/AddInvestment.jsx","views/investments/Investments/InvestmentList.jsx","views/investments/Investments/Investments.jsx","views/investments/Investments/index.js","views/budget/Budget/MonthlyTakeHomeCard.jsx","views/budget/Budget/AddExpenses.jsx","views/budget/Budget/ExpenseList.jsx","views/budget/Budget/Budget.jsx","views/budget/Budget/index.js","views/dashboard/DashboardView/TakeHomeIncome.js","views/dashboard/DashboardView/NetWorth.js","views/dashboard/DashboardView/Fire.jsx","utils/convertCompoundDataToGraph.js","utils/convertInvestmentDataToFire.js","views/dashboard/DashboardView/Dashboard.jsx","views/dashboard/DashboardView/index.js","views/salaryCalculator/SalaryCalculator/IncomeDetails.jsx","views/salaryCalculator/SalaryCalculator/IncomeTaxCard.jsx","views/salaryCalculator/SalaryCalculator/NationalInsuranceCard.jsx","views/salaryCalculator/SalaryCalculator/SalaryCalculator.jsx","views/salaryCalculator/SalaryCalculator/BreakdownCard.jsx","views/salaryCalculator/SalaryCalculator/index.jsx","views/help/Help.jsx","views/help/index.jsx","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","math","create","all","number","precision","TAX_BANDS","nationalInsuranceTaxBands","totalNationalInsuranceTax","weeklyNationalInsuranceTax","lowerBand","taxPercent","start","end","taxPaid","carryOver","mediumBand","upperBand","BANDS","PLAN_TYPES","calculateStudentLoan","studentLoanPlanType","salary","monthlyAmountPaid","yearlyAmountPaid","difference","subtract","chain","divide","multiply","round","done","calculatePlanOne","calculatePlanTwo","calculateAllTax","taxFreePersonalAllowance","employerPensionContributionPercent","personalPensionContributionPercent","secondaryIncomeAfterTax","personalPensionContribution","employerPensionContribution","taxBreaks","taxBreaksTotal","reduce","accum","item","add","amount","taxableIncome","calculatePreTaxDeductions","incomeTax","tax","amountOver","amountToRemoveFromPersonalAllowance","Math","floor","newTaxFreeAmount","taxFreePersonalAllowanceRemovedBy100kTax","band","totalIncomeTax","calculateIncomeTax","incomeTaxBands","nationalInsuranceTax","calculateNationalInsurance","studentLoan","totalTakeHome","SalaryContext","React","createContext","SalaryContextProvider","children","state","JSON","parse","localStorage","getItem","useState","userTax","setUserTax","Provider","value","setUserFinances","addMultipleInvestments","setItem","stringify","name","monthlyContribution","useSalaryContext","context","useContext","undefined","Error","BudgetContext","BudgetContextProvider","expenses","setExpenses","expenseTotal","length","filter","checked","acc","i","cost","addExpense","newExpenses","concat","parseFloat","checkExpense","idx","map","expense","index","removeExpense","_","useBudgetContext","calculateYearlyCompoundWithCharge","initialAmount","expectedReturn","annualCharge","noOfYearsToMature","compoundInterest","totalAmount","calculateMonthlyCompoundInterest","totalAmountAfterMaturing","balance","cumulativeInterest","earnedInterest","InvestmentContext","InvestmentContextProvider","investmentState","yearState","drawdownState","investments","setInvestments","yearsToMature","setYearsToMature","drawDownPercent","setDrawDownPercent","saveInvestments","investmentToSave","saveDrawdown","percent","console","log","saveYearsToMature","years","newInvestments","investment","investmentToRecalculate","compoundData","onItemSave","editMode","investmentCopy","addInvestment","getAmountInvestedPerMonth","getTotalNetWorthInXYears","investmentsToAdd","copy","newInvestment","isInvestmentAlreadyInList","findIndex","oldInvestments","push","removeInvestment","editInvestment","getExpectedInterestIncomeInXYears","useInvestmentContext","MobileContext","MobileContextProvider","isMobileNavOpen","setMobileNavOpen","toggleMobileNav","tog","useMobileContext","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","theme","createMuiTheme","palette","background","dark","default","paper","primary","main","secondary","text","tertiary","shadows","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","h1","fontWeight","letterSpacing","h2","h3","h4","h5","h6","overline","display","paddingTop","paddingBottom","button","color","justifyContent","textTransform","icon","marginRight","spacing","title","active","fontWeightBold","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","formControl","minWidth","select","textAlign","Array","fill","SelectYears","open","setOpen","Box","alignItems","FormControl","Typography","align","gutterBottom","variant","Select","labelId","id","onClose","onOpen","onChange","e","target","year","MenuItem","key","percentages","SelectDrawDown","box","ExpectedMonthlyIncome","Grid","container","direction","toString","replace","root","NetWorthTotal","justify","AmountInvestedPerMonth","items","DollarSign","Download","TrendingUp","BarChartIcon","HelpCircle","mobileDrawer","desktopDrawer","NavBar","onMobileClose","openMobile","useLocation","useEffect","pathname","content","p","List","selected","mt","Hidden","lgUp","Drawer","elevation","anchor","mdDown","defaultProps","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","toolbar","marginLeft","TopBar","header","AppBar","Toolbar","ml","flexGrow","IconButton","onClick","MainLayout","Page","forwardRef","ref","Helmet","input","error","Input","label","inputProps","props","useField","field","meta","TextField","required","fullWidth","InputProps","touched","AddInvestment","initialValues","validationSchema","object","string","onSubmit","setSubmitting","resetForm","lg","md","xs","type","startAdornment","InputAdornment","position","endAdornment","tableCell","InvestmentList","memo","onItemEdit","onItemRemove","onItemCheck","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","setStatus","submitForm","Save","SaveOutlined","aria-label","DeleteOutlined","Edit","EditOutlined","Investments","minHeight","Index","Container","maxWidth","avatar","colors","red","differenceIcon","differenceValue","MonthlyTakeHomeCard","expensesCost","Card","CardContent","Expenses","ExpenseList","boxShadow","Checkbox","ExpenseHeaderCard","takeHome","setTakeHome","prevState","sm","xl","AddExpenses","Budget","colours","Text","stroke","dataKey","ToolTip","m","payload","b","toFixed","NetWorth","investmentData","useTheme","syncId","data","top","right","left","bottom","strokeDasharray","style","tickFormatter","Object","keys","investmentType","stackId","TextBox","LegendBox","ToolTipBox","Fire","fireData","convertCompoundDataToGraph","months","isYearInAccum","find","entry","entries","convertInvestmentDataToFire","drawdownPercent","incomeToAdd","Dashboard","importButton","exportButton","IncomeDetails","handleClose","handleOpen","shape","userFinance","values","handleChange","InputLabel","IncomeTaxCard","NationalInsuranceCard","flexDirection","table","statsItem","statsIcon","SalaryCalculator","Salary","purposeTexts","HelpPage","purposeText","Link","Help","routes","path","element","App","routing","useRoutes","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.95917c5e.chunk.js","sourcesContent":["/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nexport function calculatePreTaxDeductions({ salary = 0, personalPensionContribution = 0 }, taxBreaks = []) {\n\n  const taxBreaksTotal = taxBreaks.reduce((accum, item) => math.add(accum, item.amount), 0)\n  let taxableIncome = math\n    .chain(salary)\n    .subtract(personalPensionContribution)\n    .subtract(taxBreaksTotal)\n    .done()\n\n  taxableIncome = taxableIncome > 0\n    ? taxableIncome = taxableIncome\n    : 0\n\n\n  return {\n    taxBreaksTotal,\n    taxableIncome\n  }\n\n}\n","export const TAX_BANDS = ['lowerBand', 'mediumBand', 'upperBand']","import { all, create } from 'mathjs'\n\nimport { TAX_BANDS } from 'src/consts/';\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst ROUND_AMOUNT = 2\n\nexport const calculateIncomeTax = (tax, taxableIncome) => {\n\n  const isSalaryOver100k = taxableIncome > 100000\n\n  if (isSalaryOver100k) {\n    const amountOver = math.subtract(taxableIncome, 100000)\n\n    const amountToRemoveFromPersonalAllowance = Math.floor(math.divide(amountOver, 2))\n    const newTaxFreeAmount = math.subtract(tax.taxFreePersonalAllowance, amountToRemoveFromPersonalAllowance) > 0 ?\n      math.subtract(tax.taxFreePersonalAllowance, amountToRemoveFromPersonalAllowance) :\n      0\n\n    tax.taxFreePersonalAllowanceRemovedBy100kTax = amountToRemoveFromPersonalAllowance > tax.taxFreePersonalAllowance ? tax.taxFreePersonalAllowance : amountToRemoveFromPersonalAllowance\n    tax.taxFreePersonalAllowance = newTaxFreeAmount\n  }\n\n  taxableIncome = math.subtract(taxableIncome, tax.taxFreePersonalAllowance)\n\n  let carryOver = taxableIncome\n\n  for (const band of TAX_BANDS) {\n    const difference = math.subtract(tax[band].end, tax[band].start)\n\n    if (math.subtract(carryOver, difference) > 0) {\n      tax[band].taxPaid = math.round(math.multiply(difference, tax[band].taxPercent), ROUND_AMOUNT)\n      tax.totalIncomeTax = math.add(tax.totalIncomeTax, tax[band].taxPaid)\n      tax[band].carryOver = math.subtract(carryOver, difference)\n      carryOver = math.subtract(carryOver, difference)\n\n    } else {\n      tax[band].taxPaid = math.multiply(carryOver, tax[band].taxPercent) > 0\n        ? math.round(math.multiply(carryOver, tax[band].taxPercent), ROUND_AMOUNT)\n        : 0\n\n      tax.totalIncomeTax = math.round(math.add(tax.totalIncomeTax, tax[band].taxPaid), ROUND_AMOUNT)\n      carryOver = 0\n      break\n    }\n  }\n\n  return tax\n}\n\n","export const incomeTaxBands = (taxFreePersonalAllowance = 12500 ) => ({\n  taxFreePersonalAllowance,\n  totalIncomeTax: 0,\n  lowerBand: {\n    taxPercent: .2,\n    start: taxFreePersonalAllowance + 0.01,\n    end: 50000,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  mediumBand: {\n    taxPercent: .4,\n    start: 50000.01,\n    end: 150000,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  upperBand: {\n    taxPercent: .45,\n    start: 150000.01,\n    end: 99999999,\n    taxPaid: 0,\n    carryOver: 0\n  }\n})\n\nexport const nationalInsuranceTaxBands = {\n  totalNationalInsuranceTax: 0,\n  weeklyNationalInsuranceTax: 0,\n  lowerBand: {\n    taxPercent: 0,\n    start: 0,\n    end: 183,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  mediumBand: {\n    taxPercent: .12,\n    start: 183.01,\n    end: 962.00,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  upperBand: {\n    taxPercent: .02,\n    start: 962.01,\n    end: 99999999,\n    taxPaid: 0,\n    carryOver: 0\n  }\n}\n","import { all, create } from 'mathjs'\n\nconst BANDS = ['lowerBand', 'mediumBand', 'upperBand']\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst WEEKS_IN_YEAR = 52\nconst ROUND_AMOUNT = 2\n\n\nexport const calculateNationalInsurance = (tax, taxableIncome) => {\n  tax.weeklyNationalInsuranceTax = 0;\n  tax.totalNationalInsuranceTax = 0;\n  const weeklyIncome = math.divide(taxableIncome, WEEKS_IN_YEAR)\n\n  let carryOver = weeklyIncome\n\n  for (const band of BANDS) {\n    const difference = math.subtract(tax[band].end, tax[band].start)\n    if (math.subtract(carryOver, difference) > 0) {\n      tax[band].taxPaid = math.round(math.multiply(difference, tax[band].taxPercent), ROUND_AMOUNT)\n      tax.weeklyNationalInsuranceTax = math.add(tax.weeklyNationalInsuranceTax, tax[band].taxPaid)\n\n\n      tax[band].carryOver = math.subtract(carryOver, difference)\n      carryOver = math.subtract(carryOver, difference)\n\n    } else {\n      tax[band].taxPaid = math.multiply(carryOver, tax[band].taxPercent) > 0\n        ? math.round(math.multiply(carryOver, tax[band].taxPercent), ROUND_AMOUNT)\n        : 0\n\n      tax.weeklyNationalInsuranceTax = math.round(math.add(tax.weeklyNationalInsuranceTax, tax[band].taxPaid), ROUND_AMOUNT)\n      \n      carryOver = 0\n      break\n    }\n  }\n\n  tax.totalNationalInsuranceTax = math.round(math.multiply(tax.weeklyNationalInsuranceTax, WEEKS_IN_YEAR), ROUND_AMOUNT)\n  return tax\n}\n\n","import { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst PLAN_TYPES = {\n  ONE: 1,\n  TWO: 2\n}\n\nconst PLAN_ONE_THRESHOLD = 19390\nconst PLAN_TWO_THRESHOLD = 26575\nconst PAYBACK_PERCENT = 9\n\nconst calculatePlanOne = ({ salary = 0 }) => {\n  if (salary <= PLAN_ONE_THRESHOLD) {\n    return {\n      monthlyAmountPaid: 0,\n      yearlyAmountPaid: 0\n    }\n  }\n\n  const difference = math.subtract(salary, PLAN_ONE_THRESHOLD)\n  const yearlyAmountPaid = math.chain(difference).divide(100).multiply(PAYBACK_PERCENT).round(2).done()\n\n  return {\n    monthlyAmountPaid: math.round(math.divide(yearlyAmountPaid, 12), 2),\n    yearlyAmountPaid\n  }\n}\n\nconst calculatePlanTwo = ({ salary = 0 }) => {\n  if (salary <= PLAN_TWO_THRESHOLD) {\n    return {\n      monthlyAmountPaid: 0,\n      yearlyAmountPaid: 0\n    }\n  }\n\n  const difference = math.subtract(salary, PLAN_TWO_THRESHOLD)\n  const yearlyAmountPaid = math.chain(difference).divide(100).multiply(PAYBACK_PERCENT).round(2).done()\n\n  return {\n    monthlyAmountPaid: math.round(math.divide(yearlyAmountPaid, 12), 2),\n    yearlyAmountPaid\n  }\n}\n\nexport const calculateStudentLoan = ({ studentLoanPlanType = 0, salary = 0 }) => {\n  if (studentLoanPlanType === PLAN_TYPES.ONE) {\n    return calculatePlanOne({ salary })\n  } else if (studentLoanPlanType === PLAN_TYPES.TWO) {\n    return calculatePlanTwo({ salary })\n  }\n  return {\n    monthlyAmountPaid: 0,\n    yearlyAmountPaid: 0\n  }\n}\n","import { all, create } from 'mathjs'\nimport { calculatePreTaxDeductions } from './calculatePreTaxDeductions'\nimport { calculateIncomeTax } from './calculateIncomeTax'\nimport { incomeTaxBands, nationalInsuranceTaxBands } from './taxTypes';\nimport { calculateNationalInsurance } from './calculateNationalInsurance'\nimport { calculateStudentLoan } from './calculateStudentLoan'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nexport default function calculateAllTax({\n  salary = 0,\n  taxFreePersonalAllowance = 12500,\n  employerPensionContributionPercent = 0,\n  personalPensionContributionPercent = 0,\n  studentLoanPlanType = 0,\n  secondaryIncomeAfterTax }) {\n\n\n  const personalPensionContribution = math.multiply(personalPensionContributionPercent, salary)\n  const employerPensionContribution = math.multiply(employerPensionContributionPercent, salary)\n  const { monthlyAmountPaid, yearlyAmountPaid } = calculateStudentLoan({ studentLoanPlanType , salary})\n  const { taxBreaksTotal, taxableIncome } = calculatePreTaxDeductions({ taxFreePersonalAllowance, salary, personalPensionContribution }) //TODO : Tax breaks\n\n  const incomeTax = calculateIncomeTax(incomeTaxBands(taxFreePersonalAllowance), taxableIncome)\n  const nationalInsuranceTax = calculateNationalInsurance(nationalInsuranceTaxBands, taxableIncome)\n\n  return {\n    salary,\n    studentLoan: {\n      studentLoanPlanType,\n      monthlyAmountPaid,\n      yearlyAmountPaid\n    },\n    secondaryIncomeAfterTax,\n    employerPensionContributionPercent,\n    personalPensionContributionPercent,\n    personalPensionContribution,\n    employerPensionContribution,\n    taxBreaksTotal,\n    taxableIncome,\n    incomeTax,\n    nationalInsuranceTax,\n    totalTakeHome: math\n      .chain(salary)\n      .subtract(personalPensionContribution)\n      .subtract(incomeTax.totalIncomeTax)\n      .subtract(nationalInsuranceTax.totalNationalInsuranceTax)\n      .subtract(yearlyAmountPaid)\n      .add(math.divide(secondaryIncomeAfterTax, 12))\n      .round(2)\n      .done()\n  }\n}\n","import React, { useState } from 'react';\nimport calculateAllTax from '../utils/calculateAllTax'\nimport { all, create } from 'mathjs'\n\nconst math = create(all, {\n\tnumber: 'BigNumber',\n\tprecision: 32\n});\n\nconst SalaryContext = React.createContext({}); \n\nexport const SalaryContextProvider = ({ children }) => {\n\tconst state = JSON.parse(localStorage.getItem('salary')) ? JSON.parse(localStorage.getItem('salary')) : {}\n\tconst [userTax, setUserTax] = useState(state)\n\n\tconst setUserFinances = ({\n\t\tsalary,\n\t\ttaxFreePersonalAllowance,\n\t\tpersonalPensionContribution = 0,\n\t\temployerPensionContribution = 0,\n\t\tstudentLoanPlanType = 0,\n\t\tsecondaryIncomeAfterTax = 0\n\t}, addMultipleInvestments) => {\n\t\tconst tax = calculateAllTax({\n\t\t\tsalary,\n\t\t\ttaxFreePersonalAllowance,\n\t\t\temployerPensionContributionPercent: employerPensionContribution / 100,\n\t\t\tpersonalPensionContributionPercent: personalPensionContribution / 100,\n\t\t\tsecondaryIncomeAfterTax,\n\t\t\tstudentLoanPlanType\n\t\t})\n\t\tsetUserTax(tax)\n\t\tlocalStorage.setItem('salary', JSON.stringify(tax))\n\n\t\taddMultipleInvestments([{\n\t\t\t\tname: 'Workplace Pension (employer contribution)',\n\t\t\t\tmonthlyContribution: math.round(math.divide(tax.employerPensionContribution, 12), 2)\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Workplace Pension (personal contribution)',\n\t\t\t\tmonthlyContribution: math.round(math.divide(tax.personalPensionContribution, 12), 2)\n\t\t\t}\n\t\t])\n\t}\n\n\treturn (\n\t\t<SalaryContext.Provider value={{ setUserFinances, userTax }}>\n\t\t\t{children}\n\t\t</SalaryContext.Provider>\n\t)\n}\n\nexport const useSalaryContext = () => {\n\tconst context = React.useContext(SalaryContext);\n\tif (context === undefined) {\n\t\tthrow new Error('useSalaryContext must be used within SalaryContextProvider');\n\t}\n\treturn context;\n}\n\n","import React, { useState } from 'react';\nimport { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst BudgetContext = React.createContext({}); \n\nexport const BudgetContextProvider = ({ children }) => {\n  const state = JSON.parse(localStorage.getItem('expenses')) ? JSON.parse(localStorage.getItem('expenses')) : []\n  const [expenses, setExpenses] = useState(state);\n\n  const addExpense = ({ name, cost }) => {\n    if (name !== \"\" || !cost) {\n      const newExpenses = expenses.concat({\n        name,\n        cost: parseFloat(cost),\n        checked: true\n      })\n\n      setExpenses(newExpenses);\n      localStorage.setItem('expenses', JSON.stringify(newExpenses))\n    }\n  }\n\n  const checkExpense = idx => {\n    setExpenses(\n      expenses.map((expense, index) => {\n        if (idx === index) {\n          expense.checked = !expense.checked;\n        }\n\n        return expense;\n      })\n    );\n  }\n\n  const removeExpense = idx => {\n    const newExpenses = expenses.filter((_, index) => idx !== index)\n    setExpenses(newExpenses);\n    localStorage.setItem('expenses', JSON.stringify(newExpenses))\n  }\n\n  const expenseTotal = expenses.length > 0 ?\n    expenses.filter(item => item.checked).reduce((acc, i) => math.add(acc, i.cost), 0) :\n    0\n\n  return (\n    <BudgetContext.Provider value={{\n        expenses,\n        addExpense,\n        checkExpense,\n        removeExpense,\n        expenseTotal\n      }}>\n      {children}\n    </BudgetContext.Provider>\n  )\n}\n\nexport const useBudgetContext = () => {\n  const context = React.useContext(BudgetContext);\n  if (context === undefined) {\n    throw new Error('useBudgetContext must be used within BudgetContextProvider');\n  }\n  return context;\n}\n","import { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst MONTHS_OF_THE_YEAR = 12\nconst ROUND_AMOUNT = 2\n\nexport const calculateYearlyCompoundWithCharge = ({\n  initialAmount = 0, \n  expectedReturn = 0, \n  monthlyContribution = 0,\n  annualCharge = 0,\n  noOfYearsToMature = 0\n}) => {\n  const compoundInterest = {}\n  let totalAmount = initialAmount;\n\n  // forgive for starting at 1 plz god. Makes years easier\n  for (let i = 1; i <= noOfYearsToMature; i++ ) {  \n    compoundInterest[`Year ${i}`] = calculateMonthlyCompoundInterest({\n      totalAmount, \n      expectedReturn, \n      monthlyContribution\n    })\n\n    const totalAmountAfterMaturing = compoundInterest[`Year ${i}`][`Month ${MONTHS_OF_THE_YEAR}`].balance\n    \n    totalAmount = annualCharge\n    ? math.round(math.subtract(totalAmountAfterMaturing, math.multiply(totalAmountAfterMaturing, annualCharge)), ROUND_AMOUNT)\n    : totalAmountAfterMaturing\n  }\n\n  return compoundInterest\n}\n\nexport const calculateMonthlyCompoundInterest = ({\n    totalAmount, \n    expectedReturn, \n    monthlyContribution,\n  }) => {\n  const compoundInterest = {}\n\n  let balance = totalAmount\n  let  cumulativeInterest = 0;\n  \n  // forgive for starting at 1 plz god. Makes years easier\n  for (let i = 1; i <= MONTHS_OF_THE_YEAR; i++ ) {  \n    const earnedInterest = math.chain(balance).multiply(expectedReturn).divide(MONTHS_OF_THE_YEAR).round(ROUND_AMOUNT).done()\n    cumulativeInterest = math.round(math.add(cumulativeInterest, earnedInterest), ROUND_AMOUNT)\n\n    balance =  math.chain(balance).add(monthlyContribution).add(earnedInterest).round(ROUND_AMOUNT).done()\n    \n    compoundInterest[`Month ${i}`] = {\n      earnedInterest,\n      balance,\n      cumulativeInterest\n    }\n  }\n\n  return compoundInterest\n}\n","import React, { useState } from 'react';\nimport { calculateYearlyCompoundWithCharge } from 'src/utils/calculateCompoundInterest';\nimport { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst InvestmentContext = React.createContext({});\n\nexport const InvestmentContextProvider = ({ children }) => {\n  const investmentState = JSON.parse(localStorage.getItem('investments')) ? JSON.parse(localStorage.getItem('investments')) : []\n  const yearState = localStorage.getItem('yearsToMature') || 1\n  const drawdownState = localStorage.getItem('drawDownPercent') || 0.04\n  \n  const [investments, setInvestments] = useState(investmentState);\n  const [yearsToMature, setYearsToMature] = useState(yearState)\n  const [drawDownPercent, setDrawDownPercent] = useState(drawdownState)\n\n\n  const saveDrawdown = percent => {\n    console.log(percent)\n      setDrawDownPercent(parseFloat(percent) /  100)\n      localStorage.setItem('drawDownPercent', percent /  100)\n  }\n\n  const saveYearsToMature = years => {\n    setYearsToMature(years)\n\n    const newInvestments = [...investments].map(investment => {\n      const investmentToRecalculate = {\n        ...investment,\n        noOfYearsToMature: years,\n      }\n\n      return {\n        ...investmentToRecalculate,\n        compoundData: calculateYearlyCompoundWithCharge(investmentToRecalculate)\n      }\n    })\n\n    setInvestments(newInvestments)\n\n    localStorage.setItem('investments', JSON.stringify(newInvestments))\n    localStorage.setItem('yearsToMature', years)\n  }\n  const saveInvestments = (investmentToSave) => {\n    setInvestments(investmentToSave)\n    localStorage.setItem('investments', JSON.stringify(investmentToSave))\n  }\n\n  const addMultipleInvestments = (investmentsToAdd) => {\n\n    const copy = [...investments]\n\n    for (const newInvestment of investmentsToAdd) {\n\n      let isInvestmentAlreadyInList = copy.findIndex(oldInvestments => oldInvestments.name === newInvestment.name)\n\n      if (isInvestmentAlreadyInList > -1) {\n        const { monthlyContribution } = newInvestment\n        const investment = {\n          ...copy[isInvestmentAlreadyInList],\n          monthlyContribution: parseFloat(monthlyContribution),\n        }\n\n        copy[isInvestmentAlreadyInList] = {\n          ...investment,\n          compoundData: calculateYearlyCompoundWithCharge(investment)\n        }\n\n      } else {\n        const investment = {\n          name: newInvestment.name,\n          initialAmount: 0,\n          expectedReturn: 0,\n          annualCharge: 0,\n          monthlyContribution: parseFloat(newInvestment.monthlyContribution),\n          editMode: false,\n          noOfYearsToMature: yearsToMature,\n        }\n\n        copy.push({\n          ...investment,\n          compoundData: calculateYearlyCompoundWithCharge(investment)\n        })\n      }\n\n    }\n\n    saveInvestments(copy)\n  }\n\n  const addInvestment = ({ name = '', initialAmount = 0, expectedReturn = 0, monthlyContribution = 0, annualCharge = 0 }) => {\n    const investment = {\n      name,\n      initialAmount: parseFloat(initialAmount),\n      expectedReturn: math.round(math.divide(expectedReturn, 100), 2),\n      monthlyContribution: parseFloat(monthlyContribution),\n      noOfYearsToMature: yearsToMature,\n      annualCharge: math.divide(annualCharge, 100),\n      editMode: false,\n    }\n\n    saveInvestments([\n      ...investments.filter(investment => investment.name !== name),\n      {\n        ...investment,\n        compoundData: calculateYearlyCompoundWithCharge(investment)\n      }\n    ])\n  }\n\n  const editInvestment = idx => {\n    saveInvestments(\n      investments.map((investment, index) => {\n        if (idx === index) {\n          investment.editMode = true;\n        }\n\n        return investment;\n      })\n    );\n  }\n\n  const onItemSave = ({ name = '', initialAmount = 0, expectedReturn = 0, monthlyContribution = 0, annualCharge = 0 }, idx) => {\n    const investment = {\n      name,\n      initialAmount: parseFloat(initialAmount),\n      expectedReturn: math.round(math.divide(expectedReturn, 100), 2),\n      monthlyContribution: parseFloat(monthlyContribution),\n      noOfYearsToMature: yearsToMature,\n      annualCharge: math.divide(annualCharge, 100),\n      editMode: false,\n    }\n\n    const investmentCopy = [...investments]\n\n    investmentCopy[idx] = {\n      ...investment,\n      compoundData: calculateYearlyCompoundWithCharge(investment)\n    }\n\n    saveInvestments(investmentCopy)\n  }\n\n  const removeInvestment = idx => {\n    saveInvestments(investments.filter((_, index) => idx !== index));\n  }\n\n  const getExpectedInterestIncomeInXYears = () => investments.length > 0 ?\n    math.round(investments.reduce((accum, investment) => accum + investment.compoundData[`Year ${yearsToMature}`]['Month 12'].earnedInterest, 0), 2) :\n    0\n\n  const getTotalNetWorthInXYears = () => investments.length > 0 ?\n    math.round(investments.reduce((accum, investment) => accum + investment.compoundData[`Year ${yearsToMature}`]['Month 12'].balance, 0), 2) :\n    0\n\n  const getAmountInvestedPerMonth = () => investments.length > 0 ?\n    investments.reduce((accum, investment) => accum + investment.monthlyContribution, 0) :\n    0\n\n  return (\n    <InvestmentContext.Provider value={{ drawDownPercent, saveDrawdown, investments, saveYearsToMature, yearsToMature, onItemSave, addInvestment, getAmountInvestedPerMonth, getTotalNetWorthInXYears, addMultipleInvestments, removeInvestment, editInvestment, getExpectedInterestIncomeInXYears }}>\n      {children}\n    </InvestmentContext.Provider>\n  )\n}\n\nexport const useInvestmentContext = () => {\n  const context = React.useContext(InvestmentContext);\n  if (context === undefined) {\n    throw new Error('useInvestmentContext must be used within InvestmentProvider');\n  }\n  return context;\n}\n","import React, { useState } from 'react';\n\nconst MobileContext = React.createContext({}); \n\nexport const MobileContextProvider = ({ children }) => {\n    const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n    const toggleMobileNav = (tog)=> {\n        setMobileNavOpen(tog)\n    }\n\n\treturn (\n\t\t<MobileContext.Provider value={{ isMobileNavOpen, toggleMobileNav }}>\n\t\t\t{children}\n\t\t</MobileContext.Provider>\n\t)\n}\n\nexport const useMobileContext = () => {\n\tconst context = React.useContext(MobileContext);\n\tif (context === undefined) {\n\t\tthrow new Error('useMobileContext must be used within MobileContextProvider');\n\t}\n\treturn context;\n}\n\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      dark: '#FFFFFF',\n      default: '#FFFFFF',\n      paper: '#FFFFFF'\n    },\n    primary: {\n      main: '#AC9CF8'\n    },\n    secondary: {\n      main: '#AC9CF8'\n    },\n    text: {\n      primary: '#AC9CF8',\n      secondary: '#4F5E71',\n      tertiary: '#FFFFFF'\n    },\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n  fontSize: 14,\n  fontWeightLight: 300,\n  fontWeightRegular: 400,\n  fontWeightMedium: 500,\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  \n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.tertiary\n  },\n  title: {\n    marginRight: 'auto',\n    color: theme.palette.text.tertiary\n  },\n  active: {\n    backgroundColor: '#867ABC',\n    color: theme.palette.text.tertiary,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    '& $icon': {\n      color: theme.palette.text.tertiary\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useState } from 'react';\nimport {\n    makeStyles,\n    MenuItem,\n    FormControl,\n    Select,\n    Button,\n    Typography,\n    Box\n} from '@material-ui/core';\nimport { useInvestmentContext } from '../../../context/InvestmentContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        width: \"100%\"\n    },\n    select: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.text.tertiary,\n      justifyContent: 'center',\n      width: \"100%\",\n      textAlign: 'center'\n    },\n    text: {\n      color: theme.palette.text.tertiary\n  }\n}));\n\nconst years = new Array(100).fill(0).map((_, i) => i + 1)\n\nexport const SelectYears = () => {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(false);\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const { saveYearsToMature, yearsToMature } = useInvestmentContext();\n\n    return (\n        <Box\n            display=\"flex\"\n            alignItems=\"center\">\n            <FormControl className={classes.formControl}>\n                <Typography\n                    align=\"center\"\n                    className={classes.text}\n                    gutterBottom\n                    variant=\"h5\"\n                >\n                    Predict Net Worth In\n                </Typography>\n                <Select\n                    className={classes.select}\n                    labelId=\"open-select-label\"\n                    id=\"open-select\"\n                    open={open}\n                    onClose={handleClose}\n                    onOpen={handleOpen}\n                    value={yearsToMature}\n                    onChange={e => saveYearsToMature(e.target.value)}\n                >\n                    {years.map((year) =>\n                        <MenuItem key={`${year}-Years`} className={classes.select} value={year}>{`${year} Years`}</MenuItem>\n                    )}\n                </Select>\n            </FormControl>\n        </Box>\n    )\n}","import React, { useState } from 'react';\nimport {\n    makeStyles,\n    MenuItem,\n    FormControl,\n    Select,\n    Typography,\n    Box\n} from '@material-ui/core';\nimport { useInvestmentContext } from '../../../context/InvestmentContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        width: \"100%\"\n    },\n    select: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.text.tertiary,\n        justifyContent: 'center',\n        width: \"100%\",\n        textAlign: 'center'\n    },\n    text: {\n        color: theme.palette.text.tertiary\n    }\n}));\n\nconst percentages = new Array(10).fill(0).map((_, i) => i + 1)\n\nexport const SelectDrawDown = () => {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(false);\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const { saveDrawdown, drawDownPercent } = useInvestmentContext();\n\n    return (\n        <Box\n            display=\"flex\"\n            alignItems=\"center\">\n            <FormControl className={classes.formControl}>\n                <Typography\n                    align=\"center\"\n                    className={classes.text}\n                    gutterBottom\n                    variant=\"h5\"\n                >\n                    Draw Down Percentage\n                </Typography>\n                <Select\n                    className={classes.select}\n                    labelId=\"open-select-label\"\n                    id=\"open-select\"\n                    open={open}\n                    onClose={handleClose}\n                    onOpen={handleOpen}\n                    value={drawDownPercent * 100}\n                    onChange={e => saveDrawdown(e.target.value)}\n                >\n                    {percentages.map((percent) =>\n                        <MenuItem key={percent} className={classes.select}  value={percent}>{`${percent}%`}</MenuItem>\n                    )}\n                </Select>\n            </FormControl>\n        </Box>\n    )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useInvestmentContext } from '../../../context/InvestmentContext'\nimport {\n  Box,\n  Grid,\n  Typography,\n  makeStyles,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n      color: theme.palette.text.tertiary\n  },\n  box: {\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\n\nconst ExpectedMonthlyIncome = () => {\n  const classes = useStyles();\n\n  const { getExpectedInterestIncomeInXYears, yearsToMature } = useInvestmentContext();\n\n  return (\n    <Box  className={classes.box} padding={3}>\n\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <Typography\n            align=\"center\"\n            className={classes.text}\n            gutterBottom\n            variant=\"h5\"\n          >\n            Expected Monthly Interest in {yearsToMature} Years\n        </Typography>\n        </Grid>\n        <Grid item>\n          <Typography\n            className={classes.text}\n            variant=\"h3\"\n          >\n            £{getExpectedInterestIncomeInXYears().toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Box >\n  );\n};\n\nExpectedMonthlyIncome.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ExpectedMonthlyIncome;\n","import React from 'react';\nimport {\n  Box,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport { useInvestmentContext } from '../../../context/InvestmentContext'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  box: {\n    backgroundColor: theme.palette.primary.main,\n  },\n    text: {\n    color: theme.palette.text.tertiary\n}\n}));\n\nconst NetWorthTotal = () => {\n  const classes = useStyles();\n\n  const { getTotalNetWorthInXYears, yearsToMature } = useInvestmentContext();\n\n  return (\n    <Box padding={3}  className={classes.box} >\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n      >\n        <Grid item>\n          <Typography\n            align=\"center\"\n            className={classes.text}\n            gutterBottom\n            variant=\"h5\"\n          >\n            Total Net Worth in {yearsToMature} Years\n            </Typography>\n        </Grid>\n        <Grid item>\n          <Typography\n            className={classes.text}\n            variant=\"h3\"\n          >\n            £{getTotalNetWorthInXYears().toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n          </Typography>\n        </Grid>\n      </Grid>\n      </Box>\n  );\n};\n\nexport default NetWorthTotal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport { useInvestmentContext } from '../../../context/InvestmentContext'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  box: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  text: {\n    color: theme.palette.text.tertiary\n}\n}));\n\nconst AmountInvestedPerMonth = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  const { getAmountInvestedPerMonth } = useInvestmentContext();\n\n  return (\n    <Box className={classes.box}  padding={3}>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n      >\n        <Grid item>\n          <Typography\n            align=\"center\"\n            className={classes.text}\n            variant=\"h5\"\n          >\n            Amount Invested Per Month\n            </Typography>\n        </Grid>\n        <Grid item>\n\n          <Typography\n            gutterBottom\n            className={classes.text}\n            variant=\"h3\"\n          >\n            £{getAmountInvestedPerMonth().toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nAmountInvestedPerMonth.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AmountInvestedPerMonth;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Drawer,\n  Hidden,\n  List,\n  makeStyles,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport {\n  BarChart as BarChartIcon,\n  TrendingUp,\n  DollarSign,\n  Download,\n  HelpCircle\n} from 'react-feather';\nimport NavItem from './NavItem';\nimport { SelectYears } from './SelectYears'\nimport { SelectDrawDown } from './SelectDrawDown'\n\nimport ExpectedMonthlyIncome from '../../../views/dashboard/DashboardView/ExpectedMonthlyIncome';\nimport NetWorthTotal from '../../../views/dashboard/DashboardView/NetWorthTotal';\nimport AmountInvested from '../../../views/dashboard/DashboardView/AmountInvestedPerMonth';\n\n\nconst items = [\n  {\n    href: '/app/salary-calculator',\n    icon: DollarSign,\n    title: 'Salary Calculator'\n  },\n  {\n    href: '/app/budget',\n    icon: Download,\n    title: 'Budget'\n  },\n\n  {\n    href: '/app/investments',\n    icon: TrendingUp,\n    title: 'Investments'\n  },\n  {\n    href: '/app/dashboard',\n    icon: BarChartIcon,\n    title: 'Dashboard'\n  },\n  {\n    href: '/app/help',\n    icon: HelpCircle,\n    title: 'Help'\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  mobileDrawer: {\n    width: 256,\n    backgroundColor: theme.palette.primary.main\n  },\n  desktopDrawer: {\n    width: 256,\n    backgroundColor: theme.palette.primary.main,\n  }\n}));\n\n\nconst NavBar = ({ onMobileClose, openMobile }) => {\n  const location = useLocation();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n\n    <Box p={1}>\n      <List>\n        {items.map((item, i) => (\n          <NavItem\n            href={item.href}\n            key={item.title}\n            title={item.title}\n            icon={item.icon}\n            selected={location.pathname === item.href}\n          />\n        ))}\n      </List>\n     \n      <Box mt={2}>\n\n      <Grid\n        spacing={3}\n        container\n        direction=\"column\"\n        justify=\"flex-end\"\n        alignItems=\"stretch\"\n      >\n        <Grid item>\n          <SelectYears/>\n        </Grid>\n        <Grid item>\n          <SelectDrawDown/>\n        </Grid>\n          <Grid\n            item >\n            <ExpectedMonthlyIncome />\n\n          </Grid>\n          <Grid\n            item >\n            <NetWorthTotal />\n\n          </Grid>\n          <Grid\n            item >\n            <AmountInvested />\n          </Grid>\n      </Grid>\n    </Box>\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          elevation={12}\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Drawer\n          elevation={12}\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => { },\n  openMobile: false\n};\n\nexport default NavBar;\n","import React from 'react';\nimport NavBar from './NavBar';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport { useMobileContext } from '../../context/MobileContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst DashboardLayout = () => {\n  const classes = useStyles();\n  const {\n    isMobileNavOpen, toggleMobileNav\n  } = useMobileContext();\n\n  return (\n    <div className={classes.root}>\n      <NavBar\n        onMobileClose={() => toggleMobileNav(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Toolbar,\n  makeStyles,\n  Typography,\n  Box,\n  Hidden,\n  IconButton\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useMobileContext } from '../../context/MobileContext';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  toolbar: {\n    backgroundColor: theme.palette.background.default\n  },\n  text: {\n    color: theme.palette.text.primary\n  },\n  button: {\n    marginLeft: 'auto',\n    color: theme.palette.text.primary\n  }\n}));\n\nconst TopBar = ({ className, header, ...rest }) => {\n  const classes = useStyles();\n\n  const {\n    isMobileNavOpen, toggleMobileNav\n  } = useMobileContext();\n\n\n  return (\n    <>\n      <AppBar\n        className={clsx(classes.root, className)}\n        elevation={0}\n        {...rest}\n      >\n        <Toolbar className={classes.toolbar}>\n          <Hidden mdDown>\n\n            <Box mt={3} ml={32}>\n              <Typography\n                className={classes.text}\n                align=\"left\"\n                gutterBottom\n                variant=\"h1\"\n              >\n                {header}\n              </Typography>\n            </Box>\n          </Hidden>\n\n          <Hidden lgUp>\n\n            <Box display='flex' flexGrow={1} mt={3}>\n              <Typography\n                className={classes.text}\n                align=\"left\"\n                gutterBottom\n                variant=\"h1\"\n              >\n                {header}\n              </Typography>\n\n                <IconButton\n                  className={classes.button}\n                  color=\"inherit\"\n                  onClick={() => toggleMobileNav(!isMobileNavOpen)}\n                >\n                  <MenuIcon fontSize=\"large\" className={classes.button} />\n                </IconButton>\n            </Box>\n          </Hidden>\n\n        </Toolbar>\n      </AppBar>\n      <Box mt={7} />\n    </>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopBar;\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst MainLayout = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TopBar />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainLayout;\n","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport {\n  Box,\n  Typography,\n  Grid,\n  makeStyles,\n  Button,\n  TextField,\n  InputAdornment\n} from '@material-ui/core';\nimport { Formik, Form, useField } from \"formik\";\nimport { string, number, object } from \"yup\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  text: {\n    color: theme.palette.text.secondary\n  },\n  input: {\n    color: theme.palette.text.tertiary,\n  },\n  error: {\n    color: 'red'\n  },\n  button: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.tertiary,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n}))\n\nconst Input = ({ label, inputProps, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  const classes = useStyles();\n\n  return (\n    <>\n      <TextField\n        label={label}\n        className=\"text-input\"\n        variant=\"outlined\"\n        required\n        fullWidth\n        InputProps={{\n          className: classes.text,\n          ...inputProps\n        }}\n        {...field} {...props} />\n      {meta.touched && meta.error ? (\n         <Typography\n         className={classes.error}\n         align=\"center\"\n         gutterBottom\n         variant=\"body1\"\n       >\n         Please only use numbers\n       </Typography>\n      ) : null}\n    </>\n  );\n};\n\n\nexport const AddInvestment = ({ className, addInvestment, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Box mt={3}>\n\n      <Formik\n        initialValues={{\n          name: \"\",\n          initialAmount: \"\",\n          expectedReturn: \"\",\n          monthlyContribution: \"\"\n        }}\n        validationSchema={object({\n          name: string(),\n          initialAmount: number(),\n          expectedReturn: number(),\n          monthlyContribution: number()\n\n        })}\n        onSubmit={(investment, { setSubmitting, resetForm }) => {\n          addInvestment(investment)\n          resetForm({})\n          setSubmitting(false);\n        }}\n      >\n        <Form>\n          <Grid\n            container\n            justify=\"space-evenly\"\n            spacing={3}\n          >\n            <Grid\n              item\n              lg={6}\n              md={6}\n              xs={12}\n            >\n              <Input\n                label=\"Investment Name\"\n                name=\"name\"\n                type=\"text\"\n              />\n            </Grid>\n\n            <Grid\n              item\n              lg={6}\n              md={6}\n              xs={12}\n            >\n              <Input\n                label=\"Current Value\"\n                name=\"initialAmount\"\n                type=\"text\"\n                inputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <Typography >\n                        £\n                        </Typography>\n                    </InputAdornment>)\n                }}\n              />\n            </Grid>\n            <Grid\n              item\n              lg={6}\n              md={6}\n              xs={12}\n            >\n              <Input\n                label=\"Annual Return\"\n                name=\"expectedReturn\"\n                type=\"text\"\n                inputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <Typography >\n                        %\n                        </Typography>\n                    </InputAdornment>)\n                }}\n              />\n            </Grid>\n\n            <Grid\n              item\n              lg={6}\n              md={6}\n              xs={12}\n            >\n              <Input\n                label=\"Monthly Contribution\"\n                name=\"monthlyContribution\"\n                type=\"text\"\n                inputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <Typography >\n                        £\n                        </Typography>\n                    </InputAdornment>)\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} >\n              <Button\n                className={classes.button}\n                color=\"primary\"\n                fullWidth\n                variant=\"text\"\n                type=\"submit\">Add</Button>\n            </Grid>\n\n          </Grid>\n        </Form>\n      </Formik>\n    </Box>\n  );\n};\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Typography,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    IconButton,\n    TextField,\n    makeStyles,\n    InputAdornment\n} from '@material-ui/core';\nimport { DeleteOutlined, Edit, EditOutlined, SaveOutlined, Save } from '@material-ui/icons';\nimport { Formik, useField } from \"formik\";\nimport { string, number, object } from \"yup\";\nimport { all, create } from 'mathjs'\n\nconst math = create(all, {\n    number: 'BigNumber',\n    precision: 32\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    input: {\n        color: theme.palette.text.secondary,\n    },\n    header: {\n        color: theme.palette.text.primary\n    },\n    tableCell: {\n        color: theme.palette.text.secondary\n    },\n    error: {\n        color: 'red'\n      },\n}));\n\n\nconst Input = ({ label, inputProps, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input> and alse replace ErrorMessage entirely.\n    const [field, meta] = useField(props);\n    const classes = useStyles();\n\n    return (\n        <>\n            <TextField\n                label={label}\n                className=\"text-input\"\n                variant=\"standard\"\n                required\n                fullWidth\n                InputProps={{\n                    className: classes.input,\n                    ...inputProps\n                }}\n                {...field} {...props} />\n            {meta.touched && meta.error ? (\n                 <Typography\n                 className={classes.error}\n                 align=\"center\"\n                 gutterBottom\n                 variant=\"body1\"\n               >\n                 Please only use numbers\n               </Typography>\n            ) : null}\n        </>\n    );\n};\n\n\nexport const InvestmentList = memo(({ className, items = [], onItemEdit, onItemRemove, onItemSave, onItemCheck, ...rest }) => {\n    const classes = useStyles();\n\n    return (\n        <Box\n            mt={3}\n        >\n\n            <Typography\n                align=\"left\"\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h2\"\n            >\n                Assets\n                    </Typography>\n\n            <Box mt={3}>\n                <TableContainer>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.tableCell} align=\"center\"></TableCell>\n                                <TableCell className={classes.tableCell} align=\"center\">Name</TableCell>\n                                <TableCell className={classes.tableCell} align=\"center\">Initial Amount</TableCell>\n                                <TableCell className={classes.tableCell} align=\"center\">Expected Annual Return</TableCell>\n                                <TableCell className={classes.tableCell} align=\"center\">Monthly Contribution</TableCell>\n                                <TableCell className={classes.tableCell} align=\"center\">Annual Charge</TableCell>\n                                <TableCell />\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {items.map((investment, idx) =>\n                                investment.editMode ? (\n                                    <Formik\n                                        key={`form-${idx}`}\n                                        initialValues={{\n                                            name: investment.name,\n                                            initialAmount: investment.initialAmount,\n                                            expectedReturn: math.round(math.multiply(investment.expectedReturn, 100), 2),\n                                            monthlyContribution: investment.monthlyContribution,\n                                            annualCharge: math.round(math.multiply(investment.annualCharge, 100), 2)\n                                        }}\n                                        validationSchema={object({\n                                            name: string(),\n                                            initialAmount: number(),\n                                            expectedReturn: number(),\n                                            monthlyContribution: number(),\n                                            annualCharge: number()\n                                        })}\n                                        onSubmit={(investment, { setStatus }) => {\n                                            setStatus()\n                                            onItemSave(investment, idx)\n                                        }}\n                                    >{({ submitForm }) => (\n                                        <TableRow key={idx}>\n                                            <TableCell align=\"center\">\n                                                <Save onClick={submitForm} >\n                                                    <SaveOutlined />\n                                                </Save>\n                                            </TableCell>\n                                            <TableCell align=\"center\" >\n                                                <Input\n                                                    label=\"Investment Name\"\n                                                    name=\"name\"\n                                                    type=\"text\"\n                                                />\n                                            </TableCell>\n                                            <TableCell align=\"center\" >\n                                                <Input\n                                                    label=\"Current Value\"\n                                                    name=\"initialAmount\"\n                                                    type=\"text\"\n                                                    inputProps={{\n                                                        startAdornment: (\n                                                            <InputAdornment position=\"start\">\n                                                                <Typography >\n                                                                    £\n                                                                    </Typography>\n                                                            </InputAdornment>)\n                                                    }}\n                                                />\n                                            </TableCell>\n                                            <TableCell align=\"center\" >\n                                                <Input\n                                                    label=\"Annual Return\"\n                                                    name=\"expectedReturn\"\n                                                    type=\"text\"\n                                                    inputProps={{\n                                                        endAdornment: (\n                                                            <InputAdornment position=\"end\">\n                                                                <Typography >\n                                                                    %\n                                                                    </Typography>\n                                                            </InputAdornment>)\n                                                    }}\n                                                />\n                                            </TableCell>\n                                            <TableCell align=\"center\" >\n                                                <Input\n                                                    label=\"Monthly Contribution\"\n                                                    name=\"monthlyContribution\"\n                                                    type=\"text\"\n                                                    inputProps={{\n                                                        startAdornment: (\n                                                            <InputAdornment position=\"start\">\n                                                                <Typography >\n                                                                    £\n                                                                    </Typography>\n                                                            </InputAdornment>)\n                                                    }}\n                                                />\n                                            </TableCell>\n                                            <TableCell align=\"center\" >\n                                                <Input\n                                                    label=\"Annual Charge\"\n                                                    name=\"annualCharge\"\n                                                    type=\"text\"\n                                                    inputProps={{\n                                                        endAdornment: (\n                                                            <InputAdornment position=\"end\">\n                                                                <Typography >\n                                                                    %\n                                                                    </Typography>\n                                                            </InputAdornment>)\n                                                    }}\n                                                />\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                <IconButton aria-label=\"Delete Item\" onClick={() => onItemRemove(idx)}>\n                                                    <DeleteOutlined />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    )}\n                                    </Formik>\n\n                                ) : (\n                                        <TableRow key={idx}>\n                                            <TableCell align=\"center\">\n                                                <Edit onClick={() => onItemEdit(idx)}>\n                                                    <EditOutlined />\n                                                </Edit>\n                                            </TableCell>\n                                            <TableCell className={classes.tableCell} align=\"center\" >\n                                                {investment.name}\n                                            </TableCell>\n                                            <TableCell className={classes.tableCell} align=\"center\" >\n                                                £{investment.initialAmount}\n                                            </TableCell>\n                                            <TableCell className={classes.tableCell} align=\"center\" >\n                                                {math.round(math.multiply(investment.expectedReturn, 100), 2)}%\n                                            </TableCell>\n                                            <TableCell className={classes.tableCell} align=\"center\" >\n                                                £{investment.monthlyContribution}\n                                            </TableCell>\n                                            <TableCell className={classes.tableCell} align=\"center\" >\n                                                {math.round(math.multiply(investment.annualCharge, 100), 2)}%\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                <IconButton aria-label=\"Delete Item\" onClick={() => onItemRemove(idx)}>\n                                                    <DeleteOutlined />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Box>\n        </Box >\n    )\n})\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Typography,\n  makeStyles,\n} from '@material-ui/core';\nimport { useInvestmentContext } from '../../../context/InvestmentContext';\nimport { AddInvestment } from './AddInvestment'\nimport { InvestmentList } from './InvestmentList'\nimport TopBar from '../../../layouts/MainLayout/TopBar.js'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  text: {\n    color: theme.palette.text.primary\n  },\n  header: {\n    color: theme.palette.text.primary\n  },\n}));\n\nconst Investments = ({ className, ...rest }) => {\n\n  const { onItemSave, editInvestment, removeInvestment, investments, addInvestment } = useInvestmentContext();\n  const classes = useStyles()\n\n  return (\n    <div\n      className={clsx(className)}\n      {...rest}\n    >\n      <TopBar header=\"Investments\" />\n      <Typography\n        gutterBottom\n        variant=\"body1\"\n      >\n        Add your investments\n        </Typography>\n\n      <Box mt={3}>\n        <AddInvestment addInvestment={addInvestment} />\n        {investments.length > 0 && (\n          <InvestmentList onItemSave={onItemSave} onItemEdit={editInvestment} onItemRemove={removeInvestment} items={investments} />\n        )}\n      </Box>\n\n    </div>\n  );\n};\n\nInvestments.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Investments;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles,\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Investments from './Investments';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Index = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Investments\"\n    >\n      <Container maxWidth={false}>\n        <Investments />\n      </Container>\n    </Page>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Grid,\n    Typography,\n    colors,\n    makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100%'\n    },\n    avatar: {\n        backgroundColor: colors.red[600],\n        height: 56,\n        width: 56\n    },\n    differenceIcon: {\n        color: colors.red[900]\n    },\n    differenceValue: {\n        color: colors.red[900],\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst MonthlyTakeHomeCard = ({ className, expensesCost, totalTakeHome, difference, ...rest }) => {\n    const classes = useStyles();\n\n    return (\n\n        <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n        >\n            <CardContent>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"space-between\"\n                    spacing={3}\n                >\n                    <Grid item>\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h5\"\n                        >\n                            Monthly Net Income\n                                </Typography>\n                        <Typography\n                            color=\"textPrimary\"\n                            variant=\"h3\"\n                        >\n                            £{totalTakeHome}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h5\"\n                        >\n                            Total Expenses\n                                </Typography>\n                        <Typography\n                            color=\"textPrimary\"\n                            variant=\"h3\"\n                        >\n                            £{expensesCost}\n                        </Typography>\n                    </Grid>\n\n                    <Grid item>\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h5\"\n                        >\n                            Amount Left Over\n                                </Typography>\n                        <Typography\n                            color=\"textPrimary\"\n                            variant=\"h3\"\n                        >\n                            £{difference}\n                        </Typography>\n                    </Grid>\n\n                </Grid>\n                <Box\n                    mt={2}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                >\n                </Box>\n            </CardContent>\n        </Card>\n    );\n};\n\nMonthlyTakeHomeCard.propTypes = {\n    className: PropTypes.string\n};\n\nexport default MonthlyTakeHomeCard;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  makeStyles,\n  Typography,\n  Divider,\n  Box,\n  InputAdornment,\n  TextField,\n  Grid,\n  Button\n} from '@material-ui/core';\nimport { Formik, Form, useField } from \"formik\";\nimport { string, number, object } from \"yup\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  text: {\n    color: theme.palette.text.secondary\n  },\n  input: {\n    color: theme.palette.text.tertiary,\n  },\n  error: {\n    color: 'red'\n  },\n  button: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.tertiary,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n}))\n\nconst Input = ({ label, type, inputProps, ...props }) => {\n  const [field, meta] = useField(props);\n  const classes = useStyles();\n  return (\n    <>\n      <TextField\n        type={type}\n        label={label}\n        className={classes.input}\n        variant=\"outlined\"\n        required\n        fullWidth\n        InputProps={{\n          className: classes.text,\n          ...inputProps\n        }}\n        {...field} {...props} />\n      {meta.touched && meta.error ? (\n      <div className=\"error\">\n      <Typography\n        className={classes.error}\n        align=\"center\"\n        gutterBottom\n        variant=\"body1\"\n      >\n        Please only use numbers\n      </Typography>\n\n    </div>\n      ) : null}\n    </>\n  );\n};\n\nconst Expenses = ({ className, addExpense, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box >\n        <Formik\n          initialValues={{\n            name: \"\",\n            cost: \"\"\n          }}\n          validationSchema={object({\n            name: string(),\n            cost: number(),\n          })}\n          onSubmit={(expense, { setSubmitting, resetForm }) => {\n            addExpense(expense)\n            resetForm({})\n            setSubmitting(false);\n          }}\n        >\n          <Form>\n            <Grid\n  justify=\"space-between\"\n  container\n              spacing={3}\n            >\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Input\n                  label=\"Expense Name\"\n                  name=\"name\"\n                  type=\"text\"\n                />\n              </Grid>\n\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Input\n                  label=\"Expense cost\"\n                  name=\"cost\"\n                  type=\"tel\"\n                  inputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Typography >\n                          £\n                      </Typography>\n                      </InputAdornment>)\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n              <Button\n                color=\"primary\"\n                className={classes.button}\n                fullWidth\n                variant=\"text\"\n                type=\"submit\">ADD</Button>\n            </Grid>\n              </Grid>\n              \n          </Form>\n        </Formik>\n      </Box>\n    </div>\n  );\n};\n\nExpenses.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Expenses;\n","import React, { memo } from 'react';\nimport {\n    Box,\n    makeStyles,\n    Typography,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    IconButton,\n    Checkbox\n} from '@material-ui/core';\nimport DeleteOutlined from '@material-ui/icons/DeleteOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    header: {\n      color: theme.palette.text.primary\n    },\n    tableCell: {\n        color: theme.palette.text.secondary\n    }\n  }));\n\nconst ExpenseList = memo(({ className, items = [], onItemRemove, onItemCheck, ...rest }) => {\n    \n    const classes = useStyles();\n\n    return (\n        <Box\n            mt={3}\n        >\n\n            <Typography\n                align=\"left\"\n                className={classes.header}\n                gutterBottom\n                variant=\"h2\"\n            >\n                Expenses\n                    </Typography>\n\n            <Box  \n            boxShadow={3}\n            p={2} \n            mt={3}>\n                <TableContainer>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.tableCell} align=\"left\">Include?</TableCell>\n                                <TableCell className={classes.tableCell} align=\"center\">Name</TableCell>\n                                <TableCell className={classes.tableCell} align=\"center\">Cost</TableCell>\n                                <TableCell className={classes.tableCell} align=\"center\">Remove</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {items.map((expense, idx) => (\n                                <TableRow key={idx}>\n                                    <TableCell align=\"center\" padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={() => onItemCheck(idx)}\n                                            checked={expense.checked}\n                                        />\n                                    </TableCell>\n                                    <TableCell className={classes.tableCell} align=\"center\" >\n                                        {expense.name}\n                                    </TableCell>\n                                    <TableCell className={classes.tableCell} align=\"center\" >\n                                        £{expense.cost}\n                                    </TableCell>\n                                    <TableCell className={classes.tableCell} align=\"center\">\n                                        <IconButton aria-label=\"Delete Item\" onClick={() => onItemRemove(idx)}>\n                                            <DeleteOutlined />\n                                        </IconButton>\n                                    </TableCell>\n\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Box>\n\n        </Box>\n    )\n});\nexport default ExpenseList;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  makeStyles,\n  Typography,\n  Grid,\n  Divider\n} from '@material-ui/core';\nimport MonthlyTakeHomeCard from './MonthlyTakeHomeCard'\nimport AddExpenses from './AddExpenses'\nimport ExpenseList from './ExpenseList'\nimport { useSalaryContext } from '../../../context/SalaryContext';\nimport { useBudgetContext } from '../../../context/BudgetContext';\nimport { all, create } from 'mathjs'\nimport TopBar from '../../../layouts/MainLayout/TopBar.js'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  text: {\n    color: theme.palette.text.primary\n  },\n  header: {\n    color: theme.palette.text.primary\n  },\n}));\n\nconst ExpenseHeaderCard = ({ className, ...rest }) => {\n  const { userTax } = useSalaryContext();\n  const {\n    expenses,\n    addExpense,\n    checkExpense,\n    removeExpense,\n    expenseTotal\n  } = useBudgetContext();\n\n  const [takeHome, setTakeHome] = useState({\n    totalTakeHome: 0,\n    difference: 0,\n    expensesCost: 0,\n  });\n\n  const totalTakeHome = userTax.totalTakeHome || 0\n\n  useEffect(() => {\n    setTakeHome((prevState) => ({\n      ...prevState,\n      totalTakeHome: math.round(math.divide(totalTakeHome, 12), 2),\n      difference: math.round(math.subtract(math.divide(totalTakeHome, 12), expenseTotal), 2),\n      expensesCost: expenseTotal,\n    }))\n    // subscribe to changes in userTax and expense total to trigger effect\n  }, [userTax, expenseTotal]);\n\n  const classes = useStyles()\n\n\n  return (\n    <div\n      className={clsx(className)}\n      {...rest}\n    >\n      <TopBar header=\"Budget\" />\n      <Typography\n        gutterBottom\n        variant=\"body1\"\n      >\n        List Your Monthly Expenses\n        </Typography>\n      <Box mt={3}>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={6}\n            sm={6}\n            xl={6}\n            xs={6}\n          >\n            <AddExpenses\n              addExpense={addExpense}\n            />\n            {expenses.length > 0 && (\n              <ExpenseList\n                items={expenses}\n                onItemCheck={idx => checkExpense(idx)}\n                onItemRemove={idx => removeExpense(idx)}\n              />\n            )}\n          </Grid>\n\n          <Grid\n            item\n            lg={6}\n            sm={6}\n            xl={6}\n            xs={6}\n          >\n            <MonthlyTakeHomeCard {...takeHome} />\n          </Grid>\n        </Grid>\n      </Box>\n\n    </div>\n  );\n};\n\nExpenseHeaderCard.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ExpenseHeaderCard;\n","import React from 'react';\nimport {\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Budget from './Budget'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Index = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Budget\"\n    >\n      <Container maxWidth={false}>\n          <Budget />\n      </Container>\n    </Page>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport { useSalaryContext } from 'src/context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst TakeHomeIncome = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  const {\n    userTax: { totalTakeHome = 0 },\n  } = useSalaryContext();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"h6\"\n              >\n              Annual Take Home Pay\n            </Typography>\n            </Grid>\n\n            <Grid item> \n            <Typography\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"h3\"\n            >\n              £{totalTakeHome.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n          </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n\n  );\n};\n\nTakeHomeIncome.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TakeHomeIncome;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nimport {\n  AreaChart, Area, XAxis, YAxis, ResponsiveContainer, Tooltip, CartesianGrid, Legend\n} from 'recharts';\n\nimport {\n  Box,\n  Card,\n  useTheme,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\n\nconst colours = ['#1B005A', '#7543E8', '#8956FF', '#8049FF', '#1B005A', '#7543E8', '#8956FF', '#8049FF' ]\n\nconst Text = ({ item }) => {\n  const useStyles = makeStyles(theme => ({\n    typography: {\n      color: item.stroke\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Typography\n      className={classes.typography}\n      variant=\"h5\"\n    >\n      {`${item.dataKey}: £${item.value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`}\n    </Typography>\n  )\n}\n\nconst ToolTip = props => (props.active) ? (\n  <Card className={clsx(props.classes.root)}>\n    <Box p={1} m={1} >\n\n      <Typography\n        align=\"center\"\n        color=\"textSecondary\"\n        variant=\"h5\"\n        gutterBottom\n      >\n        {props.label}\n\n      </Typography>\n      {props.payload.map((item, i) =>\n        <Box key={i}>\n          <Text item={item} />\n        </Box>\n      )}\n\n      <Box >\n        <Text item={{ dataKey: 'Total', value: props.payload.reduce((a, b) => a + b.value, 0).toFixed(2) }} />\n      </Box>\n    </Box>\n  </Card>\n) : null\n\nconst NetWorth = ({ investmentData, className, ...rest }) => {\n  const useStyles = makeStyles((theme) => ({\n    root: {},\ntext: {\n      color: theme.palette.text.secondary\n    },    \n    }));\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return investmentData.length > 0 && (\n    <Box  p={2}  >\n\n      <Typography\n        align=\"center\"\n        className={classes.text}\n        gutterBottom\n        variant=\"h4\"\n      >\n        Net Worth Over Time\n        </Typography>\n        <Box \n          mt={3}\n          height={300}\n          position=\"relative\"\n        >\n          <ResponsiveContainer width={\"100%\"} height=\"100%\">\n            <AreaChart\n              syncId=\"year\"\n              data={investmentData}\n              margin={{\n                top: 0, right: 35, left: 35, bottom: 0,\n              }}\n            >\n              <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\n\n\n              <XAxis dataKey=\"year\" style={{ fontFamily: theme.typography.fontFamily }} />\n              <YAxis tickFormatter={amount => `£${amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`} style={{ fontFamily: theme.typography.fontFamily }} />\n              <Tooltip content={<ToolTip classes={classes} />} />\n              {\n                Object.keys(investmentData[0])\n                  .filter(key => key !== 'year')\n                  .map((investmentType, i) =>\n                    <Area\n                      key={`${investmentType}-${i}`}\n                      type=\"monotone\"\n                      dataKey={investmentType}\n                      stackId='1'\n                      stroke={colours[i]}\n                      fill={colours[i]}\n                    />\n                  )}\n            </AreaChart>\n          </ResponsiveContainer>\n\n        </Box>\n      {/* <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button>\n      </Box> */}\n    </Box>\n  );\n};\n\nNetWorth.propTypes = {\n  className: PropTypes.string\n};\n\nexport default NetWorth;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nimport {\n  LineChart, Line, XAxis, YAxis, ResponsiveContainer, Tooltip, CartesianGrid, Legend\n} from 'recharts';\n\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  Typography,\n  Grid\n} from '@material-ui/core';\n\nconst colours = ['#7543E8', '#1B005A']\n\nconst Text = ({ item, drawDownPercent }) => {\n  const useStyles = makeStyles(theme => ({\n    typography: {\n      color: item.color\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Typography\n      className={classes.typography}\n      variant=\"h5\"\n      gutterBottom\n    >\n      {item.dataKey === \"Income From Draw Down\" ? `Expected Monthly Income from ${drawDownPercent * 100}% Draw Down` : item.dataKey}\n    </Typography>\n  )\n}\n\nconst TextBox = ({ item, drawDownPercent }) => {\n  const useStyles = makeStyles(theme => ({\n    typography: {\n      color: item.color\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Typography\n      className={classes.typography}\n      variant=\"h5\"\n      gutterBottom\n    >\n      {item.dataKey === \"Income From Draw Down\" ?\n        `Expected Monthly Income from ${drawDownPercent * 100}% Draw Down: £${item.value}` :\n        `Expenses Cost: £${item.value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`}\n    </Typography>\n  )\n}\n\n\nconst LegendBox = props => (\n  <Box>\n    <Grid spacing={3}\n      justify=\"space-evenly\"\n      alignItems=\"stretch\"\n      container>\n\n      {props.payload.map((item, i) =>\n        <Grid\n          key={i}\n          item\n        >\n\n          <Box >\n            <Text drawDownPercent={props.drawDownPercent} item={item} />\n          </Box>\n        </Grid>\n      )}\n    </Grid>\n  </Box>\n)\n\nconst ToolTipBox = props => (props.active) ? (\n  <Card className={clsx(props.classes.root)}>\n    <Box p={1} m={1} >\n\n      <Typography\n        align=\"center\"\n        color=\"textSecondary\"\n        variant=\"h5\"\n        gutterBottom\n      >\n        {props.label}\n\n      </Typography>\n      {props.payload.map((item, i) =>\n        <Box key={i}>\n          <TextBox drawDownPercent={props.drawDownPercent} item={item} />\n        </Box>\n      )}\n    </Box>\n  </Card>\n) : null\n\n\n\nconst Fire = ({ fireData, drawDownPercent, ...rest }) => {\n  const useStyles = makeStyles((theme) => ({\n    root: {},\n    text: {\n      color: theme.palette.text.secondary\n    },\n  }));\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return fireData.length > 0 && (\n    <Box p={2}  >\n      <Typography\n        align=\"center\"\n        className={classes.text}\n        gutterBottom\n        variant=\"h4\"\n      >\n        Retiring In\n        </Typography>\n      <Box\n        mt={3}\n        height={300}\n        position=\"relative\"\n      >\n        <ResponsiveContainer width={\"100%\"} height=\"100%\">\n          <LineChart\n            syncId=\"year\"\n            data={fireData}\n            margin={{\n              top: 0, right: 35, left: 35, bottom: 0,\n            }}\n          >\n            <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\n\n            <XAxis dataKey=\"year\" style={{ fontFamily: theme.typography.fontFamily }} />\n            <YAxis tickFormatter={amount => `£${amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`} style={{ fontFamily: theme.typography.fontFamily }} />\n            <Legend content={<LegendBox drawDownPercent={drawDownPercent} classes={classes} />} />\n\n            <Tooltip content={<ToolTipBox drawDownPercent={drawDownPercent} classes={classes} />} />\n\n\n            {\n              Object.keys(fireData[0])\n                .filter(key => key !== 'year')\n                .map((investmentType, i) =>\n                  <Line\n                    key={`${investmentType}-${i}`}\n                    type=\"monotone\"\n                    dataKey={investmentType}\n                    stackId='1'\n                    stroke={colours[i]}\n                    fill={colours[i]}\n                  />\n                )}\n          </LineChart>\n        </ResponsiveContainer>\n\n      </Box>\n    </Box>\n  );\n};\n\nFire.propTypes = {\n  classyear: PropTypes.string\n};\n\nexport default Fire;\n","\n\nexport const convertCompoundDataToGraph = investments =>\n  investments.reduce((accum, investment) => {\n    for (const [year, months] of Object.entries(investment.compoundData)) {\n      let isYearInAccum = accum.find(entry => entry.year === year)\n      \n      if (isYearInAccum) {\n        isYearInAccum[investment.name] = months['Month 12'].balance\n      } else {\n        accum.push({\n          year,\n          [investment.name]: months['Month 12'].balance,\n        })\n      }\n    }\n\n    return accum\n  }, [])\n\n","import { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nexport const convertInvestmentDataToFire = (investments, drawdownPercent, expenseTotal) =>\n  investments.reduce((accum, investment,) => {\n\n    for (const [year, months] of Object.entries(investment.compoundData)) {\n      let isYearInAccum = accum.find(entry => entry.year === year)\n      const incomeToAdd = math.chain(months['Month 12'].balance).multiply(drawdownPercent).divide(12).round(2).done()\n\n      if (isYearInAccum) {\n        isYearInAccum['Income From Draw Down'] = math.round(math.add(isYearInAccum['Income From Draw Down'], incomeToAdd),2)\n      } else {\n        accum.push({\n          year,\n          Expenses: expenseTotal,\n          'Income From Draw Down': math.round(incomeToAdd,2)\n        })\n      }   \n    }\n    \n    return accum\n  }, [])\n\n\n  // investment.compoundData[`Year ${yearsToMature}`]['Month 12'].balance\n","import React from 'react';\nimport {\n  Typography,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport TakeHomeIncome from './TakeHomeIncome';\nimport NetWorth from './NetWorth';\nimport Fire from './Fire'\nimport TasksProgress from './NetWorthTotal';\nimport AmountInvestedPerMonth from './AmountInvestedPerMonth';\nimport TotalProfit from './ExpectedMonthlyIncome';\nimport { useInvestmentContext } from '../../../context/InvestmentContext';\nimport { useBudgetContext } from '../../../context/BudgetContext';\nimport { convertCompoundDataToGraph } from '../../../utils/convertCompoundDataToGraph';\nimport { convertInvestmentDataToFire } from '../../../utils/convertInvestmentDataToFire';\nimport TopBar from '../../../layouts/MainLayout/TopBar.js'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  text: {\n    color: theme.palette.text.primary\n  },\n  header: {\n    color: theme.palette.text.primary\n  },\n}));\n\nconst Dashboard = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  const { investments, drawDownPercent } = useInvestmentContext();\n  const { expenseTotal } = useBudgetContext();\n\n  return (\n    <div\n      className={clsx(className)}\n      {...rest}\n    >\n      <TopBar header=\"Dashboarding\" />\n\n      <Typography\n        gutterBottom\n        variant=\"body1\"\n      >\n        Predict how your investments will mature over time\n        </Typography>\n\n      <Grid\n        container\n        spacing={3}\n      >\n        <Grid\n          item\n          lg={9}\n          md={12}\n          xl={9}\n          xs={12}\n        >\n          <NetWorth investmentData={convertCompoundDataToGraph(investments)} />\n        </Grid>\n        <Grid\n          xs={12}\n          md={12}\n          lg={3}\n          xl={3}\n          item\n          container\n          spacing={3}\n          justify=\"space-evenly\"\n          alignItems=\"stretch\"\n        >\n          <Grid\n            item\n            xs={12}\n            md={6}\n            lg={12}\n          >\n            <AmountInvestedPerMonth />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            md={6}\n            lg={12}\n          >\n            <TasksProgress />\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            md={6}\n            lg={12}\n          >\n            <TotalProfit />\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          lg={9}\n          md={12}\n          xl={9}\n          xs={12}\n        >\n          <Fire drawDownPercent={drawDownPercent} fireData={convertInvestmentDataToFire(investments, drawDownPercent, expenseTotal)} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport {\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Dashboard from './Dashboard';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Index = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard\"\n    >\n      <Container maxWidth={false}>\n        \n      <Dashboard/>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Index;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  InputLabel,\n  Select,\n  Button,\n  Card,\n  MenuItem,\n  CardContent,\n  TextField,\n  InputAdornment,\n  Typography,\n  makeStyles,\n  Grid,\n  Divider\n} from '@material-ui/core';\nimport { Formik, Form, useField, ErrorMessage, Field } from \"formik\";\nimport { number, object } from \"yup\";\nimport { useInvestmentContext } from '../../../context/InvestmentContext';\nimport { all, create } from 'mathjs'\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  text: {\n    color: theme.palette.text.secondary\n  },\n  button: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.tertiary,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  error: {\n    color: 'red'\n  },\n  input: {\n    color: theme.palette.text.tertiary,\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Input = ({ label, type, inputProps, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  const classes = useStyles();\n\n  return (\n    <>\n      <TextField\n        type={type}\n        label={label}\n        className={classes.input}\n        variant=\"outlined\"\n        required\n        fullWidth\n        InputProps={{\n          className: classes.text,\n          ...inputProps\n        }}\n        {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">\n          <Typography\n            className={classes.error}\n            align=\"center\"\n            gutterBottom\n            variant=\"body1\"\n          >\n            Please only use numbers\n          </Typography>\n\n        </div>\n      ) : null}\n    </>\n  );\n};\n\n\nconst IncomeDetails = ({ setUserFinances, userTax, className, ...rest }) => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const { addMultipleInvestments } = useInvestmentContext();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography\n        align=\"left\"\n        gutterBottom\n        variant=\"body1\"\n      >\n        Tell us about your situation\n      </Typography>\n      <Box mt={3}>\n        <Formik\n          initialValues={{\n            salary: userTax.salary || 0,\n            personalPensionContribution: userTax.personalPensionContributionPercent ? math.round(math.multiply(userTax.personalPensionContributionPercent, 100), 2) : 0,\n            employerPensionContribution: userTax.employerPensionContributionPercent ? math.round(math.multiply(userTax.employerPensionContributionPercent, 100), 2) : 0,\n            taxFreePersonalAllowance: userTax.taxFreePersonalAllowance || 12500,\n            studentLoanPlanType: userTax.studentLoan?.studentLoanPlanType || 0,\n            secondaryIncomeAfterTax: userTax.secondaryIncomeAfterTax || 0\n          }}\n          validationSchema={object().shape({\n            salary: number('Please type a number').required(),\n            personalPensionContribution: number('Please type a number').required(),\n            employerPensionContribution: number('Please type a number').required(),\n            taxFreePersonalAllowance: number().required(),\n            studentLoanPlanType: number(),\n            secondaryIncomeAfterTax: number('Please type a number')\n          })}\n          onSubmit={(userFinance, { setSubmitting }) => {\n            setUserFinances(userFinance, addMultipleInvestments)\n            setSubmitting(false);\n          }}\n        >{({ values, handleChange }) => (\n          <Form>\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Input\n                  label=\"Annual Salary\"\n                  name=\"salary\"\n                  type=\"tel\"\n                  inputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Typography >\n                          £\n                                    </Typography>\n                      </InputAdornment>)\n                  }}\n                />\n              </Grid>\n\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n\n                <Input\n                  label=\"Personal Pension Contribution Percentage\"\n                  name=\"personalPensionContribution\"\n                  type=\"tel\"\n                  inputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Typography >\n                          %\n                                    </Typography>\n                      </InputAdornment>)\n                  }}\n                />\n\n              </Grid>\n\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n\n                <Input\n                  label=\"Employer Pension Contribution Percentage\"\n                  name=\"employerPensionContribution\"\n                  type=\"tel\"\n                  inputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Typography >\n                          %\n                                    </Typography>\n                      </InputAdornment>)\n                  }}\n                />\n\n              </Grid>\n\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Input\n                  label=\"Tax Free Personal Allowance\"\n                  name=\"taxFreePersonalAllowance\"\n                  type=\"tel\"\n                  inputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Typography >\n                          £\n                                    </Typography>\n                      </InputAdornment>)\n                  }}\n                />\n              </Grid>\n\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Input\n                  label=\"Secondary Income After Tax\"\n                  name=\"secondaryIncomeAfterTax\"\n                  type=\"tel\"\n                  inputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Typography >\n                          £\n                                    </Typography>\n                      </InputAdornment>)\n                  }}\n                />\n              </Grid>\n\n\n              <Grid\n                item\n                xs={12}>\n\n                <InputLabel id=\"plan-name\">Student Loan Type</InputLabel>\n\n                <Select\n                  labelId=\"studentLoanPlanType\"\n                  id=\"studentLoanPlanType\"\n                  open={open}\n                  onClose={handleClose}\n                  onOpen={handleOpen}\n                  onChange={handleChange(\"studentLoanPlanType\")}\n                  value={values.studentLoanPlanType}\n                  className={classes.text}\n                >\n                  <MenuItem className={classes.text} key={'plan0'} value={0}>{`No Loan`}</MenuItem>\n                  <MenuItem className={classes.text} key={'plan1'} value={1}>{`Plan 1 (before 1 September 2012)`}</MenuItem>\n                  <MenuItem className={classes.text} key={'plan2'} value={2}>{`Plan 2 (after 1 September 2012)`}</MenuItem>\n                </Select>\n              </Grid>\n\n              <Grid item xs={12} >\n                <Button\n                  type=\"submit\"\n                  className={classes.button}\n                  fullWidth\n                  variant=\"text\">Calculate</Button>\n              </Grid>\n            </Grid>\n\n          </Form>\n        )}\n        </Formik>\n      </Box>\n    </div >\n  );\n};\n\nIncomeDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default IncomeDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  text: {\n    color: theme.palette.text.secondary\n  },\n}));\n\nconst IncomeTaxCard = ({ className, userTax, ...rest }) => {\n  const classes = useStyles();\n\n  const {\n    incomeTax: {\n      taxFreePersonalAllowance,\n      totalIncomeTax,\n      lowerBand,\n      mediumBand,\n      upperBand,\n    },\n    taxableIncome,\n    studentLoan,\n  } = userTax;\n\n  return (\n    <Box boxShadow={3} p={2} >\n      <Typography\n        align=\"center\"\n        gutterBottom\n        className={classes.text}\n        variant=\"h4\"\n      >\n        Income Tax\n        </Typography>\n      <Box mt={3}>\n        <Grid\n          container\n          spacing={3}\n        >\n\n          <Grid\n            item\n            lg={6}\n            md={6}\n            xs={12}\n          >\n            <Typography\n              className={classes.text}\n              align=\"center\"\n              variant=\"body1\"\n            >\n              Tax free allowance: £{taxFreePersonalAllowance.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n            </Typography>\n          </Grid>\n          {userTax.incomeTax.taxFreePersonalAllowanceRemovedBy100kTax && (\n            <Grid\n              item\n              lg={6}\n              md={6}\n              xs={12}\n            >\n              <Typography\n                align=\"center\"\n                variant=\"body1\"\n                className={classes.text}\n\n              >\n                100k Personal Allowance Deduction: £{userTax.incomeTax.taxFreePersonalAllowanceRemovedBy100kTax.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              </Typography>\n            </Grid>\n          )}\n\n          <Grid\n            item\n            lg={6}\n            md={6}\n            xs={12}\n          >\n            <Typography\n              align=\"center\"\n              className={classes.text}\n\n              variant=\"body1\"\n            >\n              Total Income Tax: £{totalIncomeTax.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            lg={6}\n            md={6}\n            xs={12}\n          >\n            <Typography\n              className={classes.text}\n              align=\"center\"\n              variant=\"body1\"\n            >\n              Taxable Income: £{taxableIncome.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n            </Typography>\n          </Grid>       <Grid\n            item\n            lg={6}\n            md={6}\n            xs={12}\n          >\n            <Typography\n              className={classes.text}\n              align=\"center\"\n              variant=\"body1\"\n            >\n              Tax paid at lower band: £{lowerBand.taxPaid.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n            </Typography>\n          </Grid>       <Grid\n            item\n            lg={6}\n            md={6}\n            xs={12}\n          >\n            <Typography\n              className={classes.text}\n              align=\"center\"\n              variant=\"body1\"\n            >\n              Tax paid at medium band: £{mediumBand.taxPaid.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            lg={6}\n            md={6}\n            xs={12}\n          >\n            <Typography\n              className={classes.text}\n              align=\"center\"\n              variant=\"body1\"\n            >\n              Tax paid at higher band: £{upperBand.taxPaid.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n            </Typography>\n          </Grid>\n          {studentLoan?.yearlyAmountPaid > 0 && (\n            <Grid\n              item\n              lg={6}\n              md={6}\n              xs={12}\n            >\n              <Typography\n                className={classes.text}\n                align=\"center\"\n                variant=\"body1\"\n                gutterBottom\n              >\n                Student Loan Paid: £{studentLoan?.monthlyAmountPaid.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              </Typography>\n            </Grid>\n          )}\n        </Grid>\n      </Box>\n    </Box>\n  );\n};\n\nIncomeTaxCard.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default IncomeTaxCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { useSalaryContext } from '../../../context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  text: {\n    color: theme.palette.text.secondary\n  },\n}));\n\nconst NationalInsuranceCard = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const {\n    userTax: {\n      nationalInsuranceTax: {\n        totalNationalInsuranceTax,\n        lowerBand,\n        mediumBand,\n        upperBand,\n      },\n    },\n  } = useSalaryContext();\n\n  return (\n    <Box boxShadow={3} p={2}  >\n      <Typography\n        align=\"center\"\n        className={classes.text}\n        gutterBottom\n        variant=\"h4\"\n      >\n        National Insurance\n        </Typography>\n\n      <Box mt={3}>\n        <Grid\n          container\n          spacing={3}\n        >\n\n          <Grid\n            item\n            lg={6}\n            md={6}\n            xs={12}\n          >\n            <Typography\n              align=\"center\"\n              className={classes.text}\n              variant=\"body1\"\n            >\n              Total N.I. Paid: £{totalNationalInsuranceTax}\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            lg={6}\n            md={6}\n            xs={12}\n          >\n            <Typography\n              align=\"center\"\n              className={classes.text}\n              variant=\"body1\"\n            >\n              Tax paid at lower band: £{lowerBand.taxPaid}\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            lg={6}\n            md={6}\n            xs={12}\n          >\n            <Typography\n              align=\"center\"\n              className={classes.text}\n              variant=\"body1\"\n            >\n              Tax paid at medium band: £{mediumBand.taxPaid}\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            lg={6}\n            md={6}\n            xs={12}\n          >\n            <Typography\n              align=\"center\"\n              className={classes.text}\n              variant=\"body1\"\n              gutterBottom\n            >\n              Tax paid at higher band: £{upperBand.taxPaid}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    </Box>\n  );\n};\n\nNationalInsuranceCard.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default NationalInsuranceCard;\n","import React from 'react';\nimport {\n    Box,\n    AppBar,\n    Grid,\n    makeStyles,\n    Typography\n} from '@material-ui/core';\nimport clsx from 'clsx';\n\nimport IncomeDetails from './IncomeDetails';\nimport IncomeTaxCard from './IncomeTaxCard'\nimport NationalInsurance from './NationalInsuranceCard'\nimport BreakdownCard from './BreakdownCard';\nimport { useSalaryContext } from '../../../context/SalaryContext';\nimport TopBar from '../../../layouts/MainLayout/TopBar.js'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    text: {\n        color: theme.palette.text.primary\n    }\n}));\n\nconst SalaryCalculator = ({ className, ...rest }) => {\n\n    const { setUserFinances, userTax } = useSalaryContext();\n    const classes = useStyles()\n    return (\n        <div\n            className={clsx(className)}\n            {...rest}\n        >\n            <TopBar header=\"Salary Calculator\" />\n\n            <IncomeDetails userTax={userTax} setUserFinances={setUserFinances} />\n            {userTax.salary > 0 && (\n\n                <Box mt={3} >\n                    <Typography\n                        className={classes.text}\n                        align=\"left\"\n                        gutterBottom\n                        variant=\"h2\"\n                    >\n                        Results\n                  </Typography>\n                    <Box mt={3} >\n                        <Grid\n                            container\n                            direction=\"row\"\n                            alignItems=\"stretch\"\n                            spacing={3}\n                        >\n\n                            <Grid\n                                item\n                                style={{ height: '100%' }}\n                                lg={6}\n                                md={6}\n                                xs={12}\n                            >\n                                <IncomeTaxCard userTax={userTax} />\n                            </Grid>\n                            <Grid\n                                style={{ height: '100%' }}\n\n                                item\n                                lg={6}\n                                md={6}\n                                xs={12}\n                            >\n                                <NationalInsurance />\n                            </Grid>\n                        </Grid>\n                        {/* <BreakdownCard /> */}\n                    </Box>\n                </Box>\n            )}\n        </div>\n    );\n};\n\nexport default SalaryCalculator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Divider,\n    Typography,\n    makeStyles,\n    Collapse,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    IconButton\n} from '@material-ui/core';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nimport { useSalaryContext } from '../../../context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    table: {\n        minWidth: 650,\n    },\n    statsItem: {\n        alignItems: 'center',\n        display: 'flex'\n    },\n    statsIcon: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst BreakdownCard = ({ className, ...rest }) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const { userTax: {\n        salary,\n    }} = useSalaryContext;\n\n    return salary > 0 && (\n        <Box mt={3}>\n            <Card\n                className={clsx(classes.root, className)}\n                {...rest}\n            >\n                <CardContent>\n\n                    <Typography\n                        align=\"center\"\n                        color=\"textPrimary\"\n                        gutterBottom\n                        variant=\"h3\"\n                    >\n                        Tax Breakdown\n                    </Typography>\n                    <Divider />\n                    <Box mt={3}>\n                        <TableContainer component={Paper}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell />\n                                        <TableCell align=\"center\">Yearly</TableCell>\n                                        <TableCell align=\"center\">Monthly</TableCell>\n                                        <TableCell align=\"center\">Weekly</TableCell>\n                                        <TableCell align=\"center\">Daily</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    <TableRow key={'id'}>\n                                        <TableCell align=\"center\" >\n                                            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                                                {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                                            </IconButton>\n                                        </TableCell>\n\n\n                                        <TableCell align=\"center\" >\n                                            Gross Income\n                                    </TableCell>\n                                        <TableCell align=\"center\" >\n                                            £test\n                                    </TableCell>\n                                      \n\n                                        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                                            <Box margin={1}>\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                                    History\n                                                 </Typography>\n                                                <Table size=\"small\" aria-label=\"purchases\">\n                                                    <TableHead>\n                                                        <TableRow>\n                                                            <TableCell>Date</TableCell>\n                                                            <TableCell>Customer</TableCell>\n                                                            <TableCell align=\"right\">Amount</TableCell>\n                                                            <TableCell align=\"right\">Total price ($)</TableCell>\n                                                        </TableRow>\n                                                    </TableHead>\n                                                    <TableBody>\n                                                        <TableRow key='id'>\n                                                            <TableCell component=\"th\" scope=\"row\">\n                                                                date\n                                                                </TableCell>\n                                                            <TableCell>id</TableCell>\n                                                            <TableCell align=\"right\">sigh</TableCell>\n                                                        </TableRow>\n                                                    </TableBody>\n                                                </Table>\n                                            </Box>\n                                        </Collapse>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Box>\n                </CardContent>\n                <Divider />\n            </Card>\n        </Box>\n    );\n};\n\nBreakdownCard.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default BreakdownCard;\n","import React from 'react';\nimport {\n  Container,\n  makeStyles,\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport SalaryCalculator from './SalaryCalculator';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n}));\n\nconst Salary = () => {\n  const classes = useStyles();\n\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Salary Calculator\"\n    >\n      <Container maxWidth={false}>\n        <SalaryCalculator />\n      </Container>\n    </Page>\n  );\n};\n\nexport default Salary;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n    Box,\n    Typography,\n    Link\n} from '@material-ui/core';\nimport TopBar from '../../layouts/MainLayout/TopBar.js'\n\nconst purposeTexts = [\n    'Personal finance was not something that was taught me at school. It has only been very recently that I have taken an interest in it.',\n    'As I started to become more aware of personal finance I found it hard to find the tools online to answer questions like; \\n',\n    '',\n    'If I was to reduce my expenses by X amount and invest the remainder into the market, how would that affect my net work over a given period?',\n    'If I was to increase my salary sacrifice by X%, how would that affect my net worth over a given period?',\n    'How much do others my ages spend on expenses?',\n    'How much do others my age invest in the market?',\n    '                                         ',\n    'This calculator aims to answer some of those questions and I hope at some point it will answer all of them!']\n\nconst HelpPage = ({ className, ...rest }) => {\n    return (\n        <div\n            className={clsx(className)}\n            {...rest}\n        >\n            <TopBar header=\"Help\" />\n\n\n            <Box mt={3}>\n                <Typography\n                    align=\"left\"\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"h4\"\n                >\n                    Purpose\n                  </Typography>\n                {purposeTexts.map(purposeText => (\n                    <Typography\n                        align=\"left\"\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                    >\n                        {purposeText}\n                        <br />\n                    </Typography>\n                ))}\n\n                <Box mt={3}>\n                    <Typography\n                        align=\"left\"\n                        color=\"textPrimary\"\n                        gutterBottom\n                        variant=\"h4\"\n                    >\n                        Getting Started\n                  </Typography>\n\n                    <Typography\n                        align=\"left\"\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                    >\n                        Work your way through each of the tabs on left hand side. <br />\n                                I would recommend working through from top to bottom. <br />\n                                If your investments are sitting in global index trackers a good return percentage would be 5% - 7% <br />\n                                Once you finish entering your finances use the selects on the navigation menu to run predictions over x years.\n\n                  </Typography>\n                </Box>\n            </Box>\n\n\n            <Box mt={3}>\n                <Typography\n                    align=\"left\"\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"h4\"\n                >\n                    Terminology\n                  </Typography>\n\n                <Typography\n                    align=\"left\"\n                    color=\"textPrimary\"\n                    variant=\"h5\"\n                >\n                    Draw Down\n                  </Typography>\n\n\n\n                <Typography\n                    align=\"left\"\n                    color=\"textPrimary\"\n                    variant=\"body1\"\n                >\n                    Is the percentage amount you wish to withdraw once you have FIRED\n                  </Typography>\n            </Box>\n\n            <Box mt={3}>\n                <Typography\n                    align=\"left\"\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"h4\"\n                >\n                    Limitations\n                  </Typography>\n\n                <Typography\n                    align=\"left\"\n                    color=\"textPrimary\"\n                    variant=\"body1\"\n                >\n                    Geared towards PAYE <br />\n                            Only supports tax year 2020 - 20201<br />\n                            UK focused<br />\n                            Doesn't take into consideration tax free investment types<br />\n                            Doesn't support tax on withdrawals <br />\n                            Doesn't take into consideration annual limits on isa, pension etc<br />\n                            Doesn't take into consideration SIPP tax relief<br />\n                            Doesn't support inflation for the time being<br />\n                </Typography>\n            </Box>\n\n            <Box mt={3}>\n                <Typography\n                    align=\"left\"\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"h4\"\n                >\n                    Resources\n                  </Typography>\n\n                <Typography\n                    align=\"left\"\n                    color=\"textPrimary\"\n                    variant=\"body1\"\n                >\n                    Not sure where to start with personal finance? Check out <br />\n\n                    <Link href=\"https://flowchart.ukpersonal.finance/\" >\n                        UK Personal Finance FlowChart\n\n                            </Link>\n                    <br />\n\n                    <Link href=\"https://www.reddit.com/r/UKPersonalFinance/\" >\n                        UKPersonalFinance\n\n                            </Link>\n                    <br />\n                    <Link href=\"https://www.reddit.com/r/FIREUK/\" >\n                        FIREUK\n                            </Link>\n                </Typography>\n            </Box>\n        </div >\n    );\n};\n\nHelpPage.propTypes = {\n    className: PropTypes.string\n};\n\nexport default HelpPage;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport HelpPage from './Help'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Help = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Help\"\n    >\n      <Container maxWidth=\"lg\">\n        <Box mt={3}>\n          <HelpPage />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Help;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/layouts/DashboardLayout';\nimport MainLayout from 'src/layouts/MainLayout';\nimport Investments from 'src/views/investments/Investments';\nimport Budget from 'src/views/budget/Budget';\nimport NetWorthDashboard from 'src/views/dashboard/DashboardView';\nimport SalaryCalculator from 'src/views/salaryCalculator/SalaryCalculator';\nimport Help from 'src/views/help';\n\nconst routes = [\n  {\n    path: 'app',\n    element: <DashboardLayout />,\n    children: [\n      { path: 'investments', element: <Investments /> },\n      { path: 'budget', element: <Budget /> },\n      { path: 'dashboard', element: <NetWorthDashboard /> },\n      { path: 'salary-calculator', element: <SalaryCalculator /> },\n      { path: 'Help', element: <Help /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  },\n  {\n    path: '/',\n    element: <MainLayout />,\n    children: [\n      { path: '404', element: <Navigate to=\"/app/salary-calculator\" />},\n      { path: '/', element: <Navigate to=\"/app/salary-calculator\" /> },\n      { path: '*', element:<Navigate to=\"/app/salary-calculator\" /> }\n    ]\n  }\n];\n\nexport default routes;\n","import 'react-perfect-scrollbar/dist/css/styles.css';\nimport React from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\n\nconst App = () => {\n  const routing = useRoutes(routes);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {routing}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { SalaryContextProvider } from './context/SalaryContext'\nimport { BudgetContextProvider } from './context/BudgetContext'\nimport { InvestmentContextProvider } from './context/InvestmentContext'\nimport { MobileContextProvider } from './context/MobileContext';\nimport App from './App';\n\nReactDOM.render((\n  <HashRouter>\n    <SalaryContextProvider>\n      <BudgetContextProvider>\n        <InvestmentContextProvider>\n          <MobileContextProvider>\n          <App />\n          </MobileContextProvider>\n        </InvestmentContextProvider>\n      </BudgetContextProvider>\n    </SalaryContextProvider>\n  </HashRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}