{"version":3,"sources":["serviceWorker.js","utils/calculatePreTaxDeductions.js","utils/calculateIncomeTax.js","utils/taxTypes.js","utils/calculateNationalInsurance.js","utils/calculateStudentLoan.js","utils/calculateAllTax.js","context/SalaryContext.jsx","context/BudgetContext.jsx","utils/calculateCompoundInterest.js","context/InvestmentContext.jsx","components/GlobalStyles.js","theme/index.js","theme/shadows.js","theme/typography.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/SelectYears.jsx","views/dashboard/DashboardView/ExpectedMonthlyIncome.js","views/dashboard/DashboardView/NetWorthTotal.js","views/dashboard/DashboardView/AmountInvestedPerMonth.jsx","layouts/DashboardLayout/NavBar/index.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/investments/Investments/AddInvestment.jsx","views/investments/Investments/InvestmentList.jsx","views/investments/Investments/Investments.jsx","views/investments/Investments/index.js","views/budget/Budget/MonthlyTakeHomeCard.jsx","views/budget/Budget/AddExpenses.jsx","views/budget/Budget/ExpenseList.jsx","views/budget/Budget/Budget.jsx","views/budget/Budget/index.js","views/dashboard/DashboardView/TakeHomeIncome.js","views/dashboard/DashboardView/NetWorth.js","views/dashboard/DashboardView/SavingPercentage.js","utils/convertCompoundDataToGraph.js","views/dashboard/DashboardView/index.js","views/errors/NotFoundView.js","views/salaryCalculator/SalaryCalculator/IncomeDetails.jsx","views/salaryCalculator/SalaryCalculator/IncomeTaxCard.jsx","views/salaryCalculator/SalaryCalculator/NationalInsuranceCard.jsx","views/salaryCalculator/SalaryCalculator/index.jsx","views/salaryCalculator/SalaryCalculator/BreakdownCard.jsx","routes.js","views/settings/SettingsView/Notifications.js","views/settings/SettingsView/Password.js","views/settings/SettingsView/index.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","math","create","all","number","precision","BANDS","nationalInsuranceTaxBands","totalNationalInsuranceTax","weeklyNationalInsuranceTax","lowerBand","taxPercent","start","end","taxPaid","carryOver","mediumBand","upperBand","PLAN_TYPES","calculateStudentLoan","studentLoanPlanType","salary","monthlyAmountPaid","yearlyAmountPaid","difference","subtract","chain","divide","multiply","round","done","calculatePlanOne","calculatePlanTwo","calculateAllTax","taxFreePersonalAllowance","employerPensionContributionPercent","personalPensionContributionPercent","personalPensionContribution","employerPensionContribution","taxBreaks","taxBreaksTotal","reduce","accum","item","add","amount","taxableIncome","calculatePreTaxDeductions","incomeTax","tax","amountOver","amountToRemoveFromPersonalAllowance","Math","floor","newTaxFreeAmount","taxFreePersonalAllowanceRemovedBy100kTax","band","totalIncomeTax","calculateIncomeTax","incomeTaxBands","nationalInsuranceTax","calculateNationalInsurance","studentLoan","totalTakeHome","React","createContext","Provider","Consumer","SalaryContextProvider","children","state","JSON","parse","localStorage","getItem","useState","userTax","setUserTax","console","log","value","setUserFinances","addMultipleInvestments","setItem","stringify","name","monthlyContribution","BudgetContextProvider","expenses","setExpenses","expenseTotal","length","filter","checked","acc","i","cost","addExpense","newExpenses","concat","parseFloat","checkExpense","idx","map","expense","index","removeExpense","_","calculateYearlyCompoundWithCharge","initialAmount","expectedReturn","annualCharge","noOfYearsToMature","compoundInterest","totalAmount","calculateMonthlyCompoundInterest","totalAmountAfterMaturing","balance","cumulativeInterest","earnedInterest","InvestmentContextProvider","investmentState","yearState","investments","setInvestments","yearsToMature","setYearsToMature","saveInvestments","investmentToSave","saveYearsToMature","years","investment","investmentToRecalculate","compoundData","onItemSave","editMode","investmentCopy","addInvestment","getAmountInvestedPerMonth","getTotalNetWorthInXYears","investmentsToAdd","copy","newInvestment","isInvestmentAlreadyInList","findIndex","oldInvestments","push","removeInvestment","editInvestment","getExpectedInterestIncomeInXYears","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","theme","createMuiTheme","typography","palette","background","dark","default","colors","common","white","paper","primary","main","blue","secondary","text","blueGrey","shadows","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","h1","fontWeight","letterSpacing","h2","h3","h4","h5","h6","overline","display","paddingTop","paddingBottom","button","color","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","formControl","minWidth","Array","fill","SelectYears","open","setOpen","handleClose","handleOpen","Box","mt","FormControl","style","Typography","align","gutterBottom","variant","Select","textAlign","labelId","id","onClose","onOpen","onChange","e","target","year","MenuItem","key","root","ExpectedMonthlyIncome","Card","CardContent","Grid","container","direction","alignItems","NetWorthTotal","justify","AmountInvestedPerMonth","items","DollarSign","Download","TrendingUp","BarChartIcon","mobileDrawer","desktopDrawer","top","NavBar","onMobileClose","openMobile","useLocation","useEffect","pathname","content","p","List","Hidden","lgUp","Drawer","anchor","mdDown","defaultProps","avatar","TopBar","onMobileNavOpen","AppBar","elevation","Toolbar","smDown","ml","mdUp","flexGrow","IconButton","onClick","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","toolbar","mb","MainLayout","Page","forwardRef","ref","Helmet","Input","label","inputProps","props","useField","field","meta","TextField","required","fullWidth","InputProps","touched","error","AddInvestment","Divider","initialValues","validationSchema","object","string","onSubmit","setSubmitting","resetForm","type","startAdornment","InputAdornment","position","endAdornment","InvestmentList","memo","onItemEdit","onItemRemove","onItemCheck","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","setStatus","submitForm","Save","SaveOutlined","aria-label","DeleteOutlined","Edit","EditOutlined","Investments","minHeight","Index","Container","maxWidth","red","differenceIcon","differenceValue","MonthlyTakeHomeCard","expensesCost","Expenses","ExpenseList","Checkbox","ExpenseHeaderCard","budgetContext","lg","sm","xl","xs","AddExpenses","Budget","TakeHomeIncome","context","colours","Object","values","indigo","NetWorth","investmentData","useTheme","chartData","data","CardHeader","right","left","bottom","keys","investmentType","dataKey","stackId","stroke","green","TrafficByDevice","startAngle","endAngle","innerRadius","outerRadius","paddingAngle","entry","convertCompoundDataToGraph","months","isYearInAccum","find","entries","Dashboard","md","image","marginTop","NotFoundView","flexDirection","alt","src","importButton","exportButton","IncomeDetails","userFinance","handleChange","InputLabel","statsItem","statsIcon","IncomeTaxCard","NationalInsuranceCard","table","SalaryCalculator","routes","path","element","App","routing","useRoutes","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b375466d.chunk.js","sourcesContent":["/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nexport function calculatePreTaxDeductions({ salary = 0, personalPensionContribution = 0 }, taxBreaks = []) {\n\n  const taxBreaksTotal = taxBreaks.reduce((accum, item) => math.add(accum, item.amount), 0)\n  let taxableIncome = math\n    .chain(salary)\n    .subtract(personalPensionContribution)\n    .subtract(taxBreaksTotal)\n    .done()\n\n  taxableIncome = taxableIncome > 0\n    ? taxableIncome = taxableIncome\n    : 0\n\n\n  return {\n    taxBreaksTotal,\n    taxableIncome\n  }\n\n}\n","import { all, create } from 'mathjs'\n\nconst BANDS = ['lowerBand', 'mediumBand', 'upperBand']\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst ROUND_AMOUNT = 2\n\nexport const calculateIncomeTax = (tax, taxableIncome) => {\n\n  const isSalaryOver100k = taxableIncome > 100000\n\n  if (isSalaryOver100k) {\n    const amountOver = math.subtract(taxableIncome, 100000)\n\n    const amountToRemoveFromPersonalAllowance = Math.floor(math.divide(amountOver, 2))\n    const newTaxFreeAmount = math.subtract(tax.taxFreePersonalAllowance, amountToRemoveFromPersonalAllowance) > 0 ?\n      math.subtract(tax.taxFreePersonalAllowance, amountToRemoveFromPersonalAllowance) :\n      0\n\n    tax.taxFreePersonalAllowanceRemovedBy100kTax = amountToRemoveFromPersonalAllowance > tax.taxFreePersonalAllowance ? tax.taxFreePersonalAllowance : amountToRemoveFromPersonalAllowance\n    tax.taxFreePersonalAllowance = newTaxFreeAmount\n  }\n\n  taxableIncome = math.subtract(taxableIncome, tax.taxFreePersonalAllowance)\n\n  let carryOver = taxableIncome\n\n  for (const band of BANDS) {\n    const difference = math.subtract(tax[band].end, tax[band].start)\n\n    if (math.subtract(carryOver, difference) > 0) {\n      tax[band].taxPaid = math.round(math.multiply(difference, tax[band].taxPercent), ROUND_AMOUNT)\n      tax.totalIncomeTax = math.add(tax.totalIncomeTax, tax[band].taxPaid)\n      tax[band].carryOver = math.subtract(carryOver, difference)\n      carryOver = math.subtract(carryOver, difference)\n\n    } else {\n      tax[band].taxPaid = math.multiply(carryOver, tax[band].taxPercent) > 0\n        ? math.round(math.multiply(carryOver, tax[band].taxPercent), ROUND_AMOUNT)\n        : 0\n\n      tax.totalIncomeTax = math.round(math.add(tax.totalIncomeTax, tax[band].taxPaid), ROUND_AMOUNT)\n      carryOver = 0\n      break\n    }\n  }\n\n  return tax\n}\n\n","export const incomeTaxBands = (taxFreePersonalAllowance = 12500 ) => ({\n  taxFreePersonalAllowance,\n  totalIncomeTax: 0,\n  lowerBand: {\n    taxPercent: .2,\n    start: taxFreePersonalAllowance + 0.01,\n    end: 50000,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  mediumBand: {\n    taxPercent: .4,\n    start: 50000.01,\n    end: 150000,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  upperBand: {\n    taxPercent: .45,\n    start: 150000.01,\n    end: 99999999,\n    taxPaid: 0,\n    carryOver: 0\n  }\n})\n\nexport const nationalInsuranceTaxBands = {\n  totalNationalInsuranceTax: 0,\n  weeklyNationalInsuranceTax: 0,\n  lowerBand: {\n    taxPercent: 0,\n    start: 0,\n    end: 183,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  mediumBand: {\n    taxPercent: .12,\n    start: 183.01,\n    end: 962.00,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  upperBand: {\n    taxPercent: .02,\n    start: 962.01,\n    end: 99999999,\n    taxPaid: 0,\n    carryOver: 0\n  }\n}\n","import { all, create } from 'mathjs'\n\nconst BANDS = ['lowerBand', 'mediumBand', 'upperBand']\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst WEEKS_IN_YEAR = 52\nconst ROUND_AMOUNT = 2\n\n\nexport const calculateNationalInsurance = (tax, taxableIncome) => {\n  tax.weeklyNationalInsuranceTax = 0;\n  tax.totalNationalInsuranceTax = 0;\n  const weeklyIncome = math.divide(taxableIncome, WEEKS_IN_YEAR)\n\n  let carryOver = weeklyIncome\n\n  for (const band of BANDS) {\n    const difference = math.subtract(tax[band].end, tax[band].start)\n    if (math.subtract(carryOver, difference) > 0) {\n      tax[band].taxPaid = math.round(math.multiply(difference, tax[band].taxPercent), ROUND_AMOUNT)\n      tax.weeklyNationalInsuranceTax = math.add(tax.weeklyNationalInsuranceTax, tax[band].taxPaid)\n\n\n      tax[band].carryOver = math.subtract(carryOver, difference)\n      carryOver = math.subtract(carryOver, difference)\n\n    } else {\n      tax[band].taxPaid = math.multiply(carryOver, tax[band].taxPercent) > 0\n        ? math.round(math.multiply(carryOver, tax[band].taxPercent), ROUND_AMOUNT)\n        : 0\n\n      tax.weeklyNationalInsuranceTax = math.round(math.add(tax.weeklyNationalInsuranceTax, tax[band].taxPaid), ROUND_AMOUNT)\n      \n      carryOver = 0\n      break\n    }\n  }\n\n  tax.totalNationalInsuranceTax = math.round(math.multiply(tax.weeklyNationalInsuranceTax, WEEKS_IN_YEAR), ROUND_AMOUNT)\n  return tax\n}\n\n","import { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst PLAN_TYPES = {\n  ONE: 1,\n  TWO: 2\n}\n\nconst PLAN_ONE_THRESHOLD = 19390\nconst PLAN_TWO_THRESHOLD = 26575\nconst PAYBACK_PERCENT = 9\n\nconst calculatePlanOne = ({ salary = 0 }) => {\n  if (salary <= PLAN_ONE_THRESHOLD) {\n    return {\n      monthlyAmountPaid: 0,\n      yearlyAmountPaid: 0\n    }\n  }\n\n  const difference = math.subtract(salary, PLAN_ONE_THRESHOLD)\n  const yearlyAmountPaid = math.chain(difference).divide(100).multiply(PAYBACK_PERCENT).round(2).done()\n\n  return {\n    monthlyAmountPaid: math.round(math.divide(yearlyAmountPaid, 12), 2),\n    yearlyAmountPaid\n  }\n}\n\nconst calculatePlanTwo = ({ salary = 0 }) => {\n  if (salary <= PLAN_TWO_THRESHOLD) {\n    return {\n      monthlyAmountPaid: 0,\n      yearlyAmountPaid: 0\n    }\n  }\n\n  const difference = math.subtract(salary, PLAN_TWO_THRESHOLD)\n  const yearlyAmountPaid = math.chain(difference).divide(100).multiply(PAYBACK_PERCENT).round(2).done()\n\n  return {\n    monthlyAmountPaid: math.round(math.divide(yearlyAmountPaid, 12), 2),\n    yearlyAmountPaid\n  }\n}\n\nexport const calculateStudentLoan = ({ studentLoanPlanType = 0, salary = 0 }) => {\n  if (studentLoanPlanType === PLAN_TYPES.ONE) {\n    return calculatePlanOne({ salary })\n  } else if (studentLoanPlanType === PLAN_TYPES.TWO) {\n    return calculatePlanTwo({ salary })\n  }\n  return {\n    monthlyAmountPaid: 0,\n    yearlyAmountPaid: 0\n  }\n}\n","import { all, create } from 'mathjs'\nimport { calculatePreTaxDeductions } from './calculatePreTaxDeductions'\nimport { calculateIncomeTax } from './calculateIncomeTax'\nimport { incomeTaxBands, nationalInsuranceTaxBands } from './taxTypes';\nimport { calculateNationalInsurance } from './calculateNationalInsurance'\nimport { calculateStudentLoan } from './calculateStudentLoan'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nexport default function calculateAllTax({\n  salary = 0,\n  taxFreePersonalAllowance = 12500,\n  employerPensionContributionPercent = 0,\n  personalPensionContributionPercent = 0,\n  studentLoanPlanType = 0 }) {\n\n\n  const personalPensionContribution = math.multiply(personalPensionContributionPercent, salary)\n  const employerPensionContribution = math.multiply(employerPensionContributionPercent, salary)\n  const { monthlyAmountPaid, yearlyAmountPaid } = calculateStudentLoan({ studentLoanPlanType , salary})\n  const { taxBreaksTotal, taxableIncome } = calculatePreTaxDeductions({ taxFreePersonalAllowance, salary, personalPensionContribution }) //TODO : Tax breaks\n\n  const incomeTax = calculateIncomeTax(incomeTaxBands(taxFreePersonalAllowance), taxableIncome)\n  const nationalInsuranceTax = calculateNationalInsurance(nationalInsuranceTaxBands, taxableIncome)\n\n  return {\n    salary,\n    studentLoan: {\n      studentLoanPlanType,\n      monthlyAmountPaid,\n      yearlyAmountPaid\n    },\n    employerPensionContributionPercent,\n    personalPensionContributionPercent,\n    personalPensionContribution,\n    employerPensionContribution,\n    taxBreaksTotal,\n    taxableIncome,\n    incomeTax,\n    nationalInsuranceTax,\n    totalTakeHome: math\n      .chain(salary)\n      .subtract(personalPensionContribution)\n      .subtract(incomeTax.totalIncomeTax)\n      .subtract(nationalInsuranceTax.totalNationalInsuranceTax)\n      .subtract(yearlyAmountPaid)\n      .round(2)\n      .done()\n  }\n}\n","import React, { useState } from 'react';\nimport calculateAllTax from '../utils/calculateAllTax'\nimport { all, create } from 'mathjs'\nconst { Provider, Consumer } = React.createContext();\n\nconst math = create(all, {\n\tnumber: 'BigNumber',\n\tprecision: 32\n});\n\nconst SalaryContextProvider = ({ children }) => {\n\tconst state = JSON.parse(localStorage.getItem('salary')) ? JSON.parse(localStorage.getItem('salary')) : {}\n\tconst [userTax, setUserTax] = useState(state)\n\n\tconst setUserFinances = ({ salary, taxFreePersonalAllowance, personalPensionContribution = 0, employerPensionContribution = 0, studentLoanPlanType = 0 }, addMultipleInvestments) => {\n\t\tconst tax = calculateAllTax({\n\t\t\tsalary,\n\t\t\ttaxFreePersonalAllowance,\n\t\t\temployerPensionContributionPercent: employerPensionContribution / 100,\n\t\t\tpersonalPensionContributionPercent: personalPensionContribution / 100,\n\t\t\tstudentLoanPlanType\n\t\t})\n\t\tsetUserTax(tax)\n\t\tlocalStorage.setItem('salary', JSON.stringify(tax))\n\n\t\taddMultipleInvestments([{\n\t\t\tname: 'Workplace Pension (employer contribution)',\n\t\t\tmonthlyContribution: math.round(math.divide(tax.employerPensionContribution, 12), 2)\n\t\t},\n\t\t{\n\t\t\tname: 'Workplace Pension (personal contribution)',\n\t\t\tmonthlyContribution: math.round(math.divide(tax.personalPensionContribution, 12), 2)\n\t\t}])\n\t}\n\n\tconsole.log(userTax)\n\treturn (\n\t\t<Provider value={{ setUserFinances, userTax }}>\n\t\t\t{children}\n\t\t</Provider>\n\t)\n}\n\nexport { SalaryContextProvider, Consumer as SalaryContextConsumer }","import React, { useState } from 'react';\nimport { all, create } from 'mathjs'\nconst { Provider, Consumer } = React.createContext();\n\nconst math = create(all, {\n    number: 'BigNumber',\n    precision: 32\n  });\n  \n  \n\nconst BudgetContextProvider = ({ children }) => {\n  const state = JSON.parse(localStorage.getItem('expenses')) ? JSON.parse(localStorage.getItem('expenses')) : []\n    const [expenses, setExpenses] = useState(state);\n\n      const addExpense = ({name, cost}) => {\n        if (name !== \"\" || !cost) {\n          const newExpenses = expenses.concat({\n            name,\n            cost: parseFloat(cost),\n            checked: true\n          })\n\n          setExpenses(newExpenses);\n          localStorage.setItem('expenses', JSON.stringify(newExpenses))\n        }\n      }\n\n      const checkExpense = idx => {\n        setExpenses(\n          expenses.map((expense, index) => {\n            if (idx === index) {\n              expense.checked = !expense.checked;\n            }\n  \n            return expense;\n          })\n        );\n      }\n\n      const removeExpense = idx => {\n        const newExpenses = expenses.filter((_, index) => idx !== index)\n        setExpenses(newExpenses);\n        localStorage.setItem('expenses', JSON.stringify(newExpenses))\n      }\n    \n      const expenseTotal = expenses.length > 0\n      ? expenses.filter(item => item.checked).reduce((acc, i) => math.add(acc, i.cost), 0)\n      : 0\n\n\treturn (\n\t\t<Provider value={{ expenses, addExpense, checkExpense, removeExpense, expenseTotal }}>\n\t\t\t{children}\n\t\t</Provider>\n\t)\n}\n\nexport { BudgetContextProvider, Consumer as BudgetContextConsumer }","import { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst MONTHS_OF_THE_YEAR = 12\nconst ROUND_AMOUNT = 2\n\nexport const calculateYearlyCompoundWithCharge = ({\n  initialAmount = 0, \n  expectedReturn = 0, \n  monthlyContribution = 0,\n  annualCharge = 0,\n  noOfYearsToMature = 0\n}) => {\n  const compoundInterest = {}\n  let totalAmount = initialAmount;\n\n  // forgive for starting at 1 plz god. Makes years easier\n  for (let i = 1; i <= noOfYearsToMature; i++ ) {  \n    compoundInterest[`Year ${i}`] = calculateMonthlyCompoundInterest({\n      totalAmount, \n      expectedReturn, \n      monthlyContribution\n    })\n\n    const totalAmountAfterMaturing = compoundInterest[`Year ${i}`][`Month ${MONTHS_OF_THE_YEAR}`].balance\n    \n    totalAmount = annualCharge\n    ? math.round(math.subtract(totalAmountAfterMaturing, math.multiply(totalAmountAfterMaturing, annualCharge)), ROUND_AMOUNT)\n    : totalAmountAfterMaturing\n  }\n\n  return compoundInterest\n}\n\nexport const calculateMonthlyCompoundInterest = ({\n    totalAmount, \n    expectedReturn, \n    monthlyContribution,\n  }) => {\n  const compoundInterest = {}\n\n  let balance = totalAmount\n  let  cumulativeInterest = 0;\n  \n  // forgive for starting at 1 plz god. Makes years easier\n  for (let i = 1; i <= MONTHS_OF_THE_YEAR; i++ ) {  \n    const earnedInterest = math.chain(balance).multiply(expectedReturn).divide(MONTHS_OF_THE_YEAR).round(ROUND_AMOUNT).done()\n    cumulativeInterest = math.round(math.add(cumulativeInterest, earnedInterest), ROUND_AMOUNT)\n\n    balance =  math.chain(balance).add(monthlyContribution).add(earnedInterest).round(ROUND_AMOUNT).done()\n    \n    compoundInterest[`Month ${i}`] = {\n      earnedInterest,\n      balance,\n      cumulativeInterest\n    }\n  }\n\n  return compoundInterest\n}\n","import React, { useState } from 'react';\nimport { calculateYearlyCompoundWithCharge } from 'src/utils/calculateCompoundInterest';\nimport { all, create } from 'mathjs'\nconst { Provider, Consumer } = React.createContext();\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\n\nconst InvestmentContextProvider = ({ children }) => {\n  const investmentState = JSON.parse(localStorage.getItem('investments')) ? JSON.parse(localStorage.getItem('investments')) : []\n  const yearState = localStorage.getItem('yearsToMature') || 1\n  const [investments, setInvestments] = useState(investmentState);\n  const [yearsToMature, setYearsToMature] = useState(yearState)\n\n  const saveYearsToMature = years => {\n    setYearsToMature(years)\n    localStorage.setItem('yearsToMature', years)\n    setInvestments([...investments].map(investment => {\n      const investmentToRecalculate = {\n        ...investment,\n        noOfYearsToMature: years,\n      }\n\n      return {\n        ...investmentToRecalculate,\n        compoundData: calculateYearlyCompoundWithCharge(investmentToRecalculate)\n      }\n    }))\n  }\n  const saveInvestments = (investmentToSave) => {\n    setInvestments(investmentToSave)\n    localStorage.setItem('investments', JSON.stringify(investmentToSave))\n  }\n\n  const addMultipleInvestments = (investmentsToAdd) => {\n\n    const copy = [...investments]\n\n    for (const newInvestment of investmentsToAdd) {\n\n      let isInvestmentAlreadyInList = copy.findIndex(oldInvestments => oldInvestments.name === newInvestment.name)\n\n      if (isInvestmentAlreadyInList > -1) {\n        const { monthlyContribution } = newInvestment\n        const investment = {\n          ...copy[isInvestmentAlreadyInList],\n          monthlyContribution: parseFloat(monthlyContribution),\n        }\n\n        copy[isInvestmentAlreadyInList] = {\n          ...investment,\n          compoundData: calculateYearlyCompoundWithCharge(investment)\n        }\n\n      } else {\n        const investment = {\n          name: newInvestment.name,\n          initialAmount: 0,\n          expectedReturn: 0,\n          annualCharge: 0,\n          monthlyContribution: parseFloat(newInvestment.monthlyContribution),\n          editMode: false,\n          noOfYearsToMature: yearsToMature,\n        }\n\n        copy.push({\n          ...investment,\n          compoundData: calculateYearlyCompoundWithCharge(investment)\n        })\n      }\n\n    }\n\n    saveInvestments(copy)\n  }\n\n  const addInvestment = ({ name = '', initialAmount = 0, expectedReturn = 0, monthlyContribution = 0, annualCharge = 0 }) => {\n    const investment = {\n      name,\n      initialAmount: parseFloat(initialAmount),\n      expectedReturn: math.round(math.divide(expectedReturn, 100), 2),\n      monthlyContribution: parseFloat(monthlyContribution),\n      noOfYearsToMature: yearsToMature,\n      annualCharge: math.divide(annualCharge, 100),\n      editMode: false,\n    }\n\n    saveInvestments([\n      ...investments.filter(investment => investment.name !== name),\n      {\n        ...investment,\n        compoundData: calculateYearlyCompoundWithCharge(investment)\n      }\n    ])\n  }\n\n  const editInvestment = idx => {\n    saveInvestments(\n      investments.map((investment, index) => {\n        if (idx === index) {\n          investment.editMode = true;\n        }\n\n        return investment;\n      })\n    );\n  }\n\n  const onItemSave = ({ name = '', initialAmount = 0, expectedReturn = 0, monthlyContribution = 0, annualCharge = 0 }, idx) => {\n    const investment = {\n      name,\n      initialAmount: parseFloat(initialAmount),\n      expectedReturn: math.round(math.divide(expectedReturn, 100), 2),\n      monthlyContribution: parseFloat(monthlyContribution),\n      noOfYearsToMature: yearsToMature,\n      annualCharge: math.divide(annualCharge, 100),\n      editMode: false,\n    }\n\n    const investmentCopy = [...investments]\n\n    investmentCopy[idx] = {\n      ...investment,\n      compoundData: calculateYearlyCompoundWithCharge(investment)\n    }\n\n    saveInvestments(investmentCopy)\n  }\n\n  const removeInvestment = idx => {\n    saveInvestments(investments.filter((_, index) => idx !== index));\n  }\n\n  const getExpectedInterestIncomeInXYears = () => investments.length > 0\n    ? math.round(investments.reduce((accum, investment) => accum + investment.compoundData[`Year ${yearsToMature}`]['Month 12'].earnedInterest, 0), 2)\n    : 0\n\n  const getTotalNetWorthInXYears = () => investments.length > 0\n    ? math.round(investments.reduce((accum, investment) => accum + investment.compoundData[`Year ${yearsToMature}`]['Month 12'].balance, 0), 2)\n    : 0\n\n  const getAmountInvestedPerMonth = () => investments.length > 0\n    ? investments.reduce((accum, investment) => accum + investment.monthlyContribution, 0)\n    : 0\n\n  return (\n    <Provider value={{ investments, saveYearsToMature, yearsToMature, onItemSave, addInvestment, getAmountInvestedPerMonth, getTotalNetWorthInXYears, addMultipleInvestments, removeInvestment, editInvestment, getExpectedInterestIncomeInXYears }}>\n      {children}\n    </Provider>\n  )\n}\n\nexport { InvestmentContextProvider, Consumer as InvestmentContextConsumer }","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  typography: {\n    \"fontFamily\": `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n    \"fontSize\": 14,\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n  },\n  palette: {\n    background: {\n      dark: '#F4F6F8',\n      default: colors.common.white,\n      paper: colors.common.white\n    },\n    primary: {\n      main: colors.blue[500]\n    },\n    secondary: {\n      main: colors.blue[700]\n    },\n    text: {\n      primary: colors.blueGrey[900],\n      secondary: colors.blueGrey[600]\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n  fontSize: 14,\n  fontWeightLight: 300,\n  fontWeightRegular: 400,\n  fontWeightMedium: 500,\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useState } from 'react';\nimport {\n    makeStyles,\n    MenuItem,\n    FormControl,\n    Select,\n    Button,\n    Typography,\n    Box\n} from '@material-ui/core';\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst years = new Array(100).fill(0).map((_, i) => i + 1)\n\nexport const SelectYears = () => {\n    const classes = useStyles();\n\n    const [open, setOpen] = useState(false);\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n\n    return (\n        <InvestmentContextConsumer>\n            {({ saveYearsToMature, yearsToMature }) => (\n                <Box\n                    display=\"flex\"\n                    mt={3}\n                    width={1}\n                    >\n                    <FormControl style={{ width: \"100%\"}} className={classes.formControl}>\n                        <Typography\n                            align=\"center\"\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h6\"\n                        >\n                            Predict Net Worth In\n                        </Typography>\n                        <Select\n                            style={{  textAlign: 'center'}}\n                            labelId=\"open-select-label\"\n                            id=\"open-select\"\n                            open={open}\n                            onClose={handleClose}\n                            onOpen={handleOpen}\n                            value={yearsToMature}\n                            onChange={e => saveYearsToMature(e.target.value)}\n                        >\n                            {years.map((year) =>\n                                <MenuItem key={`${year}-Years`}  style={{ justifyContent:'center'}}  value={year}>{`${year} Years`}</MenuItem>\n                            )}\n                        </Select>\n                    </FormControl>\n                </Box>\n            )}\n        </InvestmentContextConsumer>\n\n\n    )\n}","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext'\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst ExpectedMonthlyIncome = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <InvestmentContextConsumer>\n      {({ getExpectedInterestIncomeInXYears, yearsToMature }) => (\n        <Card\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <CardContent>\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <Typography\n                  align=\"center\"\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"h6\"\n                >\n                  Expected Monthly Interest in {yearsToMature} Years\n            </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h3\"\n                >\n                  £{getExpectedInterestIncomeInXYears()}\n                </Typography>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      )}\n    </InvestmentContextConsumer>\n  );\n};\n\nExpectedMonthlyIncome.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ExpectedMonthlyIncome;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst NetWorthTotal = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <InvestmentContextConsumer>\n      {({ getTotalNetWorthInXYears, yearsToMature }) => (\n        <Card\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <CardContent>\n            <Grid\n             container\n             direction=\"column\"\n             alignItems=\"center\"\n             justify=\"center\"\n            >\n              <Grid item>\n                <Typography\n                  align=\"center\"\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"h6\"\n                >\n                  Total Net Worth in {yearsToMature} Years\n                </Typography>\n                </Grid>\n                <Grid item> \n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h3\"\n                >\n                  £{getTotalNetWorthInXYears()}\n                </Typography>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      )}\n    </InvestmentContextConsumer>\n  );\n};\n\nNetWorthTotal.propTypes = {\n  className: PropTypes.string\n};\n\nexport default NetWorthTotal;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst AmountInvestedPerMonth = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <InvestmentContextConsumer>\n      {({ getAmountInvestedPerMonth }) => (\n        <Card\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <CardContent>\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Grid item>\n                <Typography\n                  align=\"center\"\n                  color=\"textSecondary\"\n                  variant=\"h6\"\n                >\n                  Amount Invested Per Month\n                </Typography>\n                </Grid>\n                <Grid item> \n                \n                <Typography\n                  gutterBottom\n                  color=\"textPrimary\"\n                  variant=\"h3\"\n                >\n                  £{getAmountInvestedPerMonth()}\n                </Typography>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card >\n      )}\n    </InvestmentContextConsumer>\n  );\n};\n\nAmountInvestedPerMonth.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AmountInvestedPerMonth;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Drawer,\n  Hidden,\n  List,\n  makeStyles,\n  Grid\n} from '@material-ui/core';\nimport {\n  BarChart as BarChartIcon,\n  TrendingUp,\n  DollarSign,\n  Download\n} from 'react-feather';\nimport NavItem from './NavItem';\nimport { SelectYears } from './SelectYears'\nimport ExpectedMonthlyIncome from '../../../views/dashboard/DashboardView/ExpectedMonthlyIncome';\nimport NetWorthTotal from '../../../views/dashboard/DashboardView/NetWorthTotal';\nimport AmountInvested from '../../../views/dashboard/DashboardView/AmountInvestedPerMonth';\n\n\nconst items = [\n  {\n    href: '/app/salary-calculator',\n    icon: DollarSign,\n    title: 'Salary Calculator'\n  },\n  {\n    href: '/app/budget',\n    icon: Download,\n    title: 'Budget'\n  },\n\n  {\n    href: '/app/investments',\n    icon: TrendingUp,\n    title: 'Investments'\n  },\n  {\n    href: '/app/net-worth',\n    icon: BarChartIcon,\n    title: 'Net Worth'\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  mobileDrawer: {\n    width: 256\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: 'calc(100% - 64px)'\n  }\n}));\n\n\nconst NavBar = ({ onMobileClose, openMobile }) => {\n  const location = useLocation();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n\n    <Box p={2}>\n      <List>\n        {items.map((item) => (\n          <NavItem\n            href={item.href}\n            key={item.title}\n            title={item.title}\n            icon={item.icon}\n          />\n        ))}\n      </List>\n     \n\n      <Box mt={10}>\n\n      <Grid\n        spacing={3}\n        container\n        direction=\"column\"\n        justify=\"flex-end\"\n        alignItems=\"stretch\"\n      >\n        <Grid item>\n          <SelectYears/>\n        </Grid>\n          <Grid\n            item >\n            <ExpectedMonthlyIncome />\n\n          </Grid>\n          <Grid\n            item >\n            <NetWorthTotal />\n\n          </Grid>\n          <Grid\n            item >\n            <AmountInvested />\n\n          </Grid>\n      </Grid>\n    </Box>\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => { },\n  openMobile: false\n};\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Typography,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Logo from 'src/components/Logo';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  }\n}));\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        <Hidden smDown>\n          <Box ml={3}>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h1\">\n              Ultimate Fire Calculator\n          </Typography>\n          </Box>\n        </Hidden>\n\n        <Hidden mdUp>\n          <Box>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h1\">\n              UFC\n          </Typography>\n\n          </Box>\n        </Hidden>\n        <Box flexGrow={1} />\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n","import React, { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport NavBar from './NavBar';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst DashboardLayout = () => {\n  const classes = useStyles();\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Toolbar,\n  makeStyles,\n  Typography,\n  Box\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {},\n  toolbar: {\n    height: 64\n  }\n}));\n\nconst TopBar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar className={classes.toolbar}>\n        <Box mb={3}>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h1\">\n            Ultimate Fire Calculator\n          </Typography>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopBar;\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst MainLayout = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TopBar />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainLayout;\n","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  Divider,\n  Button,\n  TextField,\n  InputAdornment\n} from '@material-ui/core';\nimport { Formik, Form, useField } from \"formik\";\nimport { string, number, object } from \"yup\";\n\n\n\nconst Input = ({ label, inputProps, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input> and alse replace ErrorMessage entirely.\n    const [field, meta] = useField(props);\n    return (\n      <>\n        <TextField\n          label={label}\n          className=\"text-input\"\n          variant=\"outlined\"\n          required\n          fullWidth\n          InputProps={inputProps ? inputProps : null}\n          {...field} {...props} />\n        {meta.touched && meta.error ? (\n          <div className=\"error\">{meta.error}</div>\n        ) : null}\n      </>\n    );\n  };\n  \n  \nexport const AddInvestment = ({ className, addInvestment, ...rest }) => {\n    return (\n      <Box>\n        <Card\n          className={clsx(className)}\n          {...rest}\n        >\n          <CardContent>\n  \n            <Typography\n              align=\"left\"\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"h4\"\n            >\n              Add your investments\n        </Typography>\n            <Divider />\n            <Box mt={3}>\n  \n              <Formik\n                initialValues={{\n                  name: \"\",\n                  initialAmount: \"\",\n                  expectedReturn: \"\",\n                  monthlyContribution: \"\"\n                }}\n                validationSchema={object({\n                  name: string(),\n                  initialAmount: number(),\n                  expectedReturn: number(),\n                  monthlyContribution: number()\n  \n                })}\n                onSubmit={(investment, { setSubmitting, resetForm }) => {\n                  addInvestment(investment)\n                  resetForm({})\n                  setSubmitting(false);\n                }}\n              >\n                <Form>\n                  <Grid\n                    container\n                    justify=\"space-evenly\"\n                    spacing={1}\n                  >\n                    <Grid\n                      item\n                    >\n                      <Input\n                        label=\"Investment Name\"\n                        name=\"name\"\n                        type=\"text\"\n                      />\n                    </Grid>\n  \n                    <Grid\n                      item\n                    >\n                      <Input\n                        label=\"Current Value\"\n                        name=\"initialAmount\"\n                        type=\"text\"\n                        inputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                £\n                        </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                    >\n                      <Input\n                        label=\"Annual Return\"\n                        name=\"expectedReturn\"\n                        type=\"text\"\n                        inputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Typography >\n                                %\n                        </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n                    </Grid>\n  \n                    <Grid\n                      item\n                    >\n                      <Input\n                        label=\"Monthly Contribution\"\n                        name=\"monthlyContribution\"\n                        type=\"text\"\n                        inputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                £\n                        </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n                    </Grid>\n                    <Button\n                      color=\"primary\"\n                      fullWidth\n                      variant=\"text\"\n                      type=\"submit\">Add</Button>\n                  </Grid>\n                </Form>\n              </Formik>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box >\n    );\n  };\n  ","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Typography,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    IconButton,\n    TextField,\n    Button,\n    InputAdornment\n} from '@material-ui/core';\nimport { DeleteOutlined, Edit, EditOutlined, SaveOutlined, Save } from '@material-ui/icons';\nimport { Formik, useField } from \"formik\";\nimport { string, number, object } from \"yup\";\nimport { all, create } from 'mathjs'\n\nconst math = create(all, {\n\tnumber: 'BigNumber',\n\tprecision: 32\n});\n\n\nconst Input = ({ label, inputProps, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input> and alse replace ErrorMessage entirely.\n    const [field, meta] = useField(props);\n    return (\n        <>\n            <TextField\n                label={label}\n                className=\"text-input\"\n                variant=\"standard\"\n                required\n                fullWidth\n                InputProps={inputProps ? inputProps : null}\n                {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <div className=\"error\">{meta.error}</div>\n            ) : null}\n        </>\n    );\n};\n\n\nexport const InvestmentList = memo(({ className, items = [], onItemEdit, onItemRemove, onItemSave, onItemCheck, ...rest }) => {\n\n        return (\n            <Box\n                mt={3}\n            >\n                <Card\n                    className={clsx(className)}\n                    {...rest}\n                >\n                    <CardContent>\n\n                        <Typography\n                            align=\"left\"\n                            color=\"textPrimary\"\n                            gutterBottom\n                            variant=\"h4\"\n                        >\n                            Investments\n                    </Typography>\n                        <Divider />\n\n                        <Box mt={3}>\n                            <TableContainer>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align=\"center\"></TableCell>\n                                            <TableCell align=\"center\">Name</TableCell>\n                                            <TableCell align=\"center\">Initial Amount</TableCell>\n                                            <TableCell align=\"center\">Expected Annual Return</TableCell>\n                                            <TableCell align=\"center\">Monthly Contribution</TableCell>\n                                            <TableCell align=\"center\">Annual Charge</TableCell>\n                                            <TableCell />\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {items.map((investment, idx) => \n                                            investment.editMode ? (\n                                                <Formik\n                                                    key={`form-${idx}`}\n                                                    initialValues={{\n                                                        name: investment.name,\n                                                        initialAmount: investment.initialAmount,\n                                                        expectedReturn: math.round(math.multiply(investment.expectedReturn, 100), 2),\n                                                        monthlyContribution: investment.monthlyContribution,\n                                                        annualCharge: math.round(math.multiply(investment.annualCharge, 100), 2)\n                                                    }}\n                                                    validationSchema={object({\n                                                        name: string(),\n                                                        initialAmount: number(),\n                                                        expectedReturn: number(),\n                                                        monthlyContribution: number(),\n                                                        annualCharge: number()\n                                                    })}\n                                                    onSubmit={(investment, { setStatus }) => {\n                                                        setStatus()\n                                                        onItemSave(investment, idx)\n                                                    }}\n                                                >{({ submitForm }) => (\n                                                    <TableRow key={idx}>\n                                                        <TableCell align=\"center\">\n                                                            <Save onClick={submitForm} >\n                                                                <SaveOutlined />\n                                                            </Save>\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Investment Name\"\n                                                                name=\"name\"\n                                                                type=\"text\"\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Current Value\"\n                                                                name=\"initialAmount\"\n                                                                type=\"text\"\n                                                                inputProps={{\n                                                                    startAdornment: (\n                                                                        <InputAdornment position=\"start\">\n                                                                            <Typography >\n                                                                                £\n                                                                    </Typography>\n                                                                        </InputAdornment>)\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Annual Return\"\n                                                                name=\"expectedReturn\"\n                                                                type=\"text\"\n                                                                inputProps={{\n                                                                    endAdornment: (\n                                                                        <InputAdornment position=\"end\">\n                                                                            <Typography >\n                                                                                %\n                                                                    </Typography>\n                                                                        </InputAdornment>)\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Monthly Contribution\"\n                                                                name=\"monthlyContribution\"\n                                                                type=\"text\"\n                                                                inputProps={{\n                                                                    startAdornment: (\n                                                                        <InputAdornment position=\"start\">\n                                                                            <Typography >\n                                                                                £\n                                                                    </Typography>\n                                                                        </InputAdornment>)\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Annual Charge\"\n                                                                name=\"annualCharge\"\n                                                                type=\"text\"\n                                                                inputProps={{\n                                                                    endAdornment: (\n                                                                        <InputAdornment position=\"end\">\n                                                                            <Typography >\n                                                                                %\n                                                                    </Typography>\n                                                                        </InputAdornment>)\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\">\n                                                            <IconButton aria-label=\"Delete Item\" onClick={() => onItemRemove(idx)}>\n                                                                <DeleteOutlined />\n                                                            </IconButton>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )}\n                                                </Formik>\n\n                                            ) : (\n                                                    <TableRow key={idx}>\n                                                        <TableCell align=\"center\">\n                                                            <Edit onClick={() => onItemEdit(idx)}>\n                                                                <EditOutlined />\n                                                            </Edit>\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            {investment.name}\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            £{investment.initialAmount}\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            {math.round(math.multiply(investment.expectedReturn, 100), 2)}%\n                                            </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            £{investment.monthlyContribution}\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            {math.round(math.multiply(investment.annualCharge, 100), 2)}%\n                                            </TableCell>\n                                                        <TableCell align=\"center\">\n                                                            <IconButton aria-label=\"Delete Item\" onClick={() => onItemRemove(idx)}>\n                                                                <DeleteOutlined />\n                                                            </IconButton>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                        )}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Box >\n        )\n    })\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n} from '@material-ui/core';\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext';\nimport { AddInvestment } from './AddInvestment'\nimport { InvestmentList } from './InvestmentList'\nconst Investments = ({ className, ...rest }) => {\n  return (\n    <div\n      className={clsx(className)}\n      {...rest}\n    >\n      <Card>\n        <CardContent>\n\n          <Typography\n            align=\"left\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            Investments\n                  </Typography>\n          <Divider />\n          <Box mt={3}>\n            <InvestmentContextConsumer>\n              {({ onItemSave, editInvestment, removeInvestment, investments, addInvestment }) => (\n                <>\n                  <AddInvestment addInvestment={addInvestment} />\n                  {(\n                    <InvestmentList onItemSave={onItemSave} onItemEdit={editInvestment} onItemRemove={removeInvestment} items={investments} />\n                  )}\n                </>\n              )}\n            </InvestmentContextConsumer>\n          </Box>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvestments.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Investments;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles,\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Investments from './Investments';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Index = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Investments\"\n    >\n      <Container maxWidth={false}>\n        <Investments />\n      </Container>\n    </Page>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Grid,\n    Typography,\n    colors,\n    makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100%'\n    },\n    avatar: {\n        backgroundColor: colors.red[600],\n        height: 56,\n        width: 56\n    },\n    differenceIcon: {\n        color: colors.red[900]\n    },\n    differenceValue: {\n        color: colors.red[900],\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst MonthlyTakeHomeCard = ({ className, expensesCost, totalTakeHome, difference, ...rest }) => {\n    const classes = useStyles();\n\n    return (\n\n        <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n        >\n            <CardContent>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"space-between\"\n                    spacing={3}\n                >\n                    <Grid item>\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h5\"\n                        >\n                            Monthly Net Income\n                                </Typography>\n                        <Typography\n                            color=\"textPrimary\"\n                            variant=\"h3\"\n                        >\n                            £{totalTakeHome}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h5\"\n                        >\n                            Total Expenses\n                                </Typography>\n                        <Typography\n                            color=\"textPrimary\"\n                            variant=\"h3\"\n                        >\n                            £{expensesCost}\n                        </Typography>\n                    </Grid>\n\n                    <Grid item>\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h5\"\n                        >\n                            Amount Left Over\n                                </Typography>\n                        <Typography\n                            color=\"textPrimary\"\n                            variant=\"h3\"\n                        >\n                            £{difference}\n                        </Typography>\n                    </Grid>\n\n                </Grid>\n                <Box\n                    mt={2}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                >\n                </Box>\n            </CardContent>\n        </Card>\n    );\n};\n\nMonthlyTakeHomeCard.propTypes = {\n    className: PropTypes.string\n};\n\nexport default MonthlyTakeHomeCard;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n  Box,\n  InputAdornment,\n  TextField,\n  Grid,\n  Button\n} from '@material-ui/core';\nimport { Formik, Form, useField } from \"formik\";\nimport { string, number, object } from \"yup\";\n\nconst Input = ({ label, type, inputProps, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <TextField\n        type={type}\n        label={label}\n        className=\"text-input\"\n        variant=\"outlined\"\n        required\n        fullWidth\n        InputProps={inputProps ? inputProps : null}\n        {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst Expenses = ({ className, addExpense, ...rest }) => {\n  return (\n    <Box>\n      <Card\n        className={clsx(className)}\n        {...rest}\n      >\n        <CardContent>\n          <Typography\n            align=\"left\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h4\"\n          >\n            List Your Monthly Expenses\n        </Typography>\n          <Divider />\n          <Box \n            mt={3}>\n          <Formik\n              initialValues={{\n                name: \"\",\n                cost: \"\"\n              }}\n              validationSchema={object({\n                name: string(),\n                cost: number(),\n              })}\n              onSubmit={(expense, { setSubmitting, resetForm }) => {\n                addExpense(expense)\n                resetForm({})\n                setSubmitting(false);\n              }}\n            >\n              <Form>\n                <Grid\n                  container\n                  justify=\"space-evenly\"\n                  spacing={1}\n                >\n                  <Grid\n                    item\n                  >\n                    <Input\n                      label=\"Expense Name\"\n                      name=\"name\"\n                      type=\"text\"\n                    />\n                  </Grid>\n\n                  <Grid\n                    item\n                  >\n                    <Input\n                      label=\"Expense cost\"\n                      name=\"cost\"\n                      type=\"tel\"\n                      inputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <Typography >\n                              £\n                      </Typography>\n                          </InputAdornment>)\n                      }}\n                    />\n                  </Grid>                \n                    <Button\n                      color=\"primary\"\n                      fullWidth\n                      variant=\"text\"\n                      type=\"submit\">Submit</Button>\n                </Grid>\n              </Form>\n            </Formik>\n          </Box>\n        </CardContent>\n      </Card>\n    </Box >\n  );\n};\n\nExpenses.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Expenses;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Typography,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    IconButton,\n    Checkbox\n} from '@material-ui/core';\nimport DeleteOutlined from '@material-ui/icons/DeleteOutlined';\n\n\nconst ExpenseList = memo(({ className, items = [], onItemRemove, onItemCheck, ...rest }) => (\n    <Box\n        mt={3}\n    >\n        <Card\n            className={clsx(className)}\n            {...rest}\n        >\n            <CardContent>\n\n                <Typography\n                    align=\"left\"\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"h4\"\n                >\n                    Expenses\n                    </Typography>\n                <Divider />\n\n                <Box mt={3}>\n                    <TableContainer>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"left\">Include?</TableCell>\n                                    <TableCell align=\"center\">Name</TableCell>\n                                    <TableCell align=\"center\">Cost</TableCell>\n                                    <TableCell align=\"center\">Remove</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {items.map((expense, idx) => (\n                                    <TableRow key={idx}>\n                                        <TableCell align=\"center\" padding=\"checkbox\">\n                                            <Checkbox\n                                                onClick={() => onItemCheck(idx)}\n                                                checked={expense.checked}\n                                            />\n                                        </TableCell>\n                                        <TableCell align=\"center\" >\n                                            {expense.name}\n                                        </TableCell>\n                                        <TableCell align=\"center\" >\n                                            £{expense.cost}\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            <IconButton aria-label=\"Delete Item\" onClick={() => onItemRemove(idx)}>\n                                                <DeleteOutlined />\n                                            </IconButton>\n                                        </TableCell>\n\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Box>\n            </CardContent>\n        </Card>\n    </Box>\n\n));\nexport default ExpenseList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  Divider\n} from '@material-ui/core';\nimport MonthlyTakeHomeCard from './MonthlyTakeHomeCard'\nimport AddExpenses from './AddExpenses'\nimport ExpenseList from './ExpenseList'\nimport { SalaryContextConsumer } from '../../../context/SalaryContext';\nimport { BudgetContextConsumer } from '../../../context/BudgetContext';\nimport { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\n\nconst ExpenseHeaderCard = ({ className, ...rest }) => {\n  return (\n    <div\n      className={clsx(className)}\n      {...rest}\n    >\n      <Card>\n        <CardContent>\n\n          <Typography\n            align=\"left\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            Budget\n                  </Typography>\n          <Divider />\n          <Box mt={3}>\n            <BudgetContextConsumer>\n              {budgetContext => (\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={3}\n                >\n                  <Grid\n                    item\n                    lg={6}\n                    sm={6}\n                    xl={6}\n                    xs={6}\n                  >\n                    <AddExpenses\n                      addExpense={budgetContext.addExpense}\n                    />\n                    {budgetContext.expenses.length > 0 && (\n                      <ExpenseList\n                        items={budgetContext.expenses}\n                        onItemCheck={idx => budgetContext.checkExpense(idx)}\n                        onItemRemove={idx => budgetContext.removeExpense(idx)}\n                      />\n                    )}\n                  </Grid>\n\n                  <Grid\n                    item\n                    lg={6}\n                    sm={6}\n                    xl={6}\n                    xs={6}\n                  >\n                    <SalaryContextConsumer>\n                      {({ userTax, }) => userTax.totalTakeHome && (\n                        <MonthlyTakeHomeCard totalTakeHome={math.round(math.divide(userTax.totalTakeHome, 12), 2)} difference={math.round(math.subtract(math.divide(userTax.totalTakeHome, 12), budgetContext.expenseTotal), 2)} expensesCost={budgetContext.expenseTotal} />\n                      )}\n                    </SalaryContextConsumer>\n                  </Grid>\n                </Grid>\n              )}\n            </BudgetContextConsumer>\n\n          </Box>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nExpenseHeaderCard.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ExpenseHeaderCard;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Budget from './Budget'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Index = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Budget\"\n    >\n      <Container maxWidth={false}>\n        <Box>\n          <Budget />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport { SalaryContextConsumer } from 'src/context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst TakeHomeIncome = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <SalaryContextConsumer>\n      {context => (\n        <Card\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <CardContent>\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Grid item>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"h6\"\n                  >\n                  Annual Take Home Pay\n                </Typography>\n                </Grid>\n\n                <Grid item> \n                <Typography\n                  color=\"textPrimary\"\n                  gutterBottom\n                  variant=\"h3\"\n                >\n                  £{context.userTax.totalTakeHome || 0 }\n              </Typography>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      )}\n    </SalaryContextConsumer>\n  );\n};\n\nTakeHomeIncome.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TakeHomeIncome;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AreaChart, Area, XAxis, YAxis, ResponsiveContainer, Tooltip,\n} from 'recharts';\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\n\nconst colours = Object.values(colors.indigo)\n\n\nconst NetWorth = ({ investmentData, className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const chartData = {\n    data: investmentData\n  }\n\n  return investmentData.length > 0 && (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Net Worth Over Time\"\n      />\n      <Divider />\n      <CardContent>\n        <Box\n          height={600}\n          position=\"relative\"\n        >\n          <ResponsiveContainer width={\"100%\"} height=\"100%\">\n            <AreaChart\n              data={chartData.data}\n              margin={{\n                top: 10, right: 0, left: 30, bottom: 0,\n              }}\n            >\n\n              <XAxis fontFamily={theme.typography.fontFamily} />\n              <YAxis fontFamily={theme.typography.fontFamily} />\n              <Tooltip fontFamily={theme.typography.fontFamily} />\n              {\n                Object.keys(chartData.data[0])\n                  .filter(key => key !== 'year')\n                  .map((investmentType, i) =>\n                    <Area key={`${investmentType}-${i}`}type=\"monotone\" dataKey={investmentType} stackId='1' stroke={colours[i]} fill={colours[i]} />\n                  )}\n            </AreaChart>\n          </ResponsiveContainer>\n\n        </Box>\n      </CardContent>\n      <Divider />\n      {/* <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button>\n      </Box> */}\n    </Card>\n  );\n};\n\nNetWorth.propTypes = {\n  className: PropTypes.string\n};\n\nexport default NetWorth;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Typography,\n  colors,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\nimport {\n  PieChart, Pie, Tooltip, Cell, ResponsiveContainer\n} from 'recharts';\n\n\nconst data = [\n  { name: 'Pre Tax', value: 38 },\n  { name: 'Post Tax', value: 40 },\n\n];\nconst colours = Object.values(colors.green)\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst TrafficByDevice = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Saving Percentage (hardcoded)\" />\n      <Divider />\n      <CardContent>\n        <Box\n          height={300}\n          position=\"relative\"\n        >\n          <ResponsiveContainer width={\"100%\"} height=\"100%\">\n            <PieChart >\n              <Pie\n                data={data}\n                startAngle={180}\n                endAngle={0}\n                innerRadius={60}\n                outerRadius={80}\n                fill=\"#8884d8\"\n                paddingAngle={5}\n                dataKey=\"value\"\n                fontFamily={theme.typography.fontFamily}\n              >\n                {\n                  data.map((entry, index) => <Cell fontFamily={theme.typography.fontFamily} key={`cell-${index}`} fill={colours[index]} />)\n                }\n              </Pie>\n            </PieChart>\n          </ResponsiveContainer>\n\n        </Box>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          mt={2}\n        >\n          {data.map(({\n            color,\n            name,\n            value\n          }) => (\n              <Box\n                key={name}\n                p={1}\n                textAlign=\"center\"\n              >\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  {name}\n                </Typography>\n                <Typography\n                  style={{ color }}\n                  variant=\"h2\"\n                >\n                  {value}\n                %\n              </Typography>\n              </Box>\n            ))}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTrafficByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TrafficByDevice;\n","\n\nexport const convertCompoundDataToGraph = investments =>\n  investments.reduce((accum, investment) => {\n    for (const [year, months] of Object.entries(investment.compoundData)) {\n      let isYearInAccum = accum.find(entry => entry.year === year)\n      \n      if (isYearInAccum) {\n        isYearInAccum[investment.name] = months['Month 1'].balance\n      } else {\n        accum.push({\n          year,\n          [investment.name]: months['Month 1'].balance,\n        })\n      }\n    }\n\n    return accum\n  }, [])\n\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport TakeHomeIncome from './TakeHomeIncome';\nimport NetWorth from './NetWorth';\nimport TasksProgress from './NetWorthTotal';\nimport AmountInvestedPerMonth from './AmountInvestedPerMonth';\nimport TotalProfit from './ExpectedMonthlyIncome';\nimport TrafficByDevice from './SavingPercentage';\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext';\nimport { convertCompoundDataToGraph } from '../../../utils/convertCompoundDataToGraph';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard\"\n    >\n      <Container maxWidth={false}>\n        <InvestmentContextConsumer>\n          {({ investments }) => (\n\n\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                lg={3}\n                sm={6}\n                xl={3}\n                xs={12}\n              >\n                <TakeHomeIncome />\n              </Grid>\n              <Grid\n                item\n                lg={3}\n                sm={6}\n                xl={3}\n                xs={12}\n              >\n                <AmountInvestedPerMonth />\n              </Grid>\n              <Grid\n                item\n                lg={3}\n                sm={6}\n                xl={3}\n                xs={12}\n              >\n                <TasksProgress />\n              </Grid>\n              <Grid\n                item\n                lg={3}\n                sm={6}\n                xl={3}\n                xs={12}\n              >\n                <TotalProfit />\n              </Grid>\n              <Grid\n                item\n                lg={8}\n                md={12}\n                xl={9}\n                xs={12}\n              >\n                <NetWorth investmentData={convertCompoundDataToGraph(investments)} />\n              </Grid>\n              <Grid\n                item\n                lg={4}\n                md={6}\n                xl={3}\n                xs={12}\n              >\n                <TrafficByDevice />\n              </Grid>\n              <Grid\n                item\n                lg={4}\n                md={6}\n                xl={3}\n                xs={12}\n              >\n              </Grid>\n            </Grid>\n          )}\n        </InvestmentContextConsumer>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  image: {\n    marginTop: 50,\n    display: 'inline-block',\n    maxWidth: '100%',\n    width: 560\n  }\n}));\n\nconst NotFoundView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"404\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"md\">\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"h1\"\n          >\n            404: The page you are looking for isn’t here\n          </Typography>\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"subtitle2\"\n          >\n            You either tried some shady route or you came here by mistake.\n            Whichever it is, try using the navigation\n          </Typography>\n          <Box textAlign=\"center\">\n            <img\n              alt=\"Under development\"\n              className={classes.image}\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            />\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default NotFoundView;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  InputLabel,\n  Select,\n  Button,\n  Card,\n  MenuItem,\n  CardContent,\n  TextField,\n  InputAdornment,\n  Typography,\n  makeStyles,\n  Grid,\n  Divider\n} from '@material-ui/core';\nimport { Formik, Form, useField } from \"formik\";\nimport { number, object } from \"yup\";\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext';\nimport { all, create } from 'mathjs'\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Input = ({ label, type, inputProps, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <TextField\n        type={type}\n        label={label}\n        className=\"text-input\"\n        variant=\"outlined\"\n        required\n        fullWidth\n        InputProps={inputProps ? inputProps : null}\n        {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\n\nconst IncomeDetails = ({ setUserFinances, userTax, className, ...rest }) => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <InvestmentContextConsumer>{({ addMultipleInvestments }) => (\n        <Card>\n          <CardContent>\n\n            <Typography\n              align=\"left\"\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"h3\"\n            >\n              Your Circumstance\n                  </Typography>\n            <Divider />\n            <Box mt={3}>\n              <Formik\n                initialValues={{\n                  salary: userTax.salary || 0,\n                  personalPensionContribution: userTax.personalPensionContributionPercent ? math.round(math.multiply(userTax.personalPensionContributionPercent, 100), 2) : 0,\n                  employerPensionContribution: userTax.employerPensionContributionPercent ? math.round(math.multiply(userTax.employerPensionContributionPercent, 100), 2) : 0,\n                  taxFreePersonalAllowance: userTax.taxFreePersonalAllowance || 12500,\n                  studentLoanPlanType: userTax.studentLoan && userTax.studentLoan.studentLoanPlanType || 0\n                }}\n                validationSchema={object({\n                  salary: number(),\n                  personalPensionContribution: number(),\n                  employerPensionContribution: number(),\n                  taxFreePersonalAllowance: number(),\n                  studentLoanPlanType: number()\n                })}\n                onSubmit={(userFinance, { setSubmitting }) => {\n                  setUserFinances(userFinance, addMultipleInvestments)\n                  setSubmitting(false);\n                }}\n              >{({values, handleChange}) => (\n                <Form>\n                  <Grid\n                    container\n                    spacing={3}\n                  >\n                    <Grid\n                      item\n                      lg={6}\n                      md={6}\n                      xs={12}\n                    >\n                      <Input\n                        label=\"Annual Salary\"\n                        name=\"salary\"\n                        type=\"tel\"\n                        inputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                £\n                                    </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid\n                      item\n                      lg={6}\n                      md={6}\n                      xs={12}\n                    >\n\n                      <Input\n                        label=\"Personal Pension Contribution Percentage\"\n                        name=\"personalPensionContribution\"\n                        type=\"tel\"\n                        inputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                %\n                                    </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n\n                    </Grid>\n\n                    <Grid\n                      item\n                      lg={6}\n                      md={6}\n                      xs={12}\n                    >\n\n                      <Input\n                        label=\"Employer Pension Contribution Percentage\"\n                        name=\"employerPensionContribution\"\n                        type=\"tel\"\n                        inputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                %\n                                    </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n\n                    </Grid>\n\n                    <Grid\n                      item\n                      lg={6}\n                      md={6}\n                      xs={12}\n                    >\n                      <Input\n                        label=\"Tax Free Personal Allowance\"\n                        name=\"taxFreePersonalAllowance\"\n                        type=\"tel\"\n                        inputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                £\n                                    </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid\n                      item\n                      lg={6}\n                      md={6}\n                      xs={12}>\n\n                      <InputLabel id=\"plan-name\">Student Loan Type</InputLabel>\n\n                      <Select\n                        labelId=\"studentLoanPlanType\"\n                        id=\"studentLoanPlanType\"\n                        open={open}\n                        onClose={handleClose}\n                        onOpen={handleOpen}\n                        onChange={handleChange(\"studentLoanPlanType\")}\n                        value={values.studentLoanPlanType}\n                      >\n                        <MenuItem key={'plan0'} value={0}>{`No Loan`}</MenuItem>\n                        <MenuItem key={'plan1'} value={1}>{`Plan 1`}</MenuItem>\n                        <MenuItem key={'plan2'} value={2}>{`Plan 2`}</MenuItem>\n                      </Select>\n                    </Grid>\n                  </Grid>\n                  <Box\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    p={2}\n                    mt={3}>\n                    <Button\n                      type=\"submit\"\n                      color=\"primary\"\n                      fullWidth\n                      variant=\"text\">Calculate</Button>\n                  </Box>\n                </Form>\n              )}\n              </Formik>\n            </Box>\n          </CardContent>\n        </Card>\n      )}\n      </InvestmentContextConsumer>\n    </div >\n  );\n};\n\nIncomeDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default IncomeDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  statsItem: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  statsIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst IncomeTaxCard = ({ className, userTax, ...rest }) => {\n  const classes = useStyles();\n\n  return userTax.salary > 0 && (\n\n    <Box>\n\n\n      <Card\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <CardContent>\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h4\"\n          >\n            Income Tax\n        </Typography>\n          <Divider />\n          <Box mt={3} >\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Tax free allowance: £{userTax.incomeTax.taxFreePersonalAllowance}\n                </Typography>\n              </Grid>\n              {userTax.incomeTax.taxFreePersonalAllowanceRemovedBy100kTax && (\n                <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  100k Personal Allowance Deduction: £{userTax.incomeTax.taxFreePersonalAllowanceRemovedBy100kTax}\n                </Typography>\n              </Grid>\n              )}\n\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Total Income Tax: £{userTax.incomeTax.totalIncomeTax}\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Taxable Income: £{userTax.taxableIncome}\n                </Typography>\n              </Grid>       <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Tax paid at lower band: £{userTax.incomeTax.lowerBand.taxPaid}\n                </Typography>\n              </Grid>       <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Tax paid at medium band: £{userTax.incomeTax.mediumBand.taxPaid}\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xs={12}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  Tax paid at higher band: £{userTax.incomeTax.upperBand.taxPaid}\n                </Typography>\n              </Grid>\n              {userTax.studentLoan && userTax.studentLoan.yearlyAmountPaid > 0 && (\n                <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    align=\"center\"\n                    color=\"textPrimary\"\n                    variant=\"body1\"\n                  >\n                    Student Loan Paid: £{userTax.studentLoan.yearlyAmountPaid }\n                  </Typography>\n                </Grid>\n              )}\n            </Grid>\n          </Box>\n        </CardContent>\n        <Box flexGrow={1} />\n        <Divider />\n      </Card>\n    </Box>\n  );\n};\n\nIncomeTaxCard.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default IncomeTaxCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { SalaryContextConsumer } from '../../../context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  statsItem: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  statsIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst NationalInsuranceCard = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Box >\n      <SalaryContextConsumer>\n        {context => context.userTax.salary > 0 && (\n          <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n          >\n            <CardContent>\n\n              <Typography\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h4\"\n              >\n                National Insurance\n        </Typography>\n              <Divider />\n              <Box height=\"100%\" mt={3}>\n                <Grid\n                  container\n                  spacing={3}\n                >\n\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Typography\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      variant=\"body1\"\n                    >\n                      Total N.I. Paid: £{context.userTax.nationalInsuranceTax.totalNationalInsuranceTax}\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Typography\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      variant=\"body1\"\n                    >\n                      Tax paid at lower band: £{context.userTax.nationalInsuranceTax.lowerBand.taxPaid}\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Typography\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      variant=\"body1\"\n                    >\n                      Tax paid at medium band: £{context.userTax.nationalInsuranceTax.mediumBand.taxPaid}\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Typography\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      variant=\"body1\"\n                    >\n                      Tax paid at higher band: £{context.userTax.nationalInsuranceTax.upperBand.taxPaid}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Box>\n            </CardContent>\n            <Box />\n            <Divider />\n          </Card>\n        )}\n      </SalaryContextConsumer>\n    </Box>\n  );\n};\n\nNationalInsuranceCard.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default NationalInsuranceCard;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport UserFinance from './IncomeDetails';\nimport IncomeTaxCard from './IncomeTaxCard'\nimport NationalInsurance from './NationalInsuranceCard'\nimport BreakdownCard from './BreakdownCard';\nimport { SalaryContextConsumer } from '../../../context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst SalaryCalculator = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Salary Calculator\"\n    >\n      <SalaryContextConsumer>\n        {\n          ({ setUserFinances, userTax }) => (\n            <Container maxWidth={false}>\n              <UserFinance userTax={userTax} setUserFinances={setUserFinances}/>\n              <Box mt={3} >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={3}\n                >\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={6}\n                  >                  \n                  <IncomeTaxCard userTax={userTax} />\n                  </Grid>\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={6}\n                  >\n                    <NationalInsurance />\n                  </Grid>\n                </Grid>\n                {/* <BreakdownCard /> */}\n              </Box>\n            </Container>\n          )}\n      </SalaryContextConsumer>\n    </Page>\n  );\n};\n\nexport default SalaryCalculator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Divider,\n    Typography,\n    makeStyles,\n    Collapse,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    IconButton\n} from '@material-ui/core';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nimport { SalaryContextConsumer } from '../../../context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    table: {\n        minWidth: 650,\n    },\n    statsItem: {\n        alignItems: 'center',\n        display: 'flex'\n    },\n    statsIcon: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst BreakdownCard = ({ className, ...rest }) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <SalaryContextConsumer>\n            {context => context.userTax.salary > 0 && (\n                <Box mt={3}>\n                <Card\n                    className={clsx(classes.root, className)}\n                    {...rest}\n                >\n                    <CardContent>\n\n                        <Typography\n                            align=\"center\"\n                            color=\"textPrimary\"\n                            gutterBottom\n                            variant=\"h3\"\n                        >\n                            Tax Breakdown\n                        </Typography>\n                        <Divider />\n                        <Box mt={3}>\n                            <TableContainer component={Paper}>\n                                <Table className={classes.table} aria-label=\"simple table\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell />\n                                            <TableCell align=\"center\">Yearly</TableCell>\n                                            <TableCell align=\"center\">Monthly</TableCell>\n                                            <TableCell align=\"center\">Weekly</TableCell>\n                                            <TableCell align=\"center\">Daily</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        <TableRow key={'id'}>\n                                            <TableCell align=\"center\" >\n                                                <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                                                    {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                                                </IconButton>\n                                            </TableCell>\n\n\n                                            <TableCell align=\"center\" >\n                                                Gross Income\n                                        </TableCell>\n                                            <TableCell align=\"center\" >\n                                                £test\n                                        </TableCell>\n                                          \n\n                                            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                                                <Box margin={1}>\n                                                    <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                                        History\n                                                     </Typography>\n                                                    <Table size=\"small\" aria-label=\"purchases\">\n                                                        <TableHead>\n                                                            <TableRow>\n                                                                <TableCell>Date</TableCell>\n                                                                <TableCell>Customer</TableCell>\n                                                                <TableCell align=\"right\">Amount</TableCell>\n                                                                <TableCell align=\"right\">Total price ($)</TableCell>\n                                                            </TableRow>\n                                                        </TableHead>\n                                                        <TableBody>\n                                                            <TableRow key='id'>\n                                                                <TableCell component=\"th\" scope=\"row\">\n                                                                    date\n                                                                    </TableCell>\n                                                                <TableCell>id</TableCell>\n                                                                <TableCell align=\"right\">sigh</TableCell>\n                                                            </TableRow>\n                                                        </TableBody>\n                                                    </Table>\n                                                </Box>\n                                            </Collapse>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </Box>\n                    </CardContent>\n                    <Divider />\n                </Card>\n            </Box>\n            )}\n        </SalaryContextConsumer >\n    );\n};\n\nBreakdownCard.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default BreakdownCard;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/layouts/DashboardLayout';\nimport MainLayout from 'src/layouts/MainLayout';\nimport Investments from 'src/views/investments/Investments';\nimport Budget from 'src/views/budget/Budget';\nimport NetWorthDashboard from 'src/views/dashboard/DashboardView';\nimport NotFoundView from 'src/views/errors/NotFoundView';\nimport SalaryCalculator from 'src/views/salaryCalculator/SalaryCalculator';\nimport SettingsView from 'src/views/settings/SettingsView';\n\nconst routes = [\n  {\n    path: 'app',\n    element: <DashboardLayout />,\n    children: [\n      { path: 'investments', element: <Investments /> },\n      { path: 'budget', element: <Budget /> },\n      { path: 'net-worth', element: <NetWorthDashboard /> },\n      { path: 'salary-calculator', element: <SalaryCalculator /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  },\n  {\n    path: '/',\n    element: <MainLayout />,\n    children: [\n      { path: '404', element: <NotFoundView /> },\n      { path: '/', element: <Navigate to=\"/app/salary-calculator\" /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  }\n];\n\nexport default routes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Notifications = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Manage the notifications\"\n          title=\"Notifications\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Notifications\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Text Messages\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Messages\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {}\n}));\n\nconst Password = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Update password\"\n          title=\"Password\"\n        />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            margin=\"normal\"\n            name=\"confirm\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Update\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Password;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Notifications from './Notifications';\nimport Password from './Password';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst SettingsView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Settings\"\n    >\n      <Container maxWidth=\"lg\">\n        <Notifications />\n        <Box mt={3}>\n          <Password />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SettingsView;\n","import 'react-perfect-scrollbar/dist/css/styles.css';\nimport React from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\n\nconst App = () => {\n  const routing = useRoutes(routes);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {routing}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { SalaryContextProvider } from './context/SalaryContext'\nimport { BudgetContextProvider } from './context/BudgetContext'\nimport { InvestmentContextProvider } from './context/InvestmentContext'\n\nimport App from './App';\n\nReactDOM.render((\n  <HashRouter>\n    <SalaryContextProvider>\n      <BudgetContextProvider>\n        <InvestmentContextProvider>\n          <App />\n        </InvestmentContextProvider>\n      </BudgetContextProvider>\n    </SalaryContextProvider>\n  </HashRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}