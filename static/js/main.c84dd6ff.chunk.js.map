{"version":3,"sources":["serviceWorker.js","utils/calculatePreTaxDeductions.js","utils/calculateIncomeTax.js","utils/taxTypes.js","utils/calculateNationalInsurance.js","utils/calculateAllTax.js","context/SalaryContext.jsx","context/BudgetContext.jsx","utils/calculateCompoundInterest.js","context/InvestmentContext.jsx","components/GlobalStyles.js","theme/index.js","theme/shadows.js","theme/typography.js","layouts/DashboardLayout/NavBar/NavItem.js","views/dashboard/DashboardView/ExpectedMonthlyIncome.js","views/dashboard/DashboardView/NetWorthTotal.js","layouts/DashboardLayout/NavBar/index.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/investments/Investments/AddInvestment.jsx","views/investments/Investments/InvestmentList.jsx","views/investments/Investments/Investments.jsx","views/investments/Investments/index.js","views/budget/Budget/MonthlyTakeHomeCard.jsx","views/budget/Budget/AddExpenses.jsx","views/budget/Budget/ExpenseList.jsx","views/budget/Budget/Budget.jsx","views/budget/Budget/index.js","views/dashboard/DashboardView/TakeHomeIncome.js","views/dashboard/DashboardView/NetWorth.js","views/dashboard/DashboardView/InvestingPerMonth.js","views/dashboard/DashboardView/SavingPercentage.js","utils/convertCompoundDataToGraph.js","views/dashboard/DashboardView/index.js","views/errors/NotFoundView.js","views/salaryCalculator/SalaryCalculator/IncomeDetails.jsx","views/salaryCalculator/SalaryCalculator/IncomeTaxCard.jsx","views/salaryCalculator/SalaryCalculator/NationalInsuranceCard.jsx","views/salaryCalculator/SalaryCalculator/BreakdownCard.jsx","views/salaryCalculator/SalaryCalculator/index.jsx","views/settings/SettingsView/Notifications.js","views/settings/SettingsView/Password.js","views/settings/SettingsView/index.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","math","create","all","number","precision","BANDS","nationalInsuranceTaxBands","totalNationalInsuranceTax","weeklyNationalInsuranceTax","lowerBand","taxPercent","start","end","taxPaid","carryOver","mediumBand","upperBand","calculateAllTax","salary","taxFreePersonalAllowance","employerPensionContributionPercent","personalPensionContributionPercent","personalPensionContribution","multiply","employerPensionContribution","taxBreaks","taxBreaksTotal","reduce","accum","item","add","amount","taxableIncome","chain","subtract","done","calculatePreTaxDeductions","incomeTax","tax","band","difference","round","totalIncomeTax","calculateIncomeTax","incomeTaxBands","nationalInsuranceTax","divide","calculateNationalInsurance","totalTakeHome","React","createContext","Provider","Consumer","SalaryContextProvider","children","useState","userTax","setUserTax","value","setUserFinances","addMultipleInvestments","name","monthlyContribution","BudgetContextProvider","expenses","setExpenses","expenseTotal","length","filter","checked","acc","i","cost","addExpense","concat","parseFloat","checkExpense","idx","map","expense","index","removeExpense","_","calculateYearlyCompoundWithCharge","initialAmount","expectedReturn","annualCharge","noOfYearsToMature","compoundInterest","totalAmount","calculateMonthlyCompoundInterest","totalAmountAfterMaturing","balance","cumulativeInterest","earnedInterest","InvestmentContextProvider","investments","setInvestments","onItemSave","investment","editMode","investmentCopy","compoundData","addInvestment","getTotalNetWorthInXYears","year","investmentsToAdd","multipleInvestments","investment1","findIndex","newInvestments","removeInvestment","editInvestment","getExpectedMonthlyIncomeInXYears","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","theme","createMuiTheme","palette","background","dark","default","colors","common","paper","grey","primary","main","lightBlue","secondary","black","text","shadows","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","h1","fontWeight","letterSpacing","h2","h3","h4","h5","h6","overline","display","paddingTop","paddingBottom","button","color","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","root","ExpectedMonthlyIncome","Card","CardContent","Grid","container","justify","Typography","gutterBottom","variant","NetWorthTotal","items","DollarSign","Download","TrendingUp","BarChartIcon","SettingsIcon","mobileDrawer","desktopDrawer","top","NavBar","onMobileClose","openMobile","useLocation","useEffect","pathname","content","Box","p","List","key","direction","alignItems","mt","Hidden","lgUp","Drawer","anchor","onClose","open","mdDown","defaultProps","avatar","TopBar","onMobileNavOpen","AppBar","elevation","Toolbar","smDown","ml","mdUp","flexGrow","IconButton","onClick","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","toolbar","mb","MainLayout","Page","forwardRef","ref","Helmet","Input","label","inputProps","props","useField","field","meta","TextField","required","fullWidth","InputProps","touched","error","AddInvestment","align","Divider","initialValues","validationSchema","object","string","onSubmit","setSubmitting","resetForm","type","startAdornment","InputAdornment","position","endAdornment","InvestmentList","memo","onItemEdit","onItemRemove","onItemCheck","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","setStatus","submitForm","Save","SaveOutlined","aria-label","DeleteOutlined","Edit","EditOutlined","Investments","minHeight","Index","Container","maxWidth","red","differenceIcon","differenceValue","MonthlyTakeHomeCard","expensesCost","Expenses","ExpenseList","Checkbox","ExpenseHeaderCard","budgetContext","lg","sm","xl","xs","AddExpenses","Budget","TakeHomeIncome","context","colours","Object","values","indigo","NetWorth","investmentData","useTheme","chartData","data","CardHeader","right","left","bottom","keys","investmentType","dataKey","stackId","stroke","fill","endIcon","green","InvestingPerMonth","TrafficByDevice","startAngle","endAngle","innerRadius","outerRadius","paddingAngle","entry","textAlign","style","convertCompoundDataToGraph","months","isYearInAccum","find","push","entries","Dashboard","md","image","marginTop","NotFoundView","flexDirection","alt","src","importButton","exportButton","IncomeDetails","useContext","InvestmentContextConsumer","userFinance","statsItem","statsIcon","IncomeTaxCard","NationalInsuranceCard","table","minWidth","BreakdownCard","setOpen","Paper","Collapse","in","timeout","unmountOnExit","scope","productCard","SalaryCalculator","Notifications","subheader","wrap","FormControlLabel","control","defaultChecked","Password","password","confirm","setValues","handleChange","event","target","onChange","SettingsView","routes","path","element","App","routing","useRoutes","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c84dd6ff.chunk.js","sourcesContent":["/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nexport function calculatePreTaxDeductions({ salary = 0, personalPensionContribution = 0 }, taxBreaks = []) {\n\n  const taxBreaksTotal = taxBreaks.reduce((accum, item) => math.add(accum, item.amount), 0)\n  let taxableIncome = math\n    .chain(salary)\n    .subtract(personalPensionContribution)\n    .subtract(taxBreaksTotal)\n    .done()\n\n  taxableIncome = taxableIncome > 0\n    ? taxableIncome = taxableIncome\n    : 0\n\n\n  return {\n    taxBreaksTotal,\n    taxableIncome\n  }\n\n}\n","import {all, create} from 'mathjs'\n\nconst BANDS = ['lowerBand', 'mediumBand', 'upperBand']\n\nconst math = create(all, {\n  number: 'BigNumber',  \n  precision: 32\n});\n\nconst ROUND_AMOUNT = 2\n\nexport const calculateIncomeTax = (tax, taxableIncome) => {\n  taxableIncome = math.subtract(taxableIncome, tax.taxFreePersonalAllowance)\n  \n  let carryOver = taxableIncome\n\n  for (const band of BANDS) {\n    const difference = math.subtract(tax[band].end, tax[band].start)\n\n    if (math.subtract(carryOver, difference) > 0) {\n      tax[band].taxPaid = math.round(math.multiply(difference, tax[band].taxPercent), ROUND_AMOUNT)\n      tax.totalIncomeTax = math.add(tax.totalIncomeTax, tax[band].taxPaid)\n      tax[band].carryOver = math.subtract(carryOver, difference)\n      carryOver = math.subtract(carryOver, difference)\n\n    } else {\n      tax[band].taxPaid = math.multiply(carryOver, tax[band].taxPercent) > 0 \n        ? math.round(math.multiply(carryOver, tax[band].taxPercent), ROUND_AMOUNT)\n        : 0\n\n      tax.totalIncomeTax = math.round(math.add(tax.totalIncomeTax, tax[band].taxPaid), ROUND_AMOUNT)\n      carryOver = 0\n      break\n    }\n  }\n\n  return tax\n}\n\n","export const incomeTaxBands = (taxFreePersonalAllowance = 12500 ) => ({\n  taxFreePersonalAllowance,\n  totalIncomeTax: 0,\n  lowerBand: {\n    taxPercent: .2,\n    start: taxFreePersonalAllowance + 0.01,\n    end: 50000,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  mediumBand: {\n    taxPercent: .4,\n    start: 50000.01,\n    end: 150000,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  upperBand: {\n    taxPercent: .45,\n    start: 150000.01,\n    end: 99999999,\n    taxPaid: 0,\n    carryOver: 0\n  }\n})\n\nexport const nationalInsuranceTaxBands = {\n  totalNationalInsuranceTax: 0,\n  weeklyNationalInsuranceTax: 0,\n  lowerBand: {\n    taxPercent: 0,\n    start: 0,\n    end: 183,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  mediumBand: {\n    taxPercent: .12,\n    start: 183.01,\n    end: 962.00,\n    taxPaid: 0,\n    carryOver: 0\n  },\n  upperBand: {\n    taxPercent: .02,\n    start: 962.01,\n    end: 99999999,\n    taxPaid: 0,\n    carryOver: 0\n  }\n}\n","import { all, create } from 'mathjs'\n\nconst BANDS = ['lowerBand', 'mediumBand', 'upperBand']\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst WEEKS_IN_YEAR = 52\nconst ROUND_AMOUNT = 2\n\n\nexport const calculateNationalInsurance = (tax, taxableIncome) => {\n  const weeklyIncome = math.divide(taxableIncome, WEEKS_IN_YEAR)\n\n  let carryOver = weeklyIncome\n\n  for (const band of BANDS) {\n    const difference = math.subtract(tax[band].end, tax[band].start)\n    if (math.subtract(carryOver, difference) > 0) {\n      tax[band].taxPaid = math.round(math.multiply(difference, tax[band].taxPercent), ROUND_AMOUNT)\n      tax.weeklyNationalInsuranceTax = math.add(tax.weeklyNationalInsuranceTax, tax[band].taxPaid)\n\n\n      tax[band].carryOver = math.subtract(carryOver, difference)\n      carryOver = math.subtract(carryOver, difference)\n\n    } else {\n      tax[band].taxPaid = math.multiply(carryOver, tax[band].taxPercent) > 0\n        ? math.round(math.multiply(carryOver, tax[band].taxPercent), ROUND_AMOUNT)\n        : 0\n\n      tax.weeklyNationalInsuranceTax = math.add(tax.weeklyNationalInsuranceTax, tax[band].taxPaid)\n      carryOver = 0\n      break\n    }\n  }\n\n  tax.totalNationalInsuranceTax = math.round(math.multiply(tax.weeklyNationalInsuranceTax, WEEKS_IN_YEAR), ROUND_AMOUNT)\n  return tax\n}\n\n","import { all, create } from 'mathjs'\nimport { calculatePreTaxDeductions } from './calculatePreTaxDeductions'\nimport { calculateIncomeTax }  from './calculateIncomeTax'\nimport { incomeTaxBands, nationalInsuranceTaxBands} from './taxTypes';\nimport {calculateNationalInsurance }  from './calculateNationalInsurance'\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nexport default function calculateAllTax({\n  salary = 0, \n  taxFreePersonalAllowance = 12500,\n  employerPensionContributionPercent = 0,\n  personalPensionContributionPercent = 0}) {\n\n\n    const personalPensionContribution = math.multiply(personalPensionContributionPercent, salary)\n    const employerPensionContribution = math.multiply(employerPensionContributionPercent, salary)\n  \n    const { taxBreaksTotal, taxableIncome} = calculatePreTaxDeductions({taxFreePersonalAllowance, salary, personalPensionContribution }) //TODO : Tax breaks\n\n    const incomeTax = calculateIncomeTax(incomeTaxBands(taxFreePersonalAllowance), taxableIncome)\n    const nationalInsuranceTax = calculateNationalInsurance(nationalInsuranceTaxBands, taxableIncome)\n    \n    return {\n      salary,\n      employerPensionContributionPercent,\n      personalPensionContributionPercent,\n      personalPensionContribution,\n      employerPensionContribution,\n      taxBreaksTotal,\n      taxableIncome,\n      incomeTax,\n      nationalInsuranceTax,\n      totalTakeHome: math.round(salary - personalPensionContribution - incomeTax.totalIncomeTax - nationalInsuranceTax.totalNationalInsuranceTax, 2)\n    }\n}\n","import React, { useState } from 'react';\nimport calculateAllTax from '../utils/calculateAllTax'\nimport { all, create } from 'mathjs'\nconst { Provider, Consumer } = React.createContext();\n\nconst math = create(all, {\n\tnumber: 'BigNumber',\n\tprecision: 32\n});\n\nconst SalaryContextProvider = ({ children }) => {\n\tconst [userTax, setUserTax] = useState({})\n\n\tconst setUserFinances = ({ salary, taxFreePersonalAllowance, personalPensionContribution = 0, employerPensionContribution = 0 }, addMultipleInvestments) => {\n\t\tconst tax = calculateAllTax({\n\t\t\tsalary,\n\t\t\ttaxFreePersonalAllowance,\n\t\t\temployerPensionContributionPercent: employerPensionContribution / 100,\n\t\t\tpersonalPensionContributionPercent: personalPensionContribution / 100\n\t\t})\n\t\tsetUserTax(tax)\n\n\t\taddMultipleInvestments([{\n\t\t\tname: 'Workplace Pension (employer contribution)',\n\t\t\tmonthlyContribution: math.round(math.divide(tax.employerPensionContribution, 12), 2)\n\t\t},\n\t\t{\n\t\t\tname: 'Workplace Pension (personal contribution)',\n\t\t\tmonthlyContribution: math.round(math.divide(tax.personalPensionContribution, 12), 2)\n\t\t}])\n\t}\n\n\treturn (\n\t\t<Provider value={{ setUserFinances, userTax }}>\n\t\t\t{children}\n\t\t</Provider>\n\t)\n}\n\nexport { SalaryContextProvider, Consumer as SalaryContextConsumer }","import React, { useState } from 'react';\nimport { all, create } from 'mathjs'\nconst { Provider, Consumer } = React.createContext();\n\nconst math = create(all, {\n    number: 'BigNumber',\n    precision: 32\n  });\n  \n  \n\nconst BudgetContextProvider = ({ children }) => {\n    const [expenses, setExpenses] = useState([]);\n\n\n      const addExpense = ({name, cost}) => {\n        if (name !== \"\" || !cost) {\n          setExpenses(\n            expenses.concat({\n              name,\n              cost: parseFloat(cost),\n              checked: true\n            })\n          );\n        }\n      }\n\n      const checkExpense = idx => {\n        setExpenses(\n          expenses.map((expense, index) => {\n            if (idx === index) {\n              expense.checked = !expense.checked;\n            }\n  \n            return expense;\n          })\n        );\n      }\n\n      const removeExpense = idx => {\n        setExpenses(expenses.filter((_, index) => idx !== index));\n      }\n    \n      const expenseTotal = expenses.length > 0\n      ? expenses.filter(item => item.checked).reduce((acc, i) => math.add(acc, i.cost), 0)\n      : 0\n\n\treturn (\n\t\t<Provider value={{ expenses, addExpense, checkExpense, removeExpense, expenseTotal }}>\n\t\t\t{children}\n\t\t</Provider>\n\t)\n}\n\nexport { BudgetContextProvider, Consumer as BudgetContextConsumer }","import { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\nconst MONTHS_OF_THE_YEAR = 12\nconst ROUND_AMOUNT = 2\n\nexport const calculateYearlyCompoundWithCharge = ({\n  initialAmount = 0, \n  expectedReturn= 0, \n  monthlyContribution = 0,\n  annualCharge = 0,\n  noOfYearsToMature = 0\n}) => {\n  const compoundInterest = {}\n  let totalAmount = initialAmount;\n\n  // forgive for starting at 1 plz god. Makes years easier\n  for (let i = 1; i <= noOfYearsToMature; i++ ) {  \n    compoundInterest[`Year ${i}`] = calculateMonthlyCompoundInterest({\n      totalAmount, \n      expectedReturn, \n      monthlyContribution\n    })\n\n    const totalAmountAfterMaturing = compoundInterest[`Year ${i}`][`Month ${MONTHS_OF_THE_YEAR}`].balance\n    \n    totalAmount = annualCharge\n    ? math.round(math.subtract(totalAmountAfterMaturing, math.multiply(totalAmountAfterMaturing, annualCharge)), ROUND_AMOUNT)\n    : totalAmountAfterMaturing\n  }\n\n  return compoundInterest\n}\n\nexport const calculateMonthlyCompoundInterest = ({\n    totalAmount, \n    expectedReturn, \n    monthlyContribution,\n  }) => {\n  const compoundInterest = {}\n\n  let balance = totalAmount\n  let  cumulativeInterest = 0;\n  \n  // forgive for starting at 1 plz god. Makes years easier\n  for (let i = 1; i <= MONTHS_OF_THE_YEAR; i++ ) {  \n    const earnedInterest = math.chain(balance).multiply(expectedReturn).divide(MONTHS_OF_THE_YEAR).round(ROUND_AMOUNT).done()\n    cumulativeInterest = math.round(math.add(cumulativeInterest, earnedInterest), ROUND_AMOUNT)\n\n    balance =  math.chain(balance).add(monthlyContribution).add(earnedInterest).round(ROUND_AMOUNT).done()\n    \n    compoundInterest[`Month ${i}`] = {\n      earnedInterest,\n      balance,\n      cumulativeInterest\n    }\n  }\n\n  return compoundInterest\n}\n","import React, { useState } from 'react';\nimport { calculateYearlyCompoundWithCharge } from 'src/utils/calculateCompoundInterest';\nconst { Provider, Consumer } = React.createContext();\n\nconst noOfYearsToMature = 20;\n\nconst InvestmentContextProvider = ({ children }) => {\n  const [investments, setInvestments] = useState([]);\n  \n  const addMultipleInvestments = (investmentsToAdd) => {\n    const multipleInvestments = investmentsToAdd.map(({ name = '', initialAmount = 0, expectedReturn = 0, monthlyContribution = 0, annualCharge = 0 }) => {\n      const investment = {\n        name,\n        initialAmount: parseFloat(initialAmount),\n        expectedReturn: parseFloat(expectedReturn / 100),\n        monthlyContribution: parseFloat(monthlyContribution),\n        noOfYearsToMature: noOfYearsToMature,\n        annualCharge: parseFloat(annualCharge),\n        editMode: false\n      }\n\n      return {\n        ...investment,\n        compoundData: calculateYearlyCompoundWithCharge(investment)\n      }\n    })\n\n    setInvestments([\n      ...multipleInvestments,\n      ...investments.filter(investment1 => multipleInvestments.findIndex(newInvestments => newInvestments.name === investment1.name) === -1)\n    ])\n  }\n\n  const addInvestment = ({ name = '', initialAmount = 0, expectedReturn = 0, monthlyContribution = 0, annualCharge = 0 }) => {\n    const investment = {\n      name,\n      initialAmount: parseFloat(initialAmount),\n      expectedReturn: parseFloat(expectedReturn / 100),\n      monthlyContribution: parseFloat(monthlyContribution),\n      noOfYearsToMature: noOfYearsToMature,\n      annualCharge: parseFloat(annualCharge),\n      editMode: false\n    }\n\n    setInvestments([\n      ...investments.filter(investment => investment.name !== name),\n      {\n        ...investment,\n        compoundData: calculateYearlyCompoundWithCharge(investment)\n      }\n    ])\n  }\n\n  const editInvestment = idx => {\n    setInvestments(\n      investments.map((investment, index) => {\n        if (idx === index) {\n          investment.editMode = true;\n        }\n\n        return investment;\n      })\n    );\n  }\n\n  const onItemSave = ({ name = '', initialAmount = 0, expectedReturn = 0, monthlyContribution = 0, annualCharge = 0 }, idx) => {\n    const investment = {\n      name,\n      initialAmount: parseFloat(initialAmount),\n      expectedReturn: parseFloat(expectedReturn / 100),\n      monthlyContribution: parseFloat(monthlyContribution),\n      noOfYearsToMature: noOfYearsToMature,\n      annualCharge: parseFloat(annualCharge),\n      editMode: false\n    }\n\n    const investmentCopy = [...investments]\n\n\n    investmentCopy[idx] = {\n      ...investment,\n      compoundData: calculateYearlyCompoundWithCharge(investment)\n    }\n   \n    setInvestments(investmentCopy)\n  }\n\n  const removeInvestment = idx => {\n    setInvestments(investments.filter((_, index) => idx !== index));\n  }\n\n  const getExpectedMonthlyIncomeInXYears = year => investments.length > 0\n    ? investments.reduce((accum, investment) => accum + investment.compoundData[`Year ${year}`]['Month 12'].earnedInterest, 0)\n    : 0\n\n  const getTotalNetWorthInXYears = year => investments.length > 0\n    ? investments.reduce((accum, investment) => accum + investment.compoundData[`Year ${year}`]['Month 12'].balance, 0)\n    : 0\n\n  return (\n    <Provider value={{ investments, onItemSave, addInvestment, getTotalNetWorthInXYears, addMultipleInvestments, removeInvestment, editInvestment, getExpectedMonthlyIncomeInXYears }}>\n      {children}\n    </Provider>\n  )\n}\n\nexport { InvestmentContextProvider, Consumer as InvestmentContextConsumer }","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      dark: '#F4F6F8',\n      default: colors.common.dark,\n      paper: colors.common.grey\n    },\n    primary: {\n      main: colors.lightBlue[700]\n    },\n    secondary: {\n      main: colors.common.black\n    },\n    text: {\n      primary: colors.common.black,\n      secondary: colors.common.black\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  fontFamily: `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n  fontSize: 14,\n  fontWeightLight: 300,\n  fontWeightRegular: 400,\n  fontWeightMedium: 500,\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {InvestmentContextConsumer} from '../../../context/InvestmentContext'\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst ExpectedMonthlyIncome = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              Expected Monthly Income in 20 years\n            </Typography>\n            <InvestmentContextConsumer>\n              {({ getExpectedMonthlyIncomeInXYears }) => (\n\n\n\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h3\"\n                >\n                  £{getExpectedMonthlyIncomeInXYears(20)}\n                </Typography>\n              )}\n            </InvestmentContextConsumer>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nExpectedMonthlyIncome.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ExpectedMonthlyIncome;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport {InvestmentContextConsumer} from '../../../context/InvestmentContext'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst NetWorthTotal = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              Total Net Worth in 20 Years\n            </Typography>\n            <InvestmentContextConsumer>\n              {({ getTotalNetWorthInXYears }) => (\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h3\"\n                >\n                  £{getTotalNetWorthInXYears(20)}\n                </Typography>\n              )}\n            </InvestmentContextConsumer>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nNetWorthTotal.propTypes = {\n  className: PropTypes.string\n};\n\nexport default NetWorthTotal;\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Drawer,\n  Hidden,\n  List,\n  makeStyles,\n  Grid\n} from '@material-ui/core';\nimport {\n  BarChart as BarChartIcon,\n  Settings as SettingsIcon,\n  TrendingUp,\n  DollarSign,\n  Download\n} from 'react-feather';\nimport NavItem from './NavItem';\nimport ExpectedMonthlyIncome from '../../../views/dashboard/DashboardView/ExpectedMonthlyIncome';\nimport NetWorthTotal from '../../../views/dashboard/DashboardView/NetWorthTotal';\n\n\nconst items = [\n  {\n    href: '/app/salary-calculator',\n    icon: DollarSign,\n    title: 'Salary Calculator'\n  },\n  {\n    href: '/app/budget',\n    icon: Download,\n    title: 'Budget'\n  },\n\n  {\n    href: '/app/investments',\n    icon: TrendingUp,\n    title: 'Investments'\n  },\n  {\n    href: '/app/net-worth',\n    icon: BarChartIcon,\n    title: 'Net Worth'\n  },\n  {\n    href: '/app/settings',\n    icon: SettingsIcon,\n    title: 'Settings'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  mobileDrawer: {\n    width: 256\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: 'calc(100% - 64px)'\n  }\n}));\n\nconst NavBar = ({ onMobileClose, openMobile }) => {\n  const classes = useStyles();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n\n    <Box p={2}>\n      <List>\n        {items.map((item) => (\n          <NavItem\n            href={item.href}\n            key={item.title}\n            title={item.title}\n            icon={item.icon}\n          />\n        ))}\n      </List>\n\n      <Grid\n        spacing={3}\n        container\n        direction=\"column\"\n        justify=\"flex-end\"\n        alignItems=\"center\"\n      >\n        <Box mt={10}>\n          <Grid\n            item >\n            <ExpectedMonthlyIncome />\n\n          </Grid>\n          <Grid\n            item >\n            <NetWorthTotal />\n\n          </Grid>\n          <Grid\n            item >\n            <ExpectedMonthlyIncome />\n\n          </Grid>\n        </Box>\n      </Grid>\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => { },\n  openMobile: false\n};\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Typography,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Logo from 'src/components/Logo';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  }\n}));\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        <Hidden smDown>\n          <Box ml={3}>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h1\">\n              Ultimate Fire Calculator\n          </Typography>\n          </Box>\n        </Hidden>\n\n        <Hidden mdUp>\n          <Box>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h1\">\n              UFC\n          </Typography>\n\n          </Box>\n        </Hidden>\n        <Box flexGrow={1} />\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n","import React, { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport NavBar from './NavBar';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst DashboardLayout = () => {\n  const classes = useStyles();\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Toolbar,\n  makeStyles,\n  Typography,\n  Box\n} from '@material-ui/core';\nimport Logo from 'src/components/Logo';\n\nconst useStyles = makeStyles(({\n  root: {},\n  toolbar: {\n    height: 64\n  }\n}));\n\nconst TopBar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar className={classes.toolbar}>\n        <Box mb={3}>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h1\">\n            Ultimate Fire Calculator\n          </Typography>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopBar;\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst MainLayout = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TopBar />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainLayout;\n","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  Divider,\n  Button,\n  TextField,\n  InputAdornment\n} from '@material-ui/core';\nimport { Formik, Form, useField } from \"formik\";\nimport { string, number, object } from \"yup\";\n\n\n\nconst Input = ({ label, inputProps, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input> and alse replace ErrorMessage entirely.\n    const [field, meta] = useField(props);\n    return (\n      <>\n        <TextField\n          label={label}\n          className=\"text-input\"\n          variant=\"outlined\"\n          required\n          fullWidth\n          InputProps={inputProps ? inputProps : null}\n          {...field} {...props} />\n        {meta.touched && meta.error ? (\n          <div className=\"error\">{meta.error}</div>\n        ) : null}\n      </>\n    );\n  };\n  \n  \nexport const AddInvestment = ({ className, addInvestment, ...rest }) => {\n    return (\n      <Box>\n        <Card\n          className={clsx(className)}\n          {...rest}\n        >\n          <CardContent>\n  \n            <Typography\n              align=\"left\"\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"h4\"\n            >\n              Add your investments\n        </Typography>\n            <Divider />\n            <Box mt={3}>\n  \n              <Formik\n                initialValues={{\n                  name: \"\",\n                  initialAmount: \"\",\n                  expectedReturn: \"\",\n                  monthlyContribution: \"\"\n                }}\n                validationSchema={object({\n                  name: string(),\n                  initialAmount: number(),\n                  expectedReturn: number(),\n                  monthlyContribution: number()\n  \n                })}\n                onSubmit={(investment, { setSubmitting, resetForm }) => {\n                  addInvestment(investment)\n                  resetForm({})\n                  setSubmitting(false);\n                }}\n              >\n                <Form>\n                  <Grid\n                    container\n                    justify=\"space-evenly\"\n                    spacing={1}\n                  >\n                    <Grid\n                      item\n                    >\n                      <Input\n                        label=\"Investment Name\"\n                        name=\"name\"\n                        type=\"text\"\n                      />\n                    </Grid>\n  \n                    <Grid\n                      item\n                    >\n                      <Input\n                        label=\"Current Value\"\n                        name=\"initialAmount\"\n                        type=\"text\"\n                        inputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                £\n                        </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                    >\n                      <Input\n                        label=\"Annual Return\"\n                        name=\"expectedReturn\"\n                        type=\"text\"\n                        inputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Typography >\n                                %\n                        </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n                    </Grid>\n  \n                    <Grid\n                      item\n                    >\n                      <Input\n                        label=\"Monthly Contribution\"\n                        name=\"monthlyContribution\"\n                        type=\"text\"\n                        inputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <Typography >\n                                £\n                        </Typography>\n                            </InputAdornment>)\n                        }}\n                      />\n                    </Grid>\n                    <Button\n                      color=\"primary\"\n                      fullWidth\n                      variant=\"text\"\n                      type=\"submit\">Add</Button>\n                  </Grid>\n                </Form>\n              </Formik>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box >\n    );\n  };\n  ","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Typography,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    IconButton,\n    TextField,\n    Button,\n    InputAdornment\n} from '@material-ui/core';\nimport { DeleteOutlined, Edit, EditOutlined, SaveOutlined, Save } from '@material-ui/icons';\nimport { Formik, useField } from \"formik\";\nimport { string, number, object } from \"yup\";\n\n\nconst Input = ({ label, inputProps, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input> and alse replace ErrorMessage entirely.\n    const [field, meta] = useField(props);\n    return (\n        <>\n            <TextField\n                label={label}\n                className=\"text-input\"\n                variant=\"standard\"\n                required\n                fullWidth\n                InputProps={inputProps ? inputProps : null}\n                {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <div className=\"error\">{meta.error}</div>\n            ) : null}\n        </>\n    );\n};\n\n\nexport const InvestmentList = memo(({ className, items = [], onItemEdit, onItemRemove, onItemSave, onItemCheck, ...rest }) => {\n\n        return (\n            <Box\n                mt={3}\n            >\n                <Card\n                    className={clsx(className)}\n                    {...rest}\n                >\n                    <CardContent>\n\n                        <Typography\n                            align=\"left\"\n                            color=\"textPrimary\"\n                            gutterBottom\n                            variant=\"h4\"\n                        >\n                            Investments\n                    </Typography>\n                        <Divider />\n\n                        <Box mt={3}>\n                            <TableContainer>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align=\"center\"></TableCell>\n                                            <TableCell align=\"center\">Name</TableCell>\n                                            <TableCell align=\"center\">Initial Amount</TableCell>\n                                            <TableCell align=\"center\">Expected Return</TableCell>\n                                            <TableCell align=\"center\">Monthly Contribution</TableCell>\n                                            <TableCell align=\"center\">Annual Charge</TableCell>\n                                            <TableCell />\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {items.map((investment, idx) => \n                                            investment.editMode ? (\n                                                <Formik\n                                                    key='form'\n                                                    initialValues={{\n                                                        name: investment.name,\n                                                        initialAmount: investment.initialAmount,\n                                                        expectedReturn: investment.expectedReturn * 100,\n                                                        monthlyContribution: investment.monthlyContribution\n                                                    }}\n                                                    validationSchema={object({\n                                                        name: string(),\n                                                        initialAmount: number(),\n                                                        expectedReturn: number(),\n                                                        monthlyContribution: number()\n\n                                                    })}\n                                                    onSubmit={(investment, { setStatus }) => {\n                                                        setStatus()\n                                                        onItemSave(investment, idx)\n                                                    }}\n                                                >{({ submitForm }) => (\n                                                    <TableRow key={idx}>\n                                                        <TableCell align=\"center\">\n                                                            <Save onClick={submitForm} >\n                                                                <SaveOutlined />\n                                                            </Save>\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Investment Name\"\n                                                                name=\"name\"\n                                                                type=\"text\"\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Current Value\"\n                                                                name=\"initialAmount\"\n                                                                type=\"text\"\n                                                                inputProps={{\n                                                                    startAdornment: (\n                                                                        <InputAdornment position=\"start\">\n                                                                            <Typography >\n                                                                                £\n                                                                    </Typography>\n                                                                        </InputAdornment>)\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Annual Return\"\n                                                                name=\"expectedReturn\"\n                                                                type=\"text\"\n                                                                inputProps={{\n                                                                    endAdornment: (\n                                                                        <InputAdornment position=\"end\">\n                                                                            <Typography >\n                                                                                %\n                                                                    </Typography>\n                                                                        </InputAdornment>)\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Monthly Contribution\"\n                                                                name=\"monthlyContribution\"\n                                                                type=\"text\"\n                                                                inputProps={{\n                                                                    startAdornment: (\n                                                                        <InputAdornment position=\"start\">\n                                                                            <Typography >\n                                                                                £\n                                                                    </Typography>\n                                                                        </InputAdornment>)\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            <Input\n                                                                label=\"Annual Charge\"\n                                                                name=\"annualCharge\"\n                                                                type=\"text\"\n                                                                inputProps={{\n                                                                    endAdornment: (\n                                                                        <InputAdornment position=\"end\">\n                                                                            <Typography >\n                                                                                %\n                                                                    </Typography>\n                                                                        </InputAdornment>)\n                                                                }}\n                                                            />\n                                                        </TableCell>\n                                                        <TableCell align=\"center\">\n                                                            <IconButton aria-label=\"Delete Item\" onClick={() => onItemRemove(idx)}>\n                                                                <DeleteOutlined />\n                                                            </IconButton>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )}\n                                                </Formik>\n\n                                            ) : (\n                                                    <TableRow key={idx}>\n                                                        <TableCell align=\"center\">\n                                                            <Edit onClick={() => onItemEdit(idx)}>\n                                                                <EditOutlined />\n                                                            </Edit>\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            {investment.name}\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            £{investment.initialAmount}\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            {investment.expectedReturn * 100}%\n                                            </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            £{investment.monthlyContribution}\n                                                        </TableCell>\n                                                        <TableCell align=\"center\" >\n                                                            {investment.annualCharge * 100}%\n                                            </TableCell>\n                                                        <TableCell align=\"center\">\n                                                            <IconButton aria-label=\"Delete Item\" onClick={() => onItemRemove(idx)}>\n                                                                <DeleteOutlined />\n                                                            </IconButton>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                        )}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Box >\n        )\n    })\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n} from '@material-ui/core';\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext';\nimport { AddInvestment } from './AddInvestment'\nimport { InvestmentList } from './InvestmentList'\nconst Investments = ({ className, ...rest }) => {\n  return (\n    <div\n      className={clsx(className)}\n      {...rest}\n    >\n      <Card>\n        <CardContent>\n\n          <Typography\n            align=\"left\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            Investments\n                  </Typography>\n          <Divider />\n          <Box mt={3}>\n            <InvestmentContextConsumer>\n              {({ onItemSave, editInvestment, removeInvestment, investments, addInvestment }) => (\n                <>\n                  <AddInvestment addInvestment={addInvestment} />\n                  {(\n                    <InvestmentList onItemSave={onItemSave} onItemEdit={editInvestment} onItemRemove={removeInvestment} items={investments} />\n                  )}\n                </>\n              )}\n            </InvestmentContextConsumer>\n          </Box>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvestments.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Investments;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles,\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Investments from './Investments';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Index = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Investments\"\n    >\n      <Container maxWidth={false}>\n        <Investments />\n      </Container>\n    </Page>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Grid,\n    Typography,\n    colors,\n    makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100%'\n    },\n    avatar: {\n        backgroundColor: colors.red[600],\n        height: 56,\n        width: 56\n    },\n    differenceIcon: {\n        color: colors.red[900]\n    },\n    differenceValue: {\n        color: colors.red[900],\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst MonthlyTakeHomeCard = ({ className, expensesCost, totalTakeHome, difference, ...rest }) => {\n    const classes = useStyles();\n\n    return (\n\n        <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n        >\n            <CardContent>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"space-between\"\n                    spacing={3}\n                >\n                    <Grid item>\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h5\"\n                        >\n                            Monthly Net Income\n                                </Typography>\n                        <Typography\n                            color=\"textPrimary\"\n                            variant=\"h3\"\n                        >\n                            £{totalTakeHome}\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h5\"\n                        >\n                            Total Expenses\n                                </Typography>\n                        <Typography\n                            color=\"textPrimary\"\n                            variant=\"h3\"\n                        >\n                            £{expensesCost}\n                        </Typography>\n                    </Grid>\n\n                    <Grid item>\n                        <Typography\n                            color=\"textSecondary\"\n                            gutterBottom\n                            variant=\"h5\"\n                        >\n                            Amount Left Over\n                                </Typography>\n                        <Typography\n                            color=\"textPrimary\"\n                            variant=\"h3\"\n                        >\n                            £{difference}\n                        </Typography>\n                    </Grid>\n\n                </Grid>\n                <Box\n                    mt={2}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                >\n                </Box>\n            </CardContent>\n        </Card>\n    );\n};\n\nMonthlyTakeHomeCard.propTypes = {\n    className: PropTypes.string\n};\n\nexport default MonthlyTakeHomeCard;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n  Box,\n  InputAdornment,\n  TextField,\n  Grid,\n  Button\n} from '@material-ui/core';\nimport { Formik, Form, useField } from \"formik\";\nimport { string, number, object } from \"yup\";\n\nconst Input = ({ label, type, inputProps, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <TextField\n        type={type}\n        label={label}\n        className=\"text-input\"\n        variant=\"outlined\"\n        required\n        fullWidth\n        InputProps={inputProps ? inputProps : null}\n        {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst Expenses = ({ className, addExpense, ...rest }) => {\n  return (\n    <Box>\n      <Card\n        className={clsx(className)}\n        {...rest}\n      >\n        <CardContent>\n          <Typography\n            align=\"left\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h4\"\n          >\n            List Your Monthly Expenses\n        </Typography>\n          <Divider />\n          <Box \n            mt={3}>\n          <Formik\n              initialValues={{\n                name: \"\",\n                cost: \"\"\n              }}\n              validationSchema={object({\n                name: string(),\n                cost: number(),\n              })}\n              onSubmit={(expense, { setSubmitting, resetForm }) => {\n                addExpense(expense)\n                resetForm({})\n                setSubmitting(false);\n              }}\n            >\n              <Form>\n                <Grid\n                  container\n                  justify=\"space-evenly\"\n                  spacing={1}\n                >\n                  <Grid\n                    item\n                  >\n                    <Input\n                      label=\"Expense Name\"\n                      name=\"name\"\n                      type=\"text\"\n                    />\n                  </Grid>\n\n                  <Grid\n                    item\n                  >\n                    <Input\n                      label=\"Expense cost\"\n                      name=\"cost\"\n                      type=\"tel\"\n                      inputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <Typography >\n                              £\n                      </Typography>\n                          </InputAdornment>)\n                      }}\n                    />\n                  </Grid>                \n                    <Button\n                      color=\"primary\"\n                      fullWidth\n                      variant=\"text\"\n                      type=\"submit\">Submit</Button>\n                </Grid>\n              </Form>\n            </Formik>\n          </Box>\n        </CardContent>\n      </Card>\n    </Box >\n  );\n};\n\nExpenses.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Expenses;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Typography,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    IconButton,\n    Checkbox\n} from '@material-ui/core';\nimport DeleteOutlined from '@material-ui/icons/DeleteOutlined';\n\n\nconst ExpenseList = memo(({ className, items = [], onItemRemove, onItemCheck, ...rest }) => (\n    <Box\n        mt={3}\n    >\n        <Card\n            className={clsx(className)}\n            {...rest}\n        >\n            <CardContent>\n\n                <Typography\n                    align=\"left\"\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"h4\"\n                >\n                    Expenses\n                    </Typography>\n                <Divider />\n\n                <Box mt={3}>\n                    <TableContainer>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"left\">Include?</TableCell>\n                                    <TableCell align=\"center\">Name</TableCell>\n                                    <TableCell align=\"center\">Cost</TableCell>\n                                    <TableCell align=\"center\">Remove</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {items.map((expense, idx) => (\n                                    <TableRow key={idx}>\n                                        <TableCell align=\"center\" padding=\"checkbox\">\n                                            <Checkbox\n                                                onClick={() => onItemCheck(idx)}\n                                                checked={expense.checked}\n                                            />\n                                        </TableCell>\n                                        <TableCell align=\"center\" >\n                                            {expense.name}\n                                        </TableCell>\n                                        <TableCell align=\"center\" >\n                                            £{expense.cost}\n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            <IconButton aria-label=\"Delete Item\" onClick={() => onItemRemove(idx)}>\n                                                <DeleteOutlined />\n                                            </IconButton>\n                                        </TableCell>\n\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Box>\n            </CardContent>\n        </Card>\n    </Box>\n\n));\nexport default ExpenseList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  Divider\n} from '@material-ui/core';\nimport MonthlyTakeHomeCard from './MonthlyTakeHomeCard'\nimport AddExpenses from './AddExpenses'\nimport ExpenseList from './ExpenseList'\nimport { SalaryContextConsumer } from '../../../context/SalaryContext';\nimport { BudgetContextConsumer } from '../../../context/BudgetContext';\nimport { all, create } from 'mathjs'\n\nconst math = create(all, {\n  number: 'BigNumber',\n  precision: 32\n});\n\n\nconst ExpenseHeaderCard = ({ className, ...rest }) => {\n  return (\n    <div\n      className={clsx(className)}\n      {...rest}\n    >\n      <Card>\n        <CardContent>\n\n          <Typography\n            align=\"left\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            Budget\n                  </Typography>\n          <Divider />\n          <Box mt={3}>\n            <BudgetContextConsumer>\n              {budgetContext => (\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-start\"\n                  alignItems=\"stretch\"\n                  spacing={3}\n                >\n                  <Grid\n                    item\n                    lg={6}\n                    sm={6}\n                    xl={6}\n                    xs={6}\n                  >\n                    <AddExpenses\n                      addExpense={budgetContext.addExpense}\n                    />\n                    {budgetContext.expenses.length > 0 && (\n                      <ExpenseList\n                        items={budgetContext.expenses}\n                        onItemCheck={idx => budgetContext.checkExpense(idx)}\n                        onItemRemove={idx => budgetContext.removeExpense(idx)}\n                      />\n                    )}\n                  </Grid>\n\n                  <Grid\n                    item\n                    lg={6}\n                    sm={6}\n                    xl={6}\n                    xs={6}\n                  >\n                    <SalaryContextConsumer>\n                      {({ userTax, }) => userTax.totalTakeHome && (\n                        <MonthlyTakeHomeCard totalTakeHome={math.round(math.divide(userTax.totalTakeHome, 12), 2)} difference={math.round(math.subtract(math.divide(userTax.totalTakeHome, 12), budgetContext.expenseTotal), 2)} expensesCost={budgetContext.expenseTotal} />\n                      )}\n                    </SalaryContextConsumer>\n                  </Grid>\n                </Grid>\n              )}\n            </BudgetContextConsumer>\n\n          </Box>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nExpenseHeaderCard.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ExpenseHeaderCard;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Budget from './Budget'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Index = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Budget\"\n    >\n      <Container maxWidth={false}>\n        <Box>\n          <Budget />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport { SalaryContextConsumer } from 'src/context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TakeHomeIncome = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <SalaryContextConsumer>\n      {context => (\n        <Card\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <CardContent>\n            <Grid\n              container\n              justify=\"space-between\"\n              spacing={3}\n            >\n              <Grid item>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                  variant=\"h6\"\n                >\n                  Annual Take Home Pay\n                </Typography>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h3\"\n                >\n                  £{context.userTax.totalTakeHome }\n              </Typography>\n              </Grid>\n            </Grid>\n            <Box\n              mt={2}\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n            </Box>\n          </CardContent>\n        </Card>\n      )}\n    </SalaryContextConsumer>\n  );\n};\n\nTakeHomeIncome.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TakeHomeIncome;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AreaChart, Area, XAxis, YAxis, ResponsiveContainer, Tooltip,\n} from 'recharts';\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\n\nconst colours = Object.values(colors.indigo)\n\n\nconst NetWorth = ({ investmentData, className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const chartData = {\n    data: investmentData\n  }\n\n  return investmentData.length > 0 && (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Net Worth Over Time\"\n      />\n      <Divider />\n      <CardContent>\n        <Box\n          height={400}\n          position=\"relative\"\n        >\n          <ResponsiveContainer width={\"100%\"} height=\"100%\">\n            <AreaChart\n              data={chartData.data}\n              margin={{\n                top: 10, right: 0, left: 0, bottom: 0,\n              }}\n            >\n\n              <XAxis fontFamily={theme.typography.fontFamily} />\n              <YAxis fontFamily={theme.typography.fontFamily} />\n              <Tooltip fontFamily={theme.typography.fontFamily} />\n              {\n                Object.keys(chartData.data[0])\n                  .filter(key => key !== 'year')\n                  .map((investmentType, i) =>\n                    <Area type=\"monotone\" dataKey={investmentType} stackId='1' stroke={colours[i]} fill={colours[i]} />\n                  )}\n            </AreaChart>\n          </ResponsiveContainer>\n\n        </Box>\n      </CardContent>\n      <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nNetWorth.propTypes = {\n  className: PropTypes.string\n};\n\nexport default NetWorth;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.green[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.green[900]\n  },\n  differenceValue: {\n    color: colors.green[900],\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst InvestingPerMonth = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              Amount Invested Per Month\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              £3010\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nInvestingPerMonth.propTypes = {\n  className: PropTypes.string\n};\n\nexport default InvestingPerMonth;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Typography,\n  colors,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\nimport {\n  PieChart, Pie, Tooltip, Cell, ResponsiveContainer\n} from 'recharts';\n\n\nconst data = [\n  { name: 'Pre Tax', value: 38 },\n  { name: 'Post Tax', value: 40 },\n\n];\nconst colours = Object.values(colors.green)\n\n\nconst renderLabel = function(entry) {\n  return `${entry.name}: ${entry.value}%`;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst TrafficByDevice = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Saving Percentage\" />\n      <Divider />\n      <CardContent>\n        <Box\n          height={300}\n          position=\"relative\"\n        >\n          <ResponsiveContainer width={\"100%\"} height=\"100%\">\n            <PieChart >\n              <Pie\n                data={data}\n                startAngle={180}\n                endAngle={0}\n                innerRadius={60}\n                outerRadius={80}\n                fill=\"#8884d8\"\n                paddingAngle={5}\n                dataKey=\"value\"\n                fontFamily={theme.typography.fontFamily}\n              >\n                {\n                  data.map((entry, index) => <Cell fontFamily={theme.typography.fontFamily} key={`cell-${index}`} fill={colours[index]} />)\n                }\n              </Pie>\n            </PieChart>\n          </ResponsiveContainer>\n\n        </Box>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          mt={2}\n        >\n          {data.map(({\n            color,\n            name,\n            value\n          }) => (\n              <Box\n                key={name}\n                p={1}\n                textAlign=\"center\"\n              >\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  {name}\n                </Typography>\n                <Typography\n                  style={{ color }}\n                  variant=\"h2\"\n                >\n                  {value}\n                %\n              </Typography>\n              </Box>\n            ))}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTrafficByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TrafficByDevice;\n","\n\nexport const convertCompoundDataToGraph = investments =>\n  investments.reduce((accum, investment) => {\n    for (const [year, months] of Object.entries(investment.compoundData)) {\n      let isYearInAccum = accum.find(entry => entry.year === year)\n      \n      if (isYearInAccum) {\n        isYearInAccum[investment.name] = months['Month 1'].balance\n      } else {\n        accum.push({\n          year,\n          [investment.name]: months['Month 1'].balance,\n        })\n      }\n    }\n\n    return accum\n  }, [])\n\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport TakeHomeIncome from './TakeHomeIncome';\nimport NetWorth from './NetWorth';\nimport TasksProgress from './NetWorthTotal';\nimport InvestingPerMonth from './InvestingPerMonth';\nimport TotalProfit from './ExpectedMonthlyIncome';\nimport TrafficByDevice from './SavingPercentage';\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext';\nimport { convertCompoundDataToGraph } from '../../../utils/convertCompoundDataToGraph';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard\"\n    >\n      <Container maxWidth={false}>\n        <InvestmentContextConsumer>\n          {({ investments }) => (\n\n\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                lg={3}\n                sm={6}\n                xl={3}\n                xs={12}\n              >\n                <TakeHomeIncome />\n              </Grid>\n              <Grid\n                item\n                lg={3}\n                sm={6}\n                xl={3}\n                xs={12}\n              >\n                <InvestingPerMonth />\n              </Grid>\n              <Grid\n                item\n                lg={3}\n                sm={6}\n                xl={3}\n                xs={12}\n              >\n                <TasksProgress />\n              </Grid>\n              <Grid\n                item\n                lg={3}\n                sm={6}\n                xl={3}\n                xs={12}\n              >\n                <TotalProfit />\n              </Grid>\n              <Grid\n                item\n                lg={8}\n                md={12}\n                xl={9}\n                xs={12}\n              >\n                <NetWorth investmentData={convertCompoundDataToGraph(investments)} />\n              </Grid>\n              <Grid\n                item\n                lg={4}\n                md={6}\n                xl={3}\n                xs={12}\n              >\n                <TrafficByDevice />\n              </Grid>\n              <Grid\n                item\n                lg={4}\n                md={6}\n                xl={3}\n                xs={12}\n              >\n              </Grid>\n            </Grid>\n          )}\n        </InvestmentContextConsumer>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  image: {\n    marginTop: 50,\n    display: 'inline-block',\n    maxWidth: '100%',\n    width: 560\n  }\n}));\n\nconst NotFoundView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"404\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"md\">\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"h1\"\n          >\n            404: The page you are looking for isn’t here\n          </Typography>\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"subtitle2\"\n          >\n            You either tried some shady route or you came here by mistake.\n            Whichever it is, try using the navigation\n          </Typography>\n          <Box textAlign=\"center\">\n            <img\n              alt=\"Under development\"\n              className={classes.image}\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            />\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default NotFoundView;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  Typography,\n  makeStyles,\n  Grid,\n  Divider\n} from '@material-ui/core';\nimport { Formik, Form, useField } from \"formik\";\nimport { number, object } from \"yup\";\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Input = ({ label, type, inputProps, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <TextField\n        type={type}\n        label={label}\n        className=\"text-input\"\n        variant=\"outlined\"\n        required\n        fullWidth\n        InputProps={inputProps ? inputProps : null}\n        {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\n\nconst IncomeDetails = ({ setUserFinances, userTax, className, ...rest }) => {\n  const { addMultipleInvestments } = useContext(InvestmentContextConsumer);\n\n  const classes = useStyles();\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardContent>\n\n          <Typography\n            align=\"left\"\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            Your Situation\n                  </Typography>\n          <Divider />\n          <Box mt={3}>\n            <Formik\n              initialValues={{\n                salary: userTax.salary || 0,\n                personalPensionContribution: userTax.personalPensionContributionPercent * 100 || 0,\n                employerPensionContribution: userTax.employerPensionContributionPercent * 100 || 0,\n                taxFreePersonalAllowance: userTax.taxFreePersonalAllowance || 12500,\n              }}\n              validationSchema={object({\n                salary: number(),\n                personalPensionContribution: number(),\n                employerPensionContribution: number(),\n                taxFreePersonalAllowance: number(),\n\n              })}\n              onSubmit={(userFinance, { setSubmitting }) => {\n                setUserFinances(userFinance, addMultipleInvestments)\n                setSubmitting(false);\n              }}\n            >\n              <Form>\n                <Grid\n                  container\n                  spacing={3}\n                >\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Input\n                      label=\"Annual Salary\"\n                      name=\"salary\"\n                      type=\"tel\"\n                      inputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <Typography >\n                              £\n                                    </Typography>\n                          </InputAdornment>)\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n\n                    <Input\n                      label=\"Personal Pension Contribution Percentage\"\n                      name=\"personalPensionContribution\"\n                      type=\"tel\"\n                      inputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"start\">\n                            <Typography >\n                              %\n                                    </Typography>\n                          </InputAdornment>)\n                      }}\n                    />\n\n                  </Grid>\n\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n\n                    <Input\n                      label=\"Employer Pension Contribution Percentage\"\n                      name=\"employerPensionContribution\"\n                      type=\"tel\"\n                      inputProps={{\n                        endAdornment: (\n                          <InputAdornment position=\"start\">\n                            <Typography >\n                              %\n                                    </Typography>\n                          </InputAdornment>)\n                      }}\n                    />\n\n                  </Grid>\n\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n\n                    <Input\n                      label=\"Tax Free Personal Allowance\"\n                      name=\"taxFreePersonalAllowance\"\n                      type=\"tel\"\n                      inputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <Typography >\n                              £\n                                    </Typography>\n                          </InputAdornment>)\n                      }}\n                    />\n\n                  </Grid>\n                </Grid>\n                <Box\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  p={2}\n                  mt={3}>\n                  <Button\n                    type=\"submit\"\n                    color=\"primary\"\n                    fullWidth\n                    variant=\"text\">Calculate</Button>\n                </Box>\n              </Form>\n            </Formik>\n          </Box>\n        </CardContent>\n      </Card>\n    </div >\n  );\n};\n\nIncomeDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default IncomeDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nimport { InvestmentContextConsumer } from '../../../context/InvestmentContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  statsItem: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  statsIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst IncomeTaxCard = ({ className, userTax, ...rest }) => {\n  const classes = useStyles();\n\n  return userTax.salary > 0 &&(\n  \n\n        <Card\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n            <CardContent>\n              <Typography\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h4\"\n              >\n                Income Tax\n        </Typography>\n              <Divider />\n              <Box mt={3} >\n                <Grid\n                  container\n                  spacing={3}\n                >\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Typography\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      variant=\"body1\"\n                    >\n                      Tax free allowance: £{userTax.incomeTax.taxFreePersonalAllowance}\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Typography\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      variant=\"body1\"\n                    >\n                      Total Income Tax: £{userTax.incomeTax.totalIncomeTax}\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Typography\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      variant=\"body1\"\n                    >\n                      Taxable Income: £{userTax.taxableIncome}\n                    </Typography>\n                  </Grid>       <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Typography\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      variant=\"body1\"\n                    >\n                      Tax paid at lower band: £{userTax.incomeTax.lowerBand.taxPaid}\n                    </Typography>\n                  </Grid>       <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Typography\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      variant=\"body1\"\n                    >\n                      Tax paid at medium band: £{userTax.incomeTax.mediumBand.taxPaid}\n                    </Typography>\n                  </Grid>       <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <Typography\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      variant=\"body1\"\n                    >\n                      Tax paid at higher band: £{userTax.incomeTax.upperBand.taxPaid}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Box>\n            </CardContent>\n            <Box flexGrow={1} />\n            <Divider />\n        </Card>\n  );\n};\n\nIncomeTaxCard.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default IncomeTaxCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { SalaryContextConsumer } from '../../../context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  statsItem: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  statsIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst NationalInsuranceCard = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <SalaryContextConsumer>\n      {context => context.userTax.salary > 0 &&  (\n        <Card\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <CardContent>\n\n            <Typography\n              align=\"center\"\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"h4\"\n            >\n              National Insurance\n        </Typography>\n            <Divider />\n            <Box height=\"100%\" mt={3}>\n            <Grid\n                container\n                spacing={3}\n              >\n\n                <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    align=\"center\"\n                    color=\"textPrimary\"\n                    variant=\"body1\"\n                  >\n                    Total N.I. Paid: £{context.userTax.nationalInsuranceTax.totalNationalInsuranceTax}\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    align=\"center\"\n                    color=\"textPrimary\"\n                    variant=\"body1\"\n                  >\n                    Tax paid at lower band: £{context.userTax.nationalInsuranceTax.lowerBand.taxPaid}\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    align=\"center\"\n                    color=\"textPrimary\"\n                    variant=\"body1\"\n                  >\n                    Tax paid at medium band: £{context.userTax.nationalInsuranceTax.mediumBand.taxPaid}\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    align=\"center\"\n                    color=\"textPrimary\"\n                    variant=\"body1\"\n                  >\n                    Tax paid at higher band: £{context.userTax.nationalInsuranceTax.upperBand.taxPaid}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Box>\n          </CardContent>\n          <Box  />\n          <Divider />\n        </Card>\n      )}\n    </SalaryContextConsumer>\n  );\n};\n\nNationalInsuranceCard.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default NationalInsuranceCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Divider,\n    Typography,\n    makeStyles,\n    Collapse,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    IconButton\n} from '@material-ui/core';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nimport { SalaryContextConsumer } from '../../../context/SalaryContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    table: {\n        minWidth: 650,\n    },\n    statsItem: {\n        alignItems: 'center',\n        display: 'flex'\n    },\n    statsIcon: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst BreakdownCard = ({ className, ...rest }) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <SalaryContextConsumer>\n            {context => context.userTax.salary > 0 && (\n                <Card\n                    className={clsx(classes.root, className)}\n                    {...rest}\n                >\n                    <CardContent>\n\n                        <Typography\n                            align=\"center\"\n                            color=\"textPrimary\"\n                            gutterBottom\n                            variant=\"h3\"\n                        >\n                            Tax Breakdown\n                        </Typography>\n                        <Divider />\n                        <Box mt={3}>\n                            <TableContainer component={Paper}>\n                                <Table className={classes.table} aria-label=\"simple table\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell />\n                                            <TableCell align=\"center\">Yearly</TableCell>\n                                            <TableCell align=\"center\">Monthly</TableCell>\n                                            <TableCell align=\"center\">Weekly</TableCell>\n                                            <TableCell align=\"center\">Daily</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        <TableRow key={'id'}>\n                                            <TableCell align=\"center\" >\n                                                <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                                                    {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                                                </IconButton>\n                                            </TableCell>\n\n\n                                            <TableCell align=\"center\" >\n                                                Gross Income\n                                        </TableCell>\n                                            <TableCell align=\"center\" >\n                                                £test\n                                        </TableCell>\n                                          \n\n                                            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                                                <Box margin={1}>\n                                                    <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                                        History\n                                                     </Typography>\n                                                    <Table size=\"small\" aria-label=\"purchases\">\n                                                        <TableHead>\n                                                            <TableRow>\n                                                                <TableCell>Date</TableCell>\n                                                                <TableCell>Customer</TableCell>\n                                                                <TableCell align=\"right\">Amount</TableCell>\n                                                                <TableCell align=\"right\">Total price ($)</TableCell>\n                                                            </TableRow>\n                                                        </TableHead>\n                                                        <TableBody>\n\n                                                            <TableRow key='id'>\n                                                                <TableCell component=\"th\" scope=\"row\">\n                                                                    date\n                                                                    </TableCell>\n                                                                <TableCell>id</TableCell>\n                                                                <TableCell align=\"right\">sigh</TableCell>\n\n                                                            </TableRow>\n\n                                                        </TableBody>\n                                                    </Table>\n                                                </Box>\n                                            </Collapse>\n\n                                        </TableRow>\n\n                                    </TableBody>\n\n                                </Table>\n                            </TableContainer>\n                        </Box>\n                    </CardContent>\n                    <Divider />\n                </Card>\n            )\n            }\n        </SalaryContextConsumer >\n    );\n};\n\nBreakdownCard.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default BreakdownCard;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport UserFinance from './IncomeDetails';\nimport IncomeTaxCard from './IncomeTaxCard'\nimport NationalInsurance from './NationalInsuranceCard'\nimport BreakdownCard from './BreakdownCard';\nimport { SalaryContextConsumer } from '../../../context/SalaryContext';\nimport { InvestmentContextConsumer } from 'src/context/InvestmentContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  productCard: {\n    height: '100%'\n  }\n}));\n\nconst SalaryCalculator = () => {\n  const classes = useStyles();\n\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Salary Calculator\"\n    >\n      <SalaryContextConsumer>\n        {\n          ({ setUserFinances, userTax }) => (\n            <Container maxWidth={false}>\n              <UserFinance userTax={userTax} setUserFinances={setUserFinances}/>\n              <Box mt={2} >\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"stretch\"\n                  spacing={3}\n\n                >\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n\n                    <IncomeTaxCard userTax={userTax} />\n\n\n                  </Grid>\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xs={12}\n                  >\n                    <NationalInsurance />\n                  </Grid>\n\n                  <Grid\n                    item\n                    lg={12}\n                    md={12}\n                    xs={12}\n                  >\n                    <BreakdownCard />\n\n                  </Grid>\n                </Grid>\n              </Box>\n            </Container>\n\n          )}\n\n      </SalaryContextConsumer>\n    </Page>\n  );\n};\n\nexport default SalaryCalculator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Notifications = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Manage the notifications\"\n          title=\"Notifications\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Notifications\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Text Messages\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Messages\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {}\n}));\n\nconst Password = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Update password\"\n          title=\"Password\"\n        />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            margin=\"normal\"\n            name=\"confirm\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Update\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Password;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Notifications from './Notifications';\nimport Password from './Password';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst SettingsView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Settings\"\n    >\n      <Container maxWidth=\"lg\">\n        <Notifications />\n        <Box mt={3}>\n          <Password />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SettingsView;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/layouts/DashboardLayout';\nimport MainLayout from 'src/layouts/MainLayout';\nimport Investments from 'src/views/investments/Investments';\nimport Budget from 'src/views/budget/Budget';\nimport NetWorthDashboard from 'src/views/dashboard/DashboardView';\nimport NotFoundView from 'src/views/errors/NotFoundView';\nimport SalaryCalculator from 'src/views/salaryCalculator/SalaryCalculator';\nimport SettingsView from 'src/views/settings/SettingsView';\n\nconst routes = [\n  {\n    path: 'app',\n    element: <DashboardLayout />,\n    children: [\n      { path: 'investments', element: <Investments /> },\n      { path: 'budget', element: <Budget /> },\n      { path: 'net-worth', element: <NetWorthDashboard /> },\n      { path: 'salary-calculator', element: <SalaryCalculator /> },\n      { path: 'settings', element: <SettingsView /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  },\n  {\n    path: '/',\n    element: <MainLayout />,\n    children: [\n      { path: '404', element: <NotFoundView /> },\n      { path: '/', element: <Navigate to=\"/app/salary-calculator\" /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  }\n];\n\nexport default routes;\n","import 'react-perfect-scrollbar/dist/css/styles.css';\nimport React from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\n\nconst App = () => {\n  const routing = useRoutes(routes);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {routing}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { SalaryContextProvider } from './context/SalaryContext'\nimport { BudgetContextProvider } from './context/BudgetContext'\nimport { InvestmentContextProvider } from './context/InvestmentContext'\n\nimport App from './App';\n\nReactDOM.render((\n  <HashRouter>\n    <SalaryContextProvider>\n      <BudgetContextProvider>\n        <InvestmentContextProvider>\n          <App />\n        </InvestmentContextProvider>\n      </BudgetContextProvider>\n    </SalaryContextProvider>\n  </HashRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}